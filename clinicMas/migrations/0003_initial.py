# Generated by Django 4.2.10 on 2024-02-26 06:15

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('clinicMas', '0002_remove_accessedcashservices_visitno_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='Accessobjects',
            fields=[
                ('objectname', models.CharField(db_column='ObjectName', max_length=40, primary_key=True, serialize=False)),
                ('objectcaption', models.CharField(db_column='ObjectCaption', max_length=60, unique=True)),
                ('objecttype', models.CharField(db_column='ObjectType', max_length=1)),
            ],
            options={
                'db_table': 'AccessObjects',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Accountactivations',
            fields=[
                ('activationid', models.AutoField(db_column='ActivationID', primary_key=True, serialize=False)),
                ('accountbillmode', models.CharField(blank=True, db_column='AccountBillMode', max_length=100, null=True)),
                ('accountbillno', models.CharField(blank=True, db_column='AccountBillNo', max_length=20, null=True)),
                ('accountname', models.CharField(blank=True, db_column='AccountName', max_length=41, null=True)),
                ('accountstatus', models.CharField(blank=True, db_column='AccountStatus', max_length=100, null=True)),
                ('entrymode', models.CharField(blank=True, db_column='EntryMode', max_length=100, null=True)),
                ('userfullname', models.CharField(blank=True, db_column='UserFullName', max_length=41, null=True)),
                ('loginid', models.CharField(blank=True, db_column='LoginID', max_length=20, null=True)),
                ('clientmachine', models.CharField(blank=True, db_column='ClientMachine', max_length=41, null=True)),
                ('recorddatetime', models.DateTimeField(blank=True, db_column='RecordDateTime', null=True)),
            ],
            options={
                'db_table': 'AccountActivations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Accounts',
            fields=[
                ('accountid', models.AutoField(db_column='AccountID', primary_key=True, serialize=False)),
                ('tranid', models.IntegerField(db_column='TranID')),
                ('tranno', models.CharField(db_column='TranNo', max_length=20)),
                ('clientfullname', models.CharField(blank=True, db_column='ClientFullName', max_length=100, null=True)),
                ('accountbillno', models.CharField(blank=True, db_column='AccountBillNo', max_length=20, null=True)),
                ('trandate', models.DateTimeField(blank=True, db_column='TranDate', null=True)),
                ('amount', models.DecimalField(blank=True, db_column='Amount', decimal_places=4, max_digits=19, null=True)),
                ('balance', models.DecimalField(blank=True, db_column='Balance', decimal_places=4, max_digits=19, null=True)),
                ('documentno', models.CharField(blank=True, db_column='DocumentNo', max_length=20, null=True)),
                ('referenceno', models.CharField(blank=True, db_column='ReferenceNo', max_length=20, null=True)),
                ('amountwords', models.CharField(blank=True, db_column='AmountWords', max_length=200, null=True)),
                ('amounttendered', models.DecimalField(blank=True, db_column='AmountTendered', decimal_places=4, max_digits=19, null=True)),
                ('exchangerate', models.DecimalField(blank=True, db_column='ExchangeRate', decimal_places=4, max_digits=19, null=True)),
                ('change', models.DecimalField(blank=True, db_column='Change', decimal_places=4, max_digits=19, null=True)),
                ('notes', models.CharField(blank=True, db_column='Notes', max_length=100, null=True)),
                ('clientmachine', models.CharField(blank=True, db_column='ClientMachine', max_length=40, null=True)),
                ('recorddatetime', models.DateTimeField(blank=True, db_column='RecordDateTime', null=True)),
                ('receiptbalance', models.DecimalField(blank=True, db_column='ReceiptBalance', decimal_places=4, max_digits=19, null=True)),
            ],
            options={
                'db_table': 'Accounts',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Accountstatement',
            fields=[
                ('transactionid', models.AutoField(db_column='TransactionID', primary_key=True, serialize=False)),
                ('transactionalno', models.CharField(db_column='TransactionalNo', max_length=20)),
                ('transactiondate', models.DateTimeField(blank=True, db_column='TransactionDate', null=True)),
                ('tobillcustomerno', models.CharField(blank=True, db_column='ToBillCustomerNo', max_length=20, null=True)),
                ('billno', models.CharField(blank=True, db_column='BillNo', max_length=20, null=True)),
                ('insuranceno', models.CharField(blank=True, db_column='InsuranceNo', max_length=20, null=True)),
                ('membercardno', models.CharField(blank=True, db_column='MemberCardNo', max_length=30, null=True)),
                ('amount', models.DecimalField(blank=True, db_column='Amount', decimal_places=4, max_digits=19, null=True)),
                ('balance', models.DecimalField(blank=True, db_column='Balance', decimal_places=4, max_digits=19, null=True)),
                ('notes', models.CharField(blank=True, db_column='Notes', max_length=200, null=True)),
                ('clientmachine', models.CharField(blank=True, db_column='ClientMachine', max_length=40, null=True)),
                ('recorddatetime', models.DateTimeField(blank=True, db_column='RecordDateTime', null=True)),
            ],
            options={
                'db_table': 'AccountStatement',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Accountwithdrawrequests',
            fields=[
                ('requestid', models.IntegerField(db_column='RequestID')),
                ('requestno', models.CharField(db_column='RequestNo', max_length=20, primary_key=True, serialize=False)),
                ('accountbillmodes', models.CharField(blank=True, db_column='AccountBillModes', max_length=100, null=True)),
                ('accountbillno', models.CharField(blank=True, db_column='AccountBillNo', max_length=20, null=True)),
                ('accountname', models.CharField(blank=True, db_column='AccountName', max_length=41, null=True)),
                ('withdrawtype', models.CharField(blank=True, db_column='WithdrawType', max_length=100, null=True)),
                ('requestdate', models.DateTimeField(blank=True, db_column='RequestDate', null=True)),
                ('amount', models.DecimalField(blank=True, db_column='Amount', decimal_places=4, max_digits=19, null=True)),
                ('withdrawrequestreason', models.CharField(blank=True, db_column='WithdrawRequestReason', max_length=100, null=True)),
                ('lastvaliditydatetime', models.DateTimeField(blank=True, db_column='LastValidityDateTime', null=True)),
                ('notes', models.CharField(blank=True, db_column='Notes', max_length=200, null=True)),
                ('requeststatus', models.CharField(blank=True, db_column='RequestStatus', max_length=100, null=True)),
                ('userfullname', models.CharField(blank=True, db_column='UserFullName', max_length=41, null=True)),
                ('loginid', models.CharField(blank=True, db_column='LoginID', max_length=20, null=True)),
                ('clientmachine', models.CharField(blank=True, db_column='ClientMachine', max_length=41, null=True)),
                ('recorddatetime', models.DateTimeField(blank=True, db_column='RecordDateTime', null=True)),
            ],
            options={
                'db_table': 'AccountWithdrawRequests',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Admissions',
            fields=[
                ('admissionid', models.IntegerField(db_column='AdmissionID')),
                ('admissionno', models.CharField(db_column='AdmissionNo', max_length=20, primary_key=True, serialize=False)),
                ('chartnumber', models.CharField(blank=True, db_column='ChartNumber', max_length=20, null=True)),
                ('admissiondatetime', models.DateTimeField(blank=True, db_column='AdmissionDateTime', null=True)),
                ('billno', models.CharField(blank=True, db_column='BillNo', max_length=20, null=True)),
                ('insuranceno', models.CharField(blank=True, db_column='InsuranceNo', max_length=20, null=True)),
                ('membercardno', models.CharField(blank=True, db_column='MemberCardNo', max_length=30, null=True)),
                ('mainmembername', models.CharField(blank=True, db_column='MainMemberName', max_length=41, null=True)),
                ('claimreferenceno', models.CharField(blank=True, db_column='ClaimReferenceNo', max_length=30, null=True)),
                ('copaypercent', models.DecimalField(blank=True, db_column='CoPayPercent', decimal_places=2, max_digits=5, null=True)),
                ('copayvalue', models.DecimalField(blank=True, db_column='CoPayValue', decimal_places=4, max_digits=19, null=True)),
                ('accesscashservices', models.BooleanField(blank=True, db_column='AccessCashServices', null=True)),
                ('smartcardapplicable', models.BooleanField(blank=True, db_column='SmartCardApplicable', null=True)),
                ('admissionnotes', models.CharField(blank=True, db_column='AdmissionNotes', max_length=2000, null=True)),
                ('clientmachine', models.CharField(blank=True, db_column='ClientMachine', max_length=40, null=True)),
                ('recorddatetime', models.DateTimeField(blank=True, db_column='RecordDateTime', null=True)),
                ('provisionaldiagnosis', models.CharField(blank=True, db_column='ProvisionalDiagnosis', max_length=2000, null=True)),
            ],
            options={
                'db_table': 'Admissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Alerts',
            fields=[
                ('alertid', models.AutoField(db_column='AlertID', primary_key=True, serialize=False)),
                ('notes', models.CharField(blank=True, db_column='Notes', max_length=200, null=True)),
                ('sentdate', models.DateTimeField(blank=True, db_column='SentDate', null=True)),
                ('senttime', models.CharField(blank=True, db_column='SentTime', max_length=8, null=True)),
            ],
            options={
                'db_table': 'Alerts',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Allergies',
            fields=[
                ('allergyno', models.CharField(db_column='AllergyNo', max_length=20, primary_key=True, serialize=False)),
                ('allergyname', models.CharField(blank=True, db_column='AllergyName', max_length=60, null=True, unique=True)),
            ],
            options={
                'db_table': 'Allergies',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Antenatal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('infectiondetails', models.CharField(blank=True, db_column='InfectionDetails', max_length=100, null=True)),
                ('detailsofaccident', models.CharField(blank=True, db_column='DetailsOfAccident', max_length=100, null=True)),
                ('drugdetails', models.CharField(blank=True, db_column='DrugDetails', max_length=100, null=True)),
                ('detailsofillness', models.CharField(blank=True, db_column='DetailsOfIllness', max_length=100, null=True)),
                ('clientmachine', models.CharField(blank=True, db_column='ClientMachine', max_length=40, null=True)),
                ('recorddatetime', models.DateTimeField(blank=True, db_column='RecordDateTime', null=True)),
            ],
            options={
                'db_table': 'Antenatal',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Antenatalenrollment',
            fields=[
                ('ancid', models.IntegerField(blank=True, db_column='ANCID', null=True)),
                ('ancno', models.CharField(db_column='ANCNo', max_length=20, primary_key=True, serialize=False)),
                ('gravida', models.IntegerField(blank=True, db_column='Gravida', null=True)),
                ('para', models.CharField(blank=True, db_column='Para', max_length=41, null=True)),
                ('lnmp', models.DateTimeField(blank=True, db_column='LNMP', null=True)),
                ('lnmpdatereliable', models.BooleanField(blank=True, db_column='LNMPDateReliable', null=True)),
                ('edd', models.DateTimeField(blank=True, db_column='EDD', null=True)),
                ('scandate', models.DateTimeField(blank=True, db_column='ScanDate', null=True)),
                ('medicalhistory', models.CharField(blank=True, db_column='MedicalHistory', max_length=200, null=True)),
                ('medicalhistorynotes', models.CharField(blank=True, db_column='MedicalHistoryNotes', max_length=2000, null=True)),
                ('bloodtransfusiondate', models.DateTimeField(blank=True, db_column='BloodTransfusionDate', null=True)),
                ('surgicalhistory', models.CharField(blank=True, db_column='SurgicalHistory', max_length=200, null=True)),
                ('surgicalhistorynotes', models.CharField(blank=True, db_column='SurgicalHistoryNotes', max_length=2000, null=True)),
                ('gynaecologicalhistory', models.CharField(blank=True, db_column='GynaecologicalHistory', max_length=200, null=True)),
                ('gynaecologicalhistorynotes', models.CharField(blank=True, db_column='GynaecologicalHistoryNotes', max_length=2000, null=True)),
                ('familyhistory', models.CharField(blank=True, db_column='FamilyHistory', max_length=200, null=True)),
                ('familyhistorynotes', models.CharField(blank=True, db_column='FamilyHistoryNotes', max_length=2000, null=True)),
                ('socialhistory', models.CharField(blank=True, db_column='SocialHistory', max_length=200, null=True)),
                ('socialhistorynotes', models.CharField(blank=True, db_column='SocialHistoryNotes', max_length=2000, null=True)),
                ('clientmachine', models.CharField(blank=True, db_column='ClientMachine', max_length=40, null=True)),
                ('recorddatetime', models.DateTimeField(blank=True, db_column='RecordDateTime', null=True)),
                ('enrollmentdate', models.DateTimeField(blank=True, db_column='EnrollmentDate', null=True)),
            ],
            options={
                'db_table': 'AntenatalEnrollment',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Assetregister',
            fields=[
                ('serialno', models.CharField(db_column='SerialNo', max_length=20, primary_key=True, serialize=False)),
                ('manufacturerid', models.CharField(blank=True, db_column='ManufacturerID', max_length=20, null=True)),
                ('institutionalid', models.CharField(blank=True, db_column='InstitutionalID', max_length=20, null=True)),
                ('photo', models.BinaryField(blank=True, db_column='Photo', null=True)),
                ('itemdescription', models.CharField(blank=True, db_column='ItemDescription', max_length=200, null=True)),
                ('brand', models.CharField(blank=True, db_column='Brand', max_length=200, null=True)),
                ('quantity', models.IntegerField(blank=True, db_column='Quantity', null=True)),
                ('value', models.IntegerField(blank=True, db_column='Value', null=True)),
                ('dateofpurchase', models.DateTimeField(blank=True, db_column='DateOfPurchase', null=True)),
                ('invoiceno', models.CharField(blank=True, db_column='InvoiceNo', max_length=20, null=True)),
                ('invoicedate', models.DateTimeField(blank=True, db_column='InvoiceDate', null=True)),
                ('dateofdelivery', models.DateTimeField(blank=True, db_column='DateOfDelivery', null=True)),
                ('salvagevalue', models.IntegerField(blank=True, db_column='SalvageValue', null=True)),
                ('depreciationrate', models.IntegerField(blank=True, db_column='DepreciationRate', null=True)),
                ('usefullife', models.IntegerField(blank=True, db_column='UsefulLife', null=True)),
                ('depreciationstartdate', models.DateTimeField(blank=True, db_column='DepreciationStartDate', null=True)),
                ('assignedto', models.CharField(blank=True, db_column='AssignedTo', max_length=200, null=True)),
                ('location', models.CharField(blank=True, db_column='Location', max_length=200, null=True)),
                ('servicingschedule', models.IntegerField(blank=True, db_column='ServicingSchedule', null=True)),
                ('clientmachine', models.CharField(blank=True, db_column='ClientMachine', max_length=40, null=True)),
                ('recorddatetime', models.DateTimeField(blank=True, db_column='RecordDateTime', null=True)),
            ],
            options={
                'db_table': 'AssetRegister',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Attachpackage',
            fields=[
                ('attachpackageid', models.AutoField(db_column='AttachPackageID', primary_key=True, serialize=False)),
                ('details', models.CharField(blank=True, db_column='Details', max_length=200, null=True)),
                ('packagevisitno', models.CharField(blank=True, db_column='PackageVisitNo', max_length=20, null=True)),
                ('packagestartdate', models.DateTimeField(blank=True, db_column='PackageStartDate', null=True)),
                ('packageenddate', models.DateTimeField(blank=True, db_column='PackageEndDate', null=True)),
                ('clientmachine', models.CharField(blank=True, db_column='ClientMachine', max_length=41, null=True)),
                ('recorddatetime', models.DateTimeField(blank=True, db_column='RecordDateTime', null=True)),
            ],
            options={
                'db_table': 'AttachPackage',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Audittrail',
            fields=[
                ('auditid', models.AutoField(db_column='AuditID', primary_key=True, serialize=False)),
                ('auditaction', models.CharField(db_column='AuditAction', max_length=1)),
                ('clientmachine', models.CharField(blank=True, db_column='ClientMachine', max_length=40, null=True)),
                ('userid', models.CharField(db_column='UserID', max_length=40)),
                ('fulldate', models.DateTimeField(db_column='FullDate')),
            ],
            options={
                'db_table': 'AuditTrail',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Bankaccounts',
            fields=[
                ('accountno', models.CharField(db_column='AccountNo', max_length=20, primary_key=True, serialize=False)),
                ('accountname', models.CharField(blank=True, db_column='AccountName', max_length=40, null=True)),
                ('clientmachine', models.CharField(blank=True, db_column='ClientMachine', max_length=40, null=True)),
                ('recorddatetime', models.DateTimeField(blank=True, db_column='RecordDateTime', null=True)),
            ],
            options={
                'db_table': 'BankAccounts',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Bankingregister',
            fields=[
                ('registerid', models.IntegerField(db_column='RegisterID')),
                ('registerno', models.CharField(db_column='RegisterNo', max_length=20, primary_key=True, serialize=False)),
                ('collectionstartdate', models.DateTimeField(blank=True, db_column='CollectionStartDate', null=True)),
                ('collectionenddate', models.DateTimeField(blank=True, db_column='CollectionEndDate', null=True)),
                ('bankingdate', models.DateTimeField(blank=True, db_column='BankingDate', null=True)),
                ('collectionsourcetypeid', models.CharField(blank=True, db_column='CollectionSourceTypeID', max_length=10, null=True)),
                ('accountname', models.CharField(blank=True, db_column='AccountName', max_length=20, null=True)),
                ('amountcollected', models.DecimalField(blank=True, db_column='AmountCollected', decimal_places=4, max_digits=19, null=True)),
                ('amountbanked', models.DecimalField(blank=True, db_column='AmountBanked', decimal_places=4, max_digits=19, null=True)),
                ('amountinwords', models.CharField(blank=True, db_column='AmountInWords', max_length=800, null=True)),
                ('exchangerate', models.DecimalField(blank=True, db_column='ExchangeRate', decimal_places=4, max_digits=19, null=True)),
                ('bankedby', models.CharField(blank=True, db_column='BankedBy', max_length=40, null=True)),
                ('clientmachine', models.CharField(blank=True, db_column='ClientMachine', max_length=40, null=True)),
                ('recorddatetime', models.DateTimeField(blank=True, db_column='RecordDateTime', null=True)),
            ],
            options={
                'db_table': 'BankingRegister',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Bankpaymentdetails',
            fields=[
                ('receiptno', models.CharField(db_column='ReceiptNo', max_length=10, primary_key=True, serialize=False)),
                ('accountno', models.CharField(blank=True, db_column='AccountNo', max_length=20, null=True)),
                ('documentno', models.CharField(blank=True, db_column='DocumentNo', max_length=20, null=True)),
                ('clientmachine', models.CharField(blank=True, db_column='ClientMachine', max_length=40, null=True)),
                ('recorddatetime', models.DateTimeField(blank=True, db_column='RecordDateTime', null=True)),
            ],
            options={
                'db_table': 'BankPaymentDetails',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Barcodedetails',
            fields=[
                ('itemcode', models.CharField(db_column='ItemCode', max_length=20, primary_key=True, serialize=False)),
                ('itemcategoryid', models.CharField(db_column='ItemCategoryID', max_length=10)),
                ('barcode', models.CharField(blank=True, db_column='BarCode', max_length=2000, null=True)),
                ('loginid', models.CharField(blank=True, db_column='LoginID', max_length=20, null=True)),
                ('clientmachine', models.CharField(blank=True, db_column='ClientMachine', max_length=40, null=True)),
                ('recorddatetime', models.DateTimeField(db_column='RecordDateTime')),
            ],
            options={
                'db_table': 'BarCodeDetails',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Beds',
            fields=[
                ('bedid', models.IntegerField(db_column='BedID')),
                ('bedno', models.CharField(db_column='BedNo', max_length=20, primary_key=True, serialize=False)),
                ('bedname', models.CharField(blank=True, db_column='BedName', max_length=41, null=True)),
                ('unitcost', models.DecimalField(blank=True, db_column='UnitCost', decimal_places=4, max_digits=19, null=True)),
                ('unitprice', models.DecimalField(blank=True, db_column='UnitPrice', decimal_places=4, max_digits=19, null=True)),
                ('vatpercentage', models.DecimalField(blank=True, db_column='VATPercentage', decimal_places=0, max_digits=18, null=True)),
                ('hidden', models.BooleanField(blank=True, db_column='Hidden', null=True)),
            ],
            options={
                'db_table': 'Beds',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Billadjustments',
            fields=[
                ('adjustmentid', models.IntegerField(db_column='AdjustmentID')),
                ('adjustmentno', models.CharField(db_column='AdjustmentNo', max_length=20, primary_key=True, serialize=False)),
                ('billno', models.CharField(blank=True, db_column='BillNo', max_length=20, null=True)),
                ('adjustmentdate', models.DateTimeField(blank=True, db_column='AdjustmentDate', null=True)),
                ('clientmachine', models.CharField(blank=True, db_column='ClientMachine', max_length=40, null=True)),
                ('recorddatetime', models.DateTimeField(blank=True, db_column='RecordDateTime', null=True)),
                ('amount', models.DecimalField(blank=True, db_column='Amount', decimal_places=4, max_digits=19, null=True)),
            ],
            options={
                'db_table': 'BillAdjustments',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Billcustomermembers',
            fields=[
                ('medicalcardno', models.CharField(db_column='MedicalCardNo', max_length=20, primary_key=True, serialize=False)),
                ('surname', models.CharField(blank=True, db_column='Surname', max_length=20, null=True)),
                ('firstname', models.CharField(blank=True, db_column='FirstName', max_length=20, null=True)),
                ('middlename', models.CharField(blank=True, db_column='MiddleName', max_length=20, null=True)),
                ('policystartdate', models.DateTimeField(blank=True, db_column='PolicyStartDate', null=True)),
                ('policyenddate', models.DateTimeField(blank=True, db_column='PolicyEndDate', null=True)),
                ('creditlimit', models.DecimalField(blank=True, db_column='CreditLimit', decimal_places=4, max_digits=19, null=True)),
                ('recorddatetime', models.DateTimeField(blank=True, db_column='RecordDateTime', null=True)),
            ],
            options={
                'db_table': 'BillCustomerMembers',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Billcustomers',
            fields=[
                ('accountid', models.IntegerField(db_column='AccountID')),
                ('accountno', models.CharField(db_column='AccountNo', max_length=20, primary_key=True, serialize=False)),
                ('billcustomername', models.CharField(blank=True, db_column='BillCustomerName', max_length=40, null=True, unique=True)),
                ('contactperson', models.CharField(blank=True, db_column='ContactPerson', max_length=40, null=True)),
                ('address', models.CharField(blank=True, db_column='Address', max_length=100, null=True)),
                ('phone', models.CharField(blank=True, db_column='Phone', max_length=30, null=True)),
                ('fax', models.CharField(blank=True, db_column='Fax', max_length=100, null=True)),
                ('email', models.CharField(blank=True, db_column='Email', max_length=100, null=True)),
                ('website', models.CharField(blank=True, db_column='Website', max_length=100, null=True)),
                ('logophoto', models.BinaryField(blank=True, db_column='LogoPhoto', null=True)),
                ('memberdeclaration', models.CharField(blank=True, db_column='MemberDeclaration', max_length=800, null=True)),
                ('doctordeclaration', models.CharField(blank=True, db_column='DoctorDeclaration', max_length=800, null=True)),
                ('copaypercent', models.DecimalField(blank=True, db_column='CoPayPercent', decimal_places=2, max_digits=5, null=True)),
                ('copayvalue', models.DecimalField(blank=True, db_column='CoPayValue', decimal_places=4, max_digits=19, null=True)),
                ('creditlimit', models.DecimalField(blank=True, db_column='CreditLimit', decimal_places=4, max_digits=19, null=True)),
                ('allowonlylistedmember', models.BooleanField(blank=True, db_column='AllowOnlyListedMember', null=True)),
                ('usecustomfee', models.BooleanField(blank=True, db_column='UseCustomFee', null=True)),
                ('smartcardapplicable', models.BooleanField(blank=True, db_column='SmartCardApplicable', null=True)),
                ('capturemembercardno', models.BooleanField(blank=True, db_column='CaptureMemberCardNo', null=True)),
                ('captureclaimreferenceno', models.BooleanField(blank=True, db_column='CaptureClaimReferenceNo', null=True)),
                ('hidden', models.BooleanField(blank=True, db_column='Hidden', null=True)),
                ('accountbalance', models.DecimalField(blank=True, db_column='AccountBalance', decimal_places=4, max_digits=19, null=True)),
                ('opdoutstanding', models.DecimalField(blank=True, db_column='OPDOutstanding', decimal_places=4, max_digits=19, null=True)),
                ('extrabilloutstanding', models.DecimalField(blank=True, db_column='ExtraBillOutstanding', decimal_places=4, max_digits=19, null=True)),
                ('lastaccountactiondate', models.DateTimeField(blank=True, db_column='LastAccountActionDate', null=True)),
                ('tinnumber', models.CharField(blank=True, db_column='TINNumber', max_length=20, null=True)),
                ('opdcopayvalue', models.DecimalField(blank=True, db_column='OPDCoPayValue', decimal_places=4, max_digits=19, null=True)),
                ('ipdcopayvalue', models.DecimalField(blank=True, db_column='IPDCoPayValue', decimal_places=4, max_digits=19, null=True)),
            ],
            options={
                'db_table': 'BillCustomers',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Bulkmessaging',
            fields=[
                ('messageid', models.IntegerField(blank=True, db_column='MessageID', null=True)),
                ('messageno', models.CharField(db_column='MessageNo', max_length=20, primary_key=True, serialize=False)),
                ('phone', models.CharField(blank=True, db_column='Phone', max_length=7500, null=True)),
                ('message', models.CharField(db_column='Message', max_length=600)),
                ('textlifespan', models.IntegerField(blank=True, db_column='TextLifeSpan', null=True)),
                ('senddatetime', models.DateTimeField(blank=True, db_column='SendDateTime', null=True)),
                ('clientmachine', models.CharField(blank=True, db_column='ClientMachine', max_length=40, null=True)),
                ('recorddatetime', models.DateTimeField(db_column='RecordDateTime')),
            ],
            options={
                'db_table': 'BulkMessaging',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Cancerdiseases',
            fields=[
                ('diseaseid', models.IntegerField(db_column='DiseaseID')),
                ('diseaseno', models.CharField(db_column='DiseaseNo', max_length=20, primary_key=True, serialize=False)),
                ('diseasecode', models.CharField(blank=True, db_column='DiseaseCode', max_length=10, null=True)),
                ('diseasename', models.CharField(blank=True, db_column='DiseaseName', max_length=800, null=True)),
                ('hidden', models.BooleanField(blank=True, db_column='Hidden', null=True)),
                ('clientmachine', models.CharField(blank=True, db_column='ClientMachine', max_length=40, null=True)),
                ('recorddatetime', models.DateTimeField(blank=True, db_column='RecordDateTime', null=True)),
            ],
            options={
                'db_table': 'CancerDiseases',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Cardiologyexaminations',
            fields=[
                ('examid', models.IntegerField(db_column='ExamId')),
                ('examcode', models.CharField(db_column='ExamCode', max_length=20, primary_key=True, serialize=False)),
                ('examname', models.CharField(blank=True, db_column='ExamName', max_length=200, null=True, unique=True)),
                ('unitprice', models.DecimalField(blank=True, db_column='UnitPrice', decimal_places=4, max_digits=19, null=True)),
                ('vatpercentage', models.DecimalField(blank=True, db_column='VATPercentage', decimal_places=0, max_digits=18, null=True)),
                ('hidden', models.BooleanField(blank=True, db_column='Hidden', null=True)),
                ('clientmachine', models.CharField(blank=True, db_column='ClientMachine', max_length=40, null=True)),
                ('recorddatetime', models.DateTimeField(blank=True, db_column='RecordDateTime', null=True)),
                ('unitcost', models.DecimalField(blank=True, db_column='UnitCost', decimal_places=4, max_digits=19, null=True)),
            ],
            options={
                'db_table': 'CardiologyExaminations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Childgrowth',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('socialsmile', models.BooleanField(blank=True, db_column='SocialSmile', null=True)),
                ('headcontrol', models.BooleanField(blank=True, db_column='HeadControl', null=True)),
                ('reactiontosound', models.BooleanField(blank=True, db_column='ReactionToSound', null=True)),
                ('graspreflex', models.BooleanField(blank=True, db_column='GraspReflex', null=True)),
                ('sitting', models.BooleanField(blank=True, db_column='Sitting', null=True)),
                ('standing', models.BooleanField(blank=True, db_column='Standing', null=True)),
                ('notes', models.CharField(blank=True, db_column='Notes', max_length=200, null=True)),
                ('clientmachine', models.CharField(blank=True, db_column='ClientMachine', max_length=41, null=True)),
                ('recorddatetime', models.DateTimeField(blank=True, db_column='RecordDateTime', null=True)),
            ],
            options={
                'db_table': 'ChildGrowth',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Childnutrition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ifnodetails', models.CharField(blank=True, db_column='IfNoDetails', max_length=100, null=True)),
                ('complementaryfoodsdetails', models.CharField(blank=True, db_column='ComplementaryFoodsDetails', max_length=100, null=True)),
                ('clientmachine', models.CharField(blank=True, db_column='ClientMachine', max_length=40, null=True)),
                ('recorddatetime', models.DateTimeField(blank=True, db_column='RecordDateTime', null=True)),
            ],
            options={
                'db_table': 'ChildNutrition',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Claims',
            fields=[
                ('claimid', models.IntegerField(db_column='ClaimID')),
                ('claimno', models.CharField(db_column='ClaimNo', max_length=20, primary_key=True, serialize=False)),
                ('patientno', models.CharField(blank=True, db_column='PatientNo', max_length=20, null=True)),
                ('visitdate', models.DateTimeField(blank=True, db_column='VisitDate', null=True)),
                ('visittime', models.CharField(blank=True, db_column='VisitTime', max_length=8, null=True)),
                ('primarydoctor', models.CharField(blank=True, db_column='PrimaryDoctor', max_length=41, null=True)),
                ('recorddatetime', models.DateTimeField(blank=True, db_column='RecordDateTime', null=True)),
            ],
            options={
                'db_table': 'Claims',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Clients',
            fields=[
                ('referenceid', models.IntegerField(blank=True, db_column='ReferenceID', null=True)),
                ('referenceno', models.CharField(db_column='ReferenceNo', max_length=20, primary_key=True, serialize=False)),
                ('firstname', models.CharField(blank=True, db_column='FirstName', max_length=20, null=True)),
                ('lastname', models.CharField(blank=True, db_column='LastName', max_length=20, null=True)),
                ('middlename', models.CharField(blank=True, db_column='MiddleName', max_length=20, null=True)),
                ('phoneno', models.CharField(blank=True, db_column='PhoneNo', max_length=30, null=True)),
                ('description', models.CharField(blank=True, db_column='Description', max_length=200, null=True)),
                ('clientmachine', models.CharField(blank=True, db_column='ClientMachine', max_length=40, null=True)),
                ('recorddatetime', models.DateTimeField(blank=True, db_column='RecordDateTime', null=True)),
                ('birthdate', models.DateTimeField(blank=True, db_column='BirthDate', null=True)),
                ('appointmentdate', models.DateTimeField(blank=True, db_column='AppointmentDate', null=True)),
            ],
            options={
                'db_table': 'Clients',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Clinicaldocs',
            fields=[
                ('objectno', models.CharField(db_column='ObjectNo', max_length=20)),
                ('docno', models.AutoField(db_column='DocNo', primary_key=True, serialize=False)),
                ('docname', models.CharField(blank=True, db_column='DocName', max_length=40, null=True)),
                ('clinicaldoc', models.BinaryField(blank=True, db_column='ClinicalDoc', null=True)),
                ('userfullname', models.CharField(blank=True, db_column='UserFullName', max_length=41, null=True)),
                ('loginid', models.CharField(blank=True, db_column='LoginID', max_length=20, null=True)),
                ('clientmachine', models.CharField(blank=True, db_column='ClientMachine', max_length=41, null=True)),
                ('recorddatetime', models.DateTimeField(blank=True, db_column='RecordDateTime', null=True)),
            ],
            options={
                'db_table': 'ClinicalDocs',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Clinicalfindingimages',
            fields=[
                ('visitno', models.CharField(db_column='VisitNo', max_length=20, primary_key=True, serialize=False)),
                ('imagename', models.CharField(db_column='ImageName', max_length=40)),
                ('clinicalimage', models.BinaryField(blank=True, db_column='ClinicalImage', null=True)),
                ('userfullname', models.CharField(blank=True, db_column='UserFullName', max_length=41, null=True)),
                ('loginid', models.CharField(blank=True, db_column='LoginID', max_length=20, null=True)),
                ('clientmachine', models.CharField(blank=True, db_column='ClientMachine', max_length=41, null=True)),
                ('recorddatetime', models.DateTimeField(blank=True, db_column='RecordDateTime', null=True)),
            ],
            options={
                'db_table': 'ClinicalFindingImages',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Clinicalimages',
            fields=[
                ('objectno', models.CharField(db_column='ObjectNo', max_length=20)),
                ('imageno', models.AutoField(db_column='ImageNo', primary_key=True, serialize=False)),
                ('imagename', models.CharField(blank=True, db_column='ImageName', max_length=40, null=True)),
                ('image', models.BinaryField(blank=True, db_column='Image', null=True)),
                ('userfullname', models.CharField(blank=True, db_column='UserFullName', max_length=41, null=True)),
                ('loginid', models.CharField(blank=True, db_column='LoginID', max_length=20, null=True)),
                ('clientmachine', models.CharField(blank=True, db_column='ClientMachine', max_length=41, null=True)),
                ('recorddatetime', models.DateTimeField(blank=True, db_column='RecordDateTime', null=True)),
            ],
            options={
                'db_table': 'ClinicalImages',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Companies',
            fields=[
                ('companyid', models.IntegerField(db_column='CompanyID')),
                ('companyno', models.CharField(db_column='CompanyNo', max_length=20, primary_key=True, serialize=False)),
                ('companyname', models.CharField(blank=True, db_column='CompanyName', max_length=60, null=True, unique=True)),
                ('contactperson', models.CharField(blank=True, db_column='ContactPerson', max_length=100, null=True)),
                ('contractstartdate', models.DateTimeField(blank=True, db_column='ContractStartDate', null=True)),
                ('contractenddate', models.DateTimeField(blank=True, db_column='ContractEndDate', null=True)),
                ('address', models.CharField(blank=True, db_column='Address', max_length=200, null=True)),
                ('phone', models.CharField(blank=True, db_column='Phone', max_length=30, null=True)),
            ],
            options={
                'db_table': 'Companies',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Consumableitems',
            fields=[
                ('consumableid', models.IntegerField(db_column='ConsumableID')),
                ('consumableno', models.CharField(db_column='ConsumableNo', max_length=20, primary_key=True, serialize=False)),
                ('consumablename', models.CharField(blank=True, db_column='ConsumableName', max_length=100, null=True, unique=True)),
                ('alternatename', models.CharField(blank=True, db_column='AlternateName', max_length=100, null=True)),
                ('consumablecategoryid', models.CharField(blank=True, db_column='ConsumableCategoryID', max_length=10, null=True)),
                ('orderlevel', models.IntegerField(blank=True, db_column='OrderLevel', null=True)),
                ('keepingunit', models.IntegerField(blank=True, db_column='KeepingUnit', null=True)),
                ('unitcost', models.DecimalField(blank=True, db_column='UnitCost', decimal_places=4, max_digits=19, null=True)),
                ('unitprice', models.DecimalField(blank=True, db_column='UnitPrice', decimal_places=4, max_digits=19, null=True)),
                ('vatpercentage', models.DecimalField(blank=True, db_column='VATPercentage', decimal_places=0, max_digits=18, null=True)),
                ('lastupdate', models.DateTimeField(blank=True, db_column='LastUpdate', null=True)),
                ('halted', models.BooleanField(blank=True, db_column='Halted', null=True)),
                ('hidden', models.BooleanField(blank=True, db_column='Hidden', null=True)),
                ('unitsinstock', models.IntegerField(blank=True, db_column='UnitsInStock', null=True)),
                ('recorddatetime', models.DateTimeField(blank=True, db_column='RecordDateTime', null=True)),
                ('clientmachine', models.CharField(blank=True, db_column='ClientMachine', max_length=41, null=True)),
            ],
            options={
                'db_table': 'ConsumableItems',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Counties',
            fields=[
                ('countycode', models.CharField(db_column='CountyCode', max_length=20, primary_key=True, serialize=False)),
                ('countyname', models.CharField(blank=True, db_column='CountyName', max_length=41, null=True)),
            ],
            options={
                'db_table': 'Counties',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Deliverynotedetails',
            fields=[
                ('transferno', models.CharField(db_column='TransferNo', max_length=20, primary_key=True, serialize=False)),
                ('itemcategoryid', models.CharField(db_column='ItemCategoryID', max_length=10)),
                ('itemcode', models.CharField(db_column='ItemCode', max_length=20)),
                ('deliverydate', models.DateTimeField(blank=True, db_column='DeliveryDate', null=True)),
                ('packsize', models.IntegerField(blank=True, db_column='PackSize', null=True)),
                ('quantity', models.IntegerField(blank=True, db_column='Quantity', null=True)),
                ('unitcost', models.DecimalField(blank=True, db_column='UnitCost', decimal_places=4, max_digits=19, null=True)),
                ('recorddatetime', models.DateTimeField(blank=True, db_column='RecordDateTime', null=True)),
                ('clientmachine', models.CharField(blank=True, db_column='ClientMachine', max_length=40, null=True)),
                ('batchno', models.CharField(db_column='BatchNo', max_length=20)),
            ],
            options={
                'db_table': 'DeliveryNoteDetails',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Dentalservices',
            fields=[
                ('dentalid', models.IntegerField(db_column='DentalID')),
                ('dentalcode', models.CharField(db_column='DentalCode', max_length=10, primary_key=True, serialize=False)),
                ('dentalname', models.CharField(blank=True, db_column='DentalName', max_length=200, null=True, unique=True)),
                ('unitprice', models.DecimalField(blank=True, db_column='UnitPrice', decimal_places=4, max_digits=19, null=True)),
                ('vatpercentage', models.DecimalField(blank=True, db_column='VATPercentage', decimal_places=0, max_digits=18, null=True)),
                ('hidden', models.BooleanField(blank=True, db_column='Hidden', null=True)),
                ('unitcost', models.DecimalField(blank=True, db_column='UnitCost', decimal_places=4, max_digits=19, null=True)),
            ],
            options={
                'db_table': 'DentalServices',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Depositsint',
            fields=[
                ('transno', models.CharField(db_column='TransNo', max_length=20, primary_key=True, serialize=False)),
                ('syncstatus', models.BooleanField(blank=True, db_column='SyncStatus', null=True)),
                ('agentid', models.CharField(db_column='AgentID', max_length=20)),
                ('recorddatetime', models.DateTimeField(blank=True, db_column='RecordDateTime', null=True)),
            ],
            options={
                'db_table': 'DepositsINT',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Dimensions',
            fields=[
                ('dimensioncode', models.CharField(db_column='DimensionCode', max_length=20, primary_key=True, serialize=False)),
                ('dimensionname', models.CharField(blank=True, db_column='DimensionName', max_length=100, null=True)),
                ('blocked', models.BooleanField(blank=True, db_column='Blocked', null=True)),
                ('clientmachine', models.CharField(blank=True, db_column='ClientMachine', max_length=40, null=True)),
                ('recorddatetime', models.DateTimeField(blank=True, db_column='RecordDateTime', null=True)),
            ],
            options={
                'db_table': 'Dimensions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Diseases',
            fields=[
                ('diseasecode', models.CharField(db_column='DiseaseCode', max_length=10, primary_key=True, serialize=False)),
                ('diseasename', models.CharField(blank=True, db_column='DiseaseName', max_length=800, null=True, unique=True)),
                ('hidden', models.BooleanField(blank=True, db_column='Hidden', null=True)),
                ('code', models.CharField(blank=True, db_column='Code', max_length=10, null=True)),
            ],
            options={
                'db_table': 'Diseases',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Diseasesext',
            fields=[
                ('code', models.CharField(db_column='Code', max_length=10, primary_key=True, serialize=False)),
                ('description', models.CharField(blank=True, db_column='Description', max_length=800, null=True)),
                ('clientmachine', models.CharField(blank=True, db_column='ClientMachine', max_length=41, null=True)),
                ('recorddatetime', models.DateTimeField(blank=True, db_column='RecordDateTime', null=True)),
            ],
            options={
                'db_table': 'DiseasesEXT',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Drugcategories',
            fields=[
                ('categoryno', models.CharField(db_column='CategoryNo', max_length=10, primary_key=True, serialize=False)),
                ('categoryname', models.CharField(blank=True, db_column='CategoryName', max_length=40, null=True, unique=True)),
                ('varyprescribedqty', models.BooleanField(blank=True, db_column='VaryPrescribedQty', null=True)),
                ('defaultprescribedqty', models.SmallIntegerField(blank=True, db_column='DefaultPrescribedQty', null=True)),
                ('dosageseparator', models.CharField(blank=True, db_column='DosageSeparator', max_length=1, null=True)),
                ('dosageformat', models.CharField(blank=True, db_column='DosageFormat', max_length=40, null=True)),
            ],
            options={
                'db_table': 'DrugCategories',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Drugcombinations',
            fields=[
                ('combination', models.CharField(db_column='Combination', max_length=30, primary_key=True, serialize=False)),
                ('combinationdes', models.CharField(blank=True, db_column='CombinationDes', max_length=100, null=True)),
            ],
            options={
                'db_table': 'DrugCombinations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Drugs',
            fields=[
                ('drugid', models.IntegerField(db_column='DrugID')),
                ('drugno', models.CharField(db_column='DrugNo', max_length=20, primary_key=True, serialize=False)),
                ('drugname', models.CharField(blank=True, db_column='DrugName', max_length=100, null=True, unique=True)),
                ('alternatename', models.CharField(blank=True, db_column='AlternateName', max_length=100, null=True)),
                ('orderlevel', models.IntegerField(blank=True, db_column='OrderLevel', null=True)),
                ('keepingunit', models.IntegerField(blank=True, db_column='KeepingUnit', null=True)),
                ('unitcost', models.DecimalField(blank=True, db_column='UnitCost', decimal_places=4, max_digits=19, null=True)),
                ('unitprice', models.DecimalField(blank=True, db_column='UnitPrice', decimal_places=4, max_digits=19, null=True)),
                ('vatpercentage', models.DecimalField(blank=True, db_column='VATPercentage', decimal_places=0, max_digits=18, null=True)),
                ('lastupdate', models.DateTimeField(blank=True, db_column='LastUpdate', null=True)),
                ('halted', models.BooleanField(blank=True, db_column='Halted', null=True)),
                ('hidden', models.BooleanField(blank=True, db_column='Hidden', null=True)),
                ('unitsinstock', models.IntegerField(blank=True, db_column='UnitsInStock', null=True)),
                ('recorddatetime', models.DateTimeField(blank=True, db_column='RecordDateTime', null=True)),
                ('clientmachine', models.CharField(blank=True, db_column='ClientMachine', max_length=41, null=True)),
            ],
            options={
                'db_table': 'Drugs',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Expenditure',
            fields=[
                ('expenditureid', models.IntegerField(db_column='ExpenditureID')),
                ('expenditureno', models.CharField(db_column='ExpenditureNo', max_length=20, primary_key=True, serialize=False)),
                ('spentdate', models.DateTimeField(blank=True, db_column='SpentDate', null=True)),
                ('accountno', models.CharField(blank=True, db_column='AccountNo', max_length=20, null=True)),
                ('givento', models.CharField(blank=True, db_column='GivenTo', max_length=40, null=True)),
                ('amount', models.DecimalField(blank=True, db_column='Amount', decimal_places=4, max_digits=19, null=True)),
                ('exchangerate', models.DecimalField(blank=True, db_column='ExchangeRate', decimal_places=4, max_digits=19, null=True)),
                ('documentno', models.CharField(blank=True, db_column='DocumentNo', max_length=20, null=True)),
                ('details', models.CharField(blank=True, db_column='Details', max_length=100, null=True)),
                ('clientmachine', models.CharField(blank=True, db_column='ClientMachine', max_length=40, null=True)),
                ('recorddatetime', models.DateTimeField(blank=True, db_column='RecordDateTime', null=True)),
            ],
            options={
                'db_table': 'Expenditure',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Extrabills',
            fields=[
                ('extrabillid', models.IntegerField(db_column='ExtraBillID')),
                ('extrabillno', models.CharField(db_column='ExtraBillNo', max_length=20, primary_key=True, serialize=False)),
                ('extrabilldate', models.DateTimeField(blank=True, db_column='ExtraBillDate', null=True)),
                ('recorddatetime', models.DateTimeField(blank=True, db_column='RecordDateTime', null=True)),
                ('billno', models.CharField(blank=True, db_column='BillNo', max_length=20, null=True)),
                ('insuranceno', models.CharField(blank=True, db_column='InsuranceNo', max_length=20, null=True)),
                ('membercardno', models.CharField(blank=True, db_column='MemberCardNo', max_length=30, null=True)),
                ('mainmembername', models.CharField(blank=True, db_column='MainMemberName', max_length=41, null=True)),
                ('claimreferenceno', models.CharField(blank=True, db_column='ClaimReferenceNo', max_length=30, null=True)),
                ('copaypercent', models.DecimalField(blank=True, db_column='CoPayPercent', decimal_places=2, max_digits=5, null=True)),
                ('copayvalue', models.DecimalField(blank=True, db_column='CoPayValue', decimal_places=4, max_digits=19, null=True)),
                ('accesscashservices', models.BooleanField(blank=True, db_column='AccessCashServices', null=True)),
                ('smartcardapplicable', models.BooleanField(blank=True, db_column='SmartCardApplicable', null=True)),
                ('amount', models.DecimalField(blank=True, db_column='Amount', decimal_places=4, max_digits=19, null=True)),
                ('amountpaid', models.DecimalField(blank=True, db_column='AmountPaid', decimal_places=4, max_digits=19, null=True)),
                ('originalamount', models.DecimalField(blank=True, db_column='OriginalAmount', decimal_places=4, max_digits=19, null=True)),
            ],
            options={
                'db_table': 'ExtraBills',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Extrachargeitems',
            fields=[
                ('extraitemid', models.IntegerField(db_column='ExtraItemID')),
                ('extraitemcode', models.CharField(db_column='ExtraItemCode', max_length=20, primary_key=True, serialize=False)),
                ('extraitemname', models.CharField(blank=True, db_column='ExtraItemName', max_length=800, null=True, unique=True)),
                ('revenuestreamcode', models.CharField(blank=True, db_column='RevenueStreamCode', max_length=20, null=True)),
                ('unitcost', models.DecimalField(blank=True, db_column='UnitCost', decimal_places=4, max_digits=19, null=True)),
                ('unitprice', models.DecimalField(blank=True, db_column='UnitPrice', decimal_places=4, max_digits=19, null=True)),
                ('vatpercentage', models.DecimalField(blank=True, db_column='VATPercentage', decimal_places=0, max_digits=18, null=True)),
                ('hidden', models.BooleanField(blank=True, db_column='Hidden', null=True)),
            ],
            options={
                'db_table': 'ExtraChargeItems',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Eyeservices',
            fields=[
                ('eyeid', models.IntegerField(db_column='EyeID')),
                ('eyecode', models.CharField(db_column='EyeCode', max_length=20, primary_key=True, serialize=False)),
                ('eyename', models.CharField(blank=True, db_column='EyeName', max_length=200, null=True, unique=True)),
                ('unitcost', models.DecimalField(blank=True, db_column='UnitCost', decimal_places=4, max_digits=19, null=True)),
                ('unitprice', models.DecimalField(blank=True, db_column='UnitPrice', decimal_places=4, max_digits=19, null=True)),
                ('vatpercentage', models.DecimalField(blank=True, db_column='VATPercentage', decimal_places=0, max_digits=18, null=True)),
                ('hidden', models.BooleanField(blank=True, db_column='Hidden', null=True)),
            ],
            options={
                'db_table': 'EyeServices',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Goodsreceivednote',
            fields=[
                ('grnid', models.IntegerField(db_column='GRNID')),
                ('grnno', models.CharField(db_column='GRNNo', max_length=20, primary_key=True, serialize=False)),
                ('receiveddate', models.DateTimeField(blank=True, db_column='ReceivedDate', null=True)),
                ('advicenoteno', models.CharField(blank=True, db_column='AdviceNoteNo', max_length=20, null=True)),
                ('discounttotal', models.DecimalField(blank=True, db_column='DiscountTotal', decimal_places=4, max_digits=19, null=True)),
                ('totalvat', models.DecimalField(blank=True, db_column='TotalVAT', decimal_places=4, max_digits=19, null=True)),
                ('amountwords', models.CharField(blank=True, db_column='AmountWords', max_length=200, null=True)),
                ('clientmachine', models.CharField(blank=True, db_column='ClientMachine', max_length=40, null=True)),
                ('recorddatetime', models.DateTimeField(blank=True, db_column='RecordDateTime', null=True)),
            ],
            options={
                'db_table': 'GoodsReceivedNote',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Goodsreturnednote',
            fields=[
                ('returnid', models.IntegerField(blank=True, db_column='ReturnID', null=True)),
                ('returnno', models.CharField(db_column='ReturnNo', max_length=20, primary_key=True, serialize=False)),
                ('returndate', models.DateTimeField(blank=True, db_column='ReturnDate', null=True)),
                ('amountwords', models.CharField(blank=True, db_column='AmountWords', max_length=200, null=True)),
                ('notes', models.CharField(blank=True, db_column='Notes', max_length=100, null=True)),
                ('clientmachine', models.CharField(blank=True, db_column='ClientMachine', max_length=40, null=True)),
                ('recorddatetime', models.DateTimeField(blank=True, db_column='RecordDateTime', null=True)),
            ],
            options={
                'db_table': 'GoodsReturnedNote',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Healthunits',
            fields=[
                ('healthunitcode', models.CharField(db_column='HealthUnitCode', max_length=10, primary_key=True, serialize=False)),
                ('healthunitname', models.CharField(blank=True, db_column='HealthUnitName', max_length=41, null=True, unique=True)),
                ('contactperson', models.CharField(blank=True, db_column='ContactPerson', max_length=100, null=True)),
                ('address', models.CharField(blank=True, db_column='Address', max_length=200, null=True)),
                ('phone', models.CharField(blank=True, db_column='Phone', max_length=100, null=True)),
            ],
            options={
                'db_table': 'HealthUnits',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Icuservices',
            fields=[
                ('icuid', models.IntegerField(db_column='ICUID')),
                ('icucode', models.CharField(db_column='ICUCode', max_length=20, primary_key=True, serialize=False)),
                ('icuname', models.CharField(blank=True, db_column='ICUName', max_length=200, null=True, unique=True)),
                ('unitprice', models.DecimalField(blank=True, db_column='UnitPrice', decimal_places=4, max_digits=19, null=True)),
                ('vatpercentage', models.DecimalField(blank=True, db_column='VATPercentage', decimal_places=0, max_digits=18, null=True)),
                ('hidden', models.BooleanField(blank=True, db_column='Hidden', null=True)),
                ('unitcost', models.DecimalField(blank=True, db_column='UnitCost', decimal_places=4, max_digits=19, null=True)),
            ],
            options={
                'db_table': 'ICUServices',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Immunisationvaccines',
            fields=[
                ('immunisationid', models.IntegerField(blank=True, db_column='ImmunisationID', null=True)),
                ('immunisationno', models.CharField(blank=True, db_column='ImmunisationNo', max_length=20, null=True)),
                ('patientno', models.CharField(db_column='PatientNo', max_length=20, primary_key=True, serialize=False)),
                ('dategiven', models.DateTimeField(blank=True, db_column='DateGiven', null=True)),
                ('notes', models.CharField(blank=True, db_column='Notes', max_length=100, null=True)),
                ('mothersname', models.CharField(blank=True, db_column='MothersName', max_length=20, null=True)),
                ('uptodate', models.BooleanField(blank=True, db_column='UpToDate', null=True)),
                ('clientmachine', models.CharField(blank=True, db_column='ClientMachine', max_length=40, null=True)),
                ('recorddatetime', models.DateTimeField(blank=True, db_column='RecordDateTime', null=True)),
            ],
            options={
                'db_table': 'ImmunisationVaccines',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Insurancepolicies',
            fields=[
                ('policyid', models.IntegerField(db_column='PolicyID')),
                ('policyno', models.CharField(db_column='PolicyNo', max_length=20, primary_key=True, serialize=False)),
                ('policyname', models.CharField(blank=True, db_column='PolicyName', max_length=40, null=True, unique=True)),
                ('recorddatetime', models.DateTimeField(blank=True, db_column='RecordDateTime', null=True)),
            ],
            options={
                'db_table': 'InsurancePolicies',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Insurances',
            fields=[
                ('insuranceid', models.IntegerField(db_column='InsuranceID')),
                ('insuranceno', models.CharField(db_column='InsuranceNo', max_length=20, primary_key=True, serialize=False)),
                ('insurancename', models.CharField(blank=True, db_column='InsuranceName', max_length=60, null=True, unique=True)),
                ('contactperson', models.CharField(blank=True, db_column='ContactPerson', max_length=40, null=True)),
                ('address', models.CharField(blank=True, db_column='Address', max_length=100, null=True)),
                ('phone', models.CharField(blank=True, db_column='Phone', max_length=100, null=True)),
                ('fax', models.CharField(blank=True, db_column='Fax', max_length=100, null=True)),
                ('email', models.CharField(blank=True, db_column='Email', max_length=100, null=True)),
                ('website', models.CharField(blank=True, db_column='Website', max_length=100, null=True)),
                ('logophoto', models.BinaryField(blank=True, db_column='LogoPhoto', null=True)),
                ('memberdeclaration', models.CharField(blank=True, db_column='MemberDeclaration', max_length=800, null=True)),
                ('doctordeclaration', models.CharField(blank=True, db_column='DoctorDeclaration', max_length=800, null=True)),
                ('usecustomfee', models.BooleanField(blank=True, db_column='UseCustomFee', null=True)),
                ('hidden', models.BooleanField(blank=True, db_column='Hidden', null=True)),
                ('accountbalance', models.DecimalField(blank=True, db_column='AccountBalance', decimal_places=4, max_digits=19, null=True)),
                ('opdoutstanding', models.DecimalField(blank=True, db_column='OPDOutstanding', decimal_places=4, max_digits=19, null=True)),
                ('extrabilloutstanding', models.DecimalField(blank=True, db_column='ExtraBillOutstanding', decimal_places=4, max_digits=19, null=True)),
                ('lastaccountactiondate', models.DateTimeField(blank=True, db_column='LastAccountActionDate', null=True)),
                ('tinnumber', models.CharField(blank=True, db_column='TINNumber', max_length=20, null=True)),
            ],
            options={
                'db_table': 'Insurances',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Intadmissions',
            fields=[
                ('agentno', models.CharField(db_column='AgentNo', max_length=20, primary_key=True, serialize=False)),
                ('memberlimit', models.DecimalField(blank=True, db_column='MemberLimit', decimal_places=4, max_digits=19, null=True)),
                ('userid', models.CharField(blank=True, db_column='UserID', max_length=100, null=True)),
                ('syncstatus', models.BooleanField(blank=True, db_column='SyncStatus', null=True)),
                ('clientmachine', models.CharField(blank=True, db_column='ClientMachine', max_length=40, null=True)),
                ('recorddatetime', models.DateTimeField(blank=True, db_column='RecordDateTime', null=True)),
            ],
            options={
                'db_table': 'INTAdmissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Intagents',
            fields=[
                ('agentno', models.CharField(db_column='AgentNo', max_length=20, primary_key=True, serialize=False)),
                ('agentname', models.CharField(blank=True, db_column='AgentName', max_length=60, null=True)),
                ('clientmachine', models.CharField(blank=True, db_column='ClientMachine', max_length=41, null=True)),
                ('recorddatetime', models.DateTimeField(blank=True, db_column='RecordDateTime', null=True)),
                ('datasource', models.CharField(blank=True, db_column='DataSource', max_length=100, null=True)),
                ('dbname', models.CharField(blank=True, db_column='DBName', max_length=100, null=True)),
                ('port', models.IntegerField(blank=True, db_column='Port', null=True)),
                ('dbusername', models.CharField(blank=True, db_column='DBUsername', max_length=40, null=True)),
                ('password', models.CharField(blank=True, db_column='Password', max_length=1000, null=True)),
                ('token', models.CharField(blank=True, db_column='Token', max_length=200, null=True)),
                ('referenceno', models.CharField(blank=True, db_column='ReferenceNo', max_length=200, null=True)),
                ('clientid', models.CharField(blank=True, db_column='ClientID', max_length=200, null=True)),
                ('enabled', models.BooleanField(blank=True, db_column='Enabled', null=True)),
            ],
            options={
                'db_table': 'INTAgents',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Intrefunds',
            fields=[
                ('receiptno', models.CharField(db_column='ReceiptNo', max_length=20, primary_key=True, serialize=False)),
                ('syncstatus', models.CharField(blank=True, db_column='SyncStatus', max_length=20, null=True)),
                ('agentid', models.CharField(blank=True, db_column='AgentID', max_length=20, null=True)),
                ('recorddatetime', models.DateTimeField(blank=True, db_column='RecordDateTime', null=True)),
            ],
            options={
                'db_table': 'INTRefunds',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Intstocktake',
            fields=[
                ('pscno', models.CharField(db_column='PSCNo', max_length=20, primary_key=True, serialize=False)),
                ('itemcategoryid', models.CharField(db_column='ItemCategoryID', max_length=10)),
                ('itemcode', models.CharField(db_column='ItemCode', max_length=20)),
                ('agent', models.CharField(blank=True, db_column='Agent', max_length=10, null=True)),
                ('syncstatus', models.BooleanField(blank=True, db_column='SyncStatus', null=True)),
                ('recorddatetime', models.DateTimeField(blank=True, db_column='RecordDateTime', null=True)),
            ],
            options={
                'db_table': 'INTStockTake',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Inventory',
            fields=[
                ('tranid', models.AutoField(db_column='TranID', primary_key=True, serialize=False)),
                ('itemcode', models.CharField(db_column='ItemCode', max_length=20)),
                ('trandate', models.DateTimeField(blank=True, db_column='TranDate', null=True)),
                ('quantity', models.IntegerField(blank=True, db_column='Quantity', null=True)),
                ('locationunits', models.IntegerField(blank=True, db_column='LocationUnits', null=True)),
                ('balance', models.IntegerField(blank=True, db_column='Balance', null=True)),
                ('unitcost', models.DecimalField(blank=True, db_column='UnitCost', decimal_places=4, max_digits=19, null=True)),
                ('weightedcostaverage', models.DecimalField(blank=True, db_column='WeightedCostAverage', decimal_places=4, max_digits=19, null=True)),
                ('details', models.CharField(blank=True, db_column='Details', max_length=100, null=True)),
                ('clientmachine', models.CharField(blank=True, db_column='ClientMachine', max_length=40, null=True)),
                ('recorddatetime', models.DateTimeField(blank=True, db_column='RecordDateTime', null=True)),
                ('batchno', models.CharField(blank=True, db_column='BatchNo', max_length=20, null=True)),
                ('expirydate', models.DateTimeField(blank=True, db_column='ExpiryDate', null=True)),
            ],
            options={
                'db_table': 'Inventory',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Inventoryint',
            fields=[
                ('tranid', models.IntegerField(db_column='TranID', primary_key=True, serialize=False)),
                ('shipstatus', models.BooleanField(blank=True, db_column='ShipStatus', null=True)),
                ('agent', models.CharField(db_column='Agent', max_length=20)),
                ('recorddatetime', models.DateTimeField(blank=True, db_column='RecordDateTime', null=True)),
            ],
            options={
                'db_table': 'InventoryINT',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Inventoryorders',
            fields=[
                ('orderid', models.IntegerField(db_column='OrderID')),
                ('orderno', models.CharField(db_column='OrderNo', max_length=20, primary_key=True, serialize=False)),
                ('orderdate', models.DateTimeField(blank=True, db_column='OrderDate', null=True)),
                ('ordertypeid', models.CharField(blank=True, db_column='OrderTypeID', max_length=10, null=True)),
                ('stockcost', models.DecimalField(blank=True, db_column='StockCost', decimal_places=4, max_digits=19, null=True)),
                ('clientmachine', models.CharField(blank=True, db_column='ClientMachine', max_length=40, null=True)),
                ('recorddatetime', models.DateTimeField(blank=True, db_column='RecordDateTime', null=True)),
            ],
            options={
                'db_table': 'InventoryOrders',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Inventorytransfers',
            fields=[
                ('transferid', models.IntegerField(db_column='TransferID')),
                ('transferno', models.CharField(db_column='TransferNo', max_length=20, primary_key=True, serialize=False)),
                ('transferdate', models.DateTimeField(blank=True, db_column='TransferDate', null=True)),
                ('stockcost', models.DecimalField(blank=True, db_column='StockCost', decimal_places=4, max_digits=19, null=True)),
                ('clientmachine', models.CharField(blank=True, db_column='ClientMachine', max_length=40, null=True)),
                ('recorddatetime', models.DateTimeField(blank=True, db_column='RecordDateTime', null=True)),
            ],
            options={
                'db_table': 'InventoryTransfers',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Invoiceadjustments',
            fields=[
                ('adjustmentid', models.IntegerField(db_column='AdjustmentID')),
                ('adjustmentno', models.CharField(db_column='AdjustmentNo', max_length=20, primary_key=True, serialize=False)),
                ('amount', models.DecimalField(blank=True, db_column='Amount', decimal_places=4, max_digits=19, null=True)),
                ('adjustmentdate', models.DateTimeField(blank=True, db_column='AdjustmentDate', null=True)),
                ('clientmachine', models.CharField(blank=True, db_column='ClientMachine', max_length=40, null=True)),
                ('recorddatetime', models.DateTimeField(blank=True, db_column='RecordDateTime', null=True)),
            ],
            options={
                'db_table': 'InvoiceAdjustments',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Invoices',
            fields=[
                ('invoiceid', models.IntegerField(db_column='InvoiceID')),
                ('invoiceno', models.CharField(db_column='InvoiceNo', max_length=20, primary_key=True, serialize=False)),
                ('payno', models.CharField(blank=True, db_column='PayNo', max_length=20, null=True)),
                ('invoicedate', models.DateTimeField(blank=True, db_column='InvoiceDate', null=True)),
                ('startdate', models.DateTimeField(blank=True, db_column='StartDate', null=True)),
                ('enddate', models.DateTimeField(blank=True, db_column='EndDate', null=True)),
                ('amountwords', models.CharField(blank=True, db_column='AmountWords', max_length=200, null=True)),
                ('locked', models.BooleanField(blank=True, db_column='Locked', null=True)),
                ('cancelled', models.BooleanField(blank=True, db_column='Cancelled', null=True)),
                ('recorddatetime', models.DateTimeField(blank=True, db_column='RecordDateTime', null=True)),
                ('clientmachine', models.CharField(blank=True, db_column='ClientMachine', max_length=41, null=True)),
                ('amount', models.DecimalField(blank=True, db_column='Amount', decimal_places=4, max_digits=19, null=True)),
                ('amountpaid', models.DecimalField(blank=True, db_column='AmountPaid', decimal_places=4, max_digits=19, null=True)),
            ],
            options={
                'db_table': 'Invoices',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Ipdalerts',
            fields=[
                ('alertid', models.AutoField(db_column='AlertID', primary_key=True, serialize=False)),
                ('notes', models.CharField(blank=True, db_column='Notes', max_length=200, null=True)),
                ('sentdate', models.DateTimeField(blank=True, db_column='SentDate', null=True)),
                ('senttime', models.CharField(blank=True, db_column='SentTime', max_length=8, null=True)),
            ],
            options={
                'db_table': 'IPDAlerts',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Ipddiagnosisarchive',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('roundno', models.CharField(db_column='RoundNo', max_length=20)),
                ('diseasecode', models.CharField(db_column='DiseaseCode', max_length=10)),
                ('notes', models.CharField(blank=True, db_column='Notes', max_length=200, null=True)),
                ('loginid', models.CharField(blank=True, db_column='LoginID', max_length=20, null=True)),
                ('recorddatetime', models.DateTimeField(blank=True, db_column='RecordDateTime', null=True)),
                ('actionpointid', models.CharField(blank=True, db_column='ActionPointID', max_length=10, null=True)),
            ],
            options={
                'db_table': 'IPDDiagnosisArchive',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Ipddoctor',
            fields=[
                ('roundid', models.IntegerField(db_column='RoundID')),
                ('roundno', models.CharField(db_column='RoundNo', max_length=20, primary_key=True, serialize=False)),
                ('rounddatetime', models.DateTimeField(blank=True, db_column='RoundDateTime', null=True)),
                ('clientmachine', models.CharField(blank=True, db_column='ClientMachine', max_length=40, null=True)),
                ('recorddatetime', models.DateTimeField(blank=True, db_column='RecordDateTime', null=True)),
            ],
            options={
                'db_table': 'IPDDoctor',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Ipdnurse',
            fields=[
                ('ipdnurseroundid', models.IntegerField(db_column='IPDNurseRoundID')),
                ('nurseroundno', models.CharField(db_column='NurseRoundNo', max_length=20, primary_key=True, serialize=False)),
                ('weight', models.DecimalField(blank=True, db_column='Weight', decimal_places=2, max_digits=5, null=True)),
                ('temperature', models.DecimalField(blank=True, db_column='Temperature', decimal_places=2, max_digits=5, null=True)),
                ('height', models.DecimalField(blank=True, db_column='Height', decimal_places=2, max_digits=5, null=True)),
                ('pulse', models.SmallIntegerField(blank=True, db_column='Pulse', null=True)),
                ('bloodpressure', models.CharField(blank=True, db_column='BloodPressure', max_length=10, null=True)),
                ('headcircum', models.DecimalField(blank=True, db_column='HeadCircum', decimal_places=2, max_digits=5, null=True)),
                ('bodysurfacearea', models.DecimalField(blank=True, db_column='BodySurfaceArea', decimal_places=2, max_digits=10, null=True)),
                ('respirationrate', models.SmallIntegerField(blank=True, db_column='RespirationRate', null=True)),
                ('oxygensaturation', models.DecimalField(blank=True, db_column='OxygenSaturation', decimal_places=2, max_digits=5, null=True)),
                ('heartrate', models.SmallIntegerField(blank=True, db_column='HeartRate', null=True)),
                ('notes', models.CharField(blank=True, db_column='Notes', max_length=4000, null=True)),
                ('nurserounddatetime', models.DateTimeField(blank=True, db_column='NurseRoundDateTime', null=True)),
                ('otherattendingnurse', models.CharField(blank=True, db_column='OtherAttendingNurse', max_length=100, null=True)),
                ('clientmachine', models.CharField(blank=True, db_column='ClientMachine', max_length=40, null=True)),
                ('recorddatetime', models.DateTimeField(blank=True, db_column='RecordDateTime', null=True)),
            ],
            options={
                'db_table': 'IPDNurse',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Ipdpackageconsumption',
            fields=[
                ('extrabillno', models.CharField(db_column='ExtraBillNo', max_length=20, primary_key=True, serialize=False)),
                ('itemcode', models.CharField(db_column='ItemCode', max_length=20)),
                ('packagevisitno', models.CharField(blank=True, db_column='PackageVisitNo', max_length=20, null=True)),
                ('quantity', models.IntegerField(blank=True, db_column='Quantity', null=True)),
                ('loginid', models.CharField(blank=True, db_column='LoginID', max_length=20, null=True)),
                ('clientmachine', models.CharField(blank=True, db_column='ClientMachine', max_length=41, null=True)),
                ('recorddatetime', models.DateTimeField(blank=True, db_column='RecordDateTime', null=True)),
            ],
            options={
                'db_table': 'IPDPackageConsumption',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Ipdvisionassessment',
            fields=[
                ('varoundid', models.IntegerField(blank=True, db_column='VARoundID', null=True)),
                ('rounddatetime', models.DateTimeField(blank=True, db_column='RoundDateTime', null=True)),
                ('varoundno', models.CharField(db_column='VARoundNo', max_length=20, primary_key=True, serialize=False)),
                ('notes', models.CharField(blank=True, db_column='Notes', max_length=200, null=True)),
                ('clientmachine', models.CharField(blank=True, db_column='ClientMachine', max_length=40, null=True)),
                ('recorddatetime', models.DateTimeField(blank=True, db_column='RecordDateTime', null=True)),
            ],
            options={
                'db_table': 'IPDVisionAssessment',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Itemscomplement',
            fields=[
                ('itemscomplementid', models.AutoField(db_column='ItemsComplementID', primary_key=True, serialize=False)),
                ('treatmentno', models.CharField(blank=True, db_column='TreatmentNo', max_length=20, null=True)),
                ('itemcode', models.CharField(blank=True, db_column='ItemCode', max_length=20, null=True)),
                ('itemname', models.CharField(blank=True, db_column='ItemName', max_length=100, null=True)),
                ('complementitemcode', models.CharField(blank=True, db_column='ComplementItemCode', max_length=20, null=True)),
                ('complementitemname', models.CharField(blank=True, db_column='ComplementItemName', max_length=100, null=True)),
                ('quantity', models.IntegerField(blank=True, db_column='Quantity', null=True)),
                ('loginid', models.CharField(blank=True, db_column='LoginID', max_length=20, null=True)),
                ('userfullname', models.CharField(blank=True, db_column='UserFullName', max_length=41, null=True)),
                ('clientmachine', models.CharField(blank=True, db_column='ClientMachine', max_length=40, null=True)),
                ('recorddatetime', models.DateTimeField(blank=True, db_column='RecordDateTime', null=True)),
            ],
            options={
                'db_table': 'ItemsComplement',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Labrequests',
            fields=[
                ('specimenid', models.IntegerField(db_column='SpecimenID')),
                ('specimenno', models.CharField(db_column='SpecimenNo', max_length=20, primary_key=True, serialize=False)),
                ('drawndatetime', models.DateTimeField(blank=True, db_column='DrawnDateTime', null=True)),
                ('loginid', models.CharField(blank=True, db_column='LoginID', max_length=20, null=True)),
                ('recorddatetime', models.DateTimeField(blank=True, db_column='RecordDateTime', null=True)),
                ('userfullname', models.CharField(blank=True, db_column='UserFullName', max_length=41, null=True)),
                ('clientmachine', models.CharField(blank=True, db_column='ClientMachine', max_length=40, null=True)),
                ('collectiondatetime', models.DateTimeField(blank=True, db_column='CollectionDateTime', null=True)),
            ],
            options={
                'db_table': 'LabRequests',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Labtests',
            fields=[
                ('testid', models.IntegerField(db_column='TestID')),
                ('testcode', models.CharField(db_column='TestCode', max_length=20, primary_key=True, serialize=False)),
                ('testname', models.CharField(db_column='TestName', max_length=100, unique=True)),
                ('normalrange', models.TextField(blank=True, db_column='NormalRange', null=True)),
                ('unitcost', models.DecimalField(blank=True, db_column='UnitCost', decimal_places=4, max_digits=19, null=True)),
                ('testfee', models.DecimalField(blank=True, db_column='TestFee', decimal_places=4, max_digits=19, null=True)),
                ('vatpercentage', models.DecimalField(blank=True, db_column='VATPercentage', decimal_places=0, max_digits=18, null=True)),
                ('hidden', models.BooleanField(blank=True, db_column='Hidden', null=True)),
                ('requiresresultsapproval', models.BooleanField(blank=True, db_column='RequiresResultsApproval', null=True)),
                ('tubetype', models.CharField(blank=True, db_column='TubeType', max_length=200, null=True)),
                ('testdescription', models.CharField(blank=True, db_column='TestDescription', max_length=500, null=True)),
                ('clientmachine', models.CharField(blank=True, db_column='ClientMachine', max_length=40, null=True)),
                ('recorddatetime', models.DateTimeField(blank=True, db_column='RecordDateTime', null=True)),
            ],
            options={
                'db_table': 'LabTests',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Licenses',
            fields=[
                ('lln', models.CharField(db_column='LLN', max_length=100, primary_key=True, serialize=False)),
                ('lco', models.CharField(db_column='LCO', max_length=100)),
                ('lsp', models.CharField(db_column='LSP', max_length=100)),
                ('lse', models.CharField(db_column='LSE', max_length=100)),
                ('lsw', models.CharField(db_column='LSW', max_length=100)),
                ('lci', models.CharField(db_column='LCI', max_length=100)),
                ('lpo', models.CharField(db_column='LPO', max_length=100)),
                ('lcd', models.CharField(db_column='LCD', max_length=100)),
                ('lsd', models.CharField(db_column='LSD', max_length=100)),
                ('led', models.CharField(db_column='LED', max_length=100)),
                ('lwd', models.CharField(db_column='LWD', max_length=100)),
                ('lnu', models.CharField(db_column='LNU', max_length=100)),
                ('lid', models.CharField(db_column='LID', max_length=100)),
                ('lkt', models.CharField(db_column='LKT', max_length=100)),
                ('lnr', models.CharField(db_column='LNR', max_length=100)),
                ('lwr', models.CharField(db_column='LWR', max_length=100)),
            ],
            options={
                'db_table': 'Licenses',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Logger',
            fields=[
                ('loggerid', models.AutoField(db_column='LoggerID', primary_key=True, serialize=False)),
                ('objectkey', models.CharField(blank=True, db_column='ObjectKey', max_length=200, null=True)),
                ('logaction', models.CharField(blank=True, db_column='LogAction', max_length=1, null=True)),
                ('content', models.TextField(blank=True, db_column='Content', null=True)),
                ('loginid', models.CharField(blank=True, db_column='LoginID', max_length=20, null=True)),
                ('userfullname', models.CharField(blank=True, db_column='UserFullName', max_length=41, null=True)),
                ('clientmachine', models.CharField(blank=True, db_column='ClientMachine', max_length=40, null=True)),
                ('recorddatetime', models.DateTimeField(blank=True, db_column='RecordDateTime', null=True)),
            ],
            options={
                'db_table': 'Logger',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Logins',
            fields=[
                ('loginid', models.CharField(db_column='LoginID', max_length=20, primary_key=True, serialize=False)),
                ('firstname', models.CharField(db_column='FirstName', max_length=20)),
                ('lastname', models.CharField(db_column='LastName', max_length=20)),
                ('loginpassword', models.CharField(db_column='LoginPassword', max_length=200)),
                ('loginlevel', models.SmallIntegerField(db_column='LoginLevel')),
                ('changepassword', models.BooleanField(db_column='ChangePassword')),
                ('creatorclientmachine', models.CharField(blank=True, db_column='CreatorClientMachine', max_length=40, null=True)),
                ('creatorrecorddatetime', models.DateTimeField(blank=True, db_column='CreatorRecordDateTime', null=True)),
            ],
            options={
                'db_table': 'Logins',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Lookupdata',
            fields=[
                ('lookuporder', models.AutoField(db_column='LookupOrder', primary_key=True, serialize=False)),
                ('dataid', models.CharField(db_column='DataID', max_length=10)),
                ('datades', models.CharField(db_column='DataDes', max_length=100)),
                ('isdefault', models.CharField(db_column='IsDefault', max_length=1)),
                ('ishidden', models.CharField(db_column='IsHidden', max_length=1)),
            ],
            options={
                'db_table': 'LookupData',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Lookupobjects',
            fields=[
                ('objectid', models.SmallIntegerField(db_column='ObjectID', primary_key=True, serialize=False)),
                ('objectname', models.CharField(db_column='ObjectName', max_length=40, unique=True)),
                ('objectdes', models.CharField(db_column='ObjectDes', max_length=60, unique=True)),
                ('isreadonly', models.CharField(db_column='IsReadOnly', max_length=1)),
            ],
            options={
                'db_table': 'LookupObjects',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Mappedcodesfinance',
            fields=[
                ('itemcode', models.CharField(db_column='ItemCode', max_length=20, primary_key=True, serialize=False)),
                ('itemname', models.CharField(blank=True, db_column='ItemName', max_length=200, null=True)),
                ('accountno', models.CharField(blank=True, db_column='AccountNo', max_length=20, null=True)),
                ('username', models.CharField(blank=True, db_column='Username', max_length=41, null=True)),
                ('clientmachine', models.CharField(blank=True, db_column='ClientMachine', max_length=40, null=True)),
                ('recorddatetime', models.DateTimeField(blank=True, db_column='RecordDateTime', null=True)),
            ],
            options={
                'db_table': 'MappedCodesFinance',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Maternityservices',
            fields=[
                ('maternityid', models.IntegerField(db_column='MaternityID')),
                ('maternitycode', models.CharField(db_column='MaternityCode', max_length=20, primary_key=True, serialize=False)),
                ('maternityname', models.CharField(blank=True, db_column='MaternityName', max_length=200, null=True, unique=True)),
                ('unitprice', models.DecimalField(blank=True, db_column='UnitPrice', decimal_places=4, max_digits=19, null=True)),
                ('vatpercentage', models.DecimalField(blank=True, db_column='VATPercentage', decimal_places=0, max_digits=18, null=True)),
                ('hidden', models.BooleanField(blank=True, db_column='Hidden', null=True)),
                ('unitcost', models.DecimalField(blank=True, db_column='UnitCost', decimal_places=4, max_digits=19, null=True)),
            ],
            options={
                'db_table': 'MaternityServices',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Memberbenefits',
            fields=[
                ('benefitcode', models.CharField(db_column='BenefitCode', max_length=20, primary_key=True, serialize=False)),
                ('benefitname', models.CharField(blank=True, db_column='BenefitName', max_length=100, null=True, unique=True)),
            ],
            options={
                'db_table': 'MemberBenefits',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Messenger',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('messageinfo', models.TextField(blank=True, db_column='MessageInfo', null=True)),
                ('clientmachine', models.CharField(blank=True, db_column='ClientMachine', max_length=40, null=True)),
                ('recorddatetime', models.DateTimeField(blank=True, db_column='RecordDateTime', null=True)),
                ('status', models.BooleanField(blank=True, db_column='Status', null=True)),
            ],
            options={
                'db_table': 'Messenger',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Obstetrichistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gravidity', models.IntegerField(blank=True, db_column='Gravidity', null=True)),
                ('parity', models.IntegerField(blank=True, db_column='Parity', null=True)),
                ('noofsurvivingchildren', models.IntegerField(blank=True, db_column='NoOfSurvivingChildren', null=True)),
                ('lmp', models.DateTimeField(blank=True, db_column='LMP', null=True)),
                ('edd', models.DateTimeField(blank=True, db_column='EDD', null=True)),
                ('gestationalageinwks', models.IntegerField(blank=True, db_column='GestationalAgeInWks', null=True)),
                ('noofstillbirths', models.IntegerField(blank=True, db_column='NoOfStillBirths', null=True)),
                ('noofabortions', models.IntegerField(blank=True, db_column='NoOfAbortions', null=True)),
                ('noofcaesarians', models.IntegerField(blank=True, db_column='NoOfCaesarians', null=True)),
                ('clientmachine', models.CharField(blank=True, db_column='ClientMachine', max_length=40, null=True)),
                ('recorddatetime', models.DateTimeField(blank=True, db_column='RecordDateTime', null=True)),
            ],
            options={
                'db_table': 'ObstetricHistory',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Occupationaltherapy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('clientmachine', models.CharField(blank=True, db_column='ClientMachine', max_length=40, null=True)),
                ('recorddatetime', models.DateTimeField(blank=True, db_column='RecordDateTime', null=True)),
            ],
            options={
                'db_table': 'OccupationalTherapy',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Oldlabrequests',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('specimenid', models.IntegerField(blank=True, db_column='SpecimenID', null=True)),
                ('specimenno', models.CharField(blank=True, db_column='SpecimenNo', max_length=20, null=True)),
                ('specimendes', models.CharField(blank=True, db_column='SpecimenDes', max_length=40, null=True)),
                ('drawnby', models.CharField(blank=True, db_column='DrawnBy', max_length=20, null=True)),
                ('visitno', models.CharField(blank=True, db_column='VisitNo', max_length=20, null=True)),
                ('drawndatetime', models.DateTimeField(blank=True, db_column='DrawnDateTime', null=True)),
                ('loginid', models.CharField(blank=True, db_column='LoginID', max_length=20, null=True)),
                ('recorddatetime', models.DateTimeField(blank=True, db_column='RecordDateTime', null=True)),
            ],
            options={
                'db_table': 'OldLabRequests',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Opddiagnosisarchive',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('visitno', models.CharField(db_column='VisitNo', max_length=20)),
                ('diseasecode', models.CharField(db_column='DiseaseCode', max_length=10)),
                ('notes', models.CharField(blank=True, db_column='Notes', max_length=200, null=True)),
                ('loginid', models.CharField(blank=True, db_column='LoginID', max_length=20, null=True)),
                ('recorddatetime', models.DateTimeField(blank=True, db_column='RecordDateTime', null=True)),
            ],
            options={
                'db_table': 'OPDDiagnosisArchive',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Opticalservices',
            fields=[
                ('opticalid', models.IntegerField(db_column='OpticalID')),
                ('opticalcode', models.CharField(db_column='OpticalCode', max_length=20, primary_key=True, serialize=False)),
                ('opticalname', models.CharField(blank=True, db_column='OpticalName', max_length=200, null=True, unique=True)),
                ('unitcost', models.DecimalField(blank=True, db_column='UnitCost', decimal_places=4, max_digits=19, null=True)),
                ('unitprice', models.DecimalField(blank=True, db_column='UnitPrice', decimal_places=4, max_digits=19, null=True)),
                ('vatpercentage', models.DecimalField(blank=True, db_column='VATPercentage', decimal_places=0, max_digits=18, null=True)),
                ('hidden', models.BooleanField(blank=True, db_column='Hidden', null=True)),
                ('quantity', models.IntegerField(blank=True, db_column='Quantity', null=True)),
                ('batchno', models.CharField(blank=True, db_column='BatchNo', max_length=20, null=True)),
                ('lastupdate', models.DateTimeField(blank=True, db_column='LastUpdate', null=True)),
                ('expirydate', models.DateTimeField(blank=True, db_column='ExpiryDate', null=True)),
            ],
            options={
                'db_table': 'OpticalServices',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Options',
            fields=[
                ('optionname', models.CharField(db_column='OptionName', max_length=100, primary_key=True, serialize=False)),
                ('optionvalue', models.CharField(db_column='OptionValue', max_length=200)),
                ('maxlength', models.SmallIntegerField(db_column='MaxLength')),
                ('hidden', models.BooleanField(db_column='Hidden')),
            ],
            options={
                'db_table': 'Options',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Otherincome',
            fields=[
                ('incomeid', models.IntegerField(db_column='IncomeID')),
                ('incomeno', models.CharField(db_column='IncomeNo', max_length=20, primary_key=True, serialize=False)),
                ('incomedate', models.DateTimeField(blank=True, db_column='IncomeDate', null=True)),
                ('amount', models.DecimalField(blank=True, db_column='Amount', decimal_places=4, max_digits=19, null=True)),
                ('amounttendered', models.DecimalField(blank=True, db_column='AmountTendered', decimal_places=4, max_digits=19, null=True)),
                ('exchangerate', models.DecimalField(blank=True, db_column='ExchangeRate', decimal_places=4, max_digits=19, null=True)),
                ('change', models.DecimalField(blank=True, db_column='Change', decimal_places=4, max_digits=19, null=True)),
                ('documentno', models.CharField(blank=True, db_column='DocumentNo', max_length=20, null=True)),
                ('notes', models.CharField(blank=True, db_column='Notes', max_length=200, null=True)),
                ('clientmachine', models.CharField(blank=True, db_column='ClientMachine', max_length=40, null=True)),
                ('recorddatetime', models.DateTimeField(blank=True, db_column='RecordDateTime', null=True)),
            ],
            options={
                'db_table': 'OtherIncome',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Otheritems',
            fields=[
                ('itemid', models.IntegerField(db_column='ItemID')),
                ('itemcode', models.CharField(db_column='ItemCode', max_length=20, primary_key=True, serialize=False)),
                ('itemname', models.CharField(blank=True, db_column='ItemName', max_length=200, null=True)),
                ('unitcost', models.DecimalField(blank=True, db_column='UnitCost', decimal_places=4, max_digits=19, null=True)),
                ('quantity', models.IntegerField(blank=True, db_column='Quantity', null=True)),
                ('details', models.CharField(blank=True, db_column='Details', max_length=1000, null=True)),
                ('vatpercentage', models.DecimalField(blank=True, db_column='VATPercentage', decimal_places=0, max_digits=18, null=True)),
                ('hidden', models.BooleanField(blank=True, db_column='Hidden', null=True)),
                ('recorddatetime', models.DateTimeField(blank=True, db_column='RecordDateTime', null=True)),
                ('clientmachine', models.CharField(blank=True, db_column='ClientMachine', max_length=41, null=True)),
                ('unitprice', models.DecimalField(blank=True, db_column='UnitPrice', decimal_places=4, max_digits=19, null=True)),
                ('lastupdate', models.DateTimeField(blank=True, db_column='LastUpdate', null=True)),
                ('orderlevel', models.IntegerField(blank=True, db_column='OrderLevel', null=True)),
                ('keepingunit', models.IntegerField(blank=True, db_column='KeepingUnit', null=True)),
            ],
            options={
                'db_table': 'OtherItems',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Otintervention',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cognitiveassessment', models.BooleanField(blank=True, db_column='CognitiveAssessment', null=True)),
                ('handtherapy', models.BooleanField(blank=True, db_column='HandTherapy', null=True)),
                ('healtheducation', models.BooleanField(blank=True, db_column='HealthEducation', null=True)),
                ('therapeuticgroupactivities', models.BooleanField(blank=True, db_column='TherapeuticGroupActivities', null=True)),
                ('homebasedrehabilitation', models.BooleanField(blank=True, db_column='HomebasedRehabilitation', null=True)),
                ('assistivedevices', models.BooleanField(blank=True, db_column='AssistiveDevices', null=True)),
                ('mobilityskillstraining', models.BooleanField(blank=True, db_column='MobilitySkillsTraining', null=True)),
                ('neurocognitiverehabilitation', models.BooleanField(blank=True, db_column='NeurocognitiveRehabilitation', null=True)),
                ('orientationtechniques', models.BooleanField(blank=True, db_column='OrientationTechniques', null=True)),
                ('vocationalrehabilitation', models.BooleanField(blank=True, db_column='VocationalRehabilitation', null=True)),
                ('selfcaretraining', models.BooleanField(blank=True, db_column='SelfCareTraining', null=True)),
                ('playtherapy', models.BooleanField(blank=True, db_column='PlayTherapy', null=True)),
                ('stressmanagement', models.BooleanField(blank=True, db_column='StressManagement', null=True)),
                ('otherassessment', models.CharField(blank=True, db_column='OtherAssessment', max_length=100, null=True)),
                ('notes', models.CharField(blank=True, db_column='Notes', max_length=200, null=True)),
                ('clientmachine', models.CharField(blank=True, db_column='ClientMachine', max_length=40, null=True)),
                ('recorddatetime', models.DateTimeField(blank=True, db_column='RecordDateTime', null=True)),
            ],
            options={
                'db_table': 'OTIntervention',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Outwardfiles',
            fields=[
                ('outwardid', models.IntegerField(db_column='OutwardID')),
                ('outwardno', models.CharField(db_column='OutwardNo', max_length=20, primary_key=True, serialize=False)),
                ('takendatetime', models.DateTimeField(blank=True, db_column='TakenDateTime', null=True)),
                ('takenby', models.CharField(blank=True, db_column='TakenBy', max_length=100, null=True)),
                ('billaccountname', models.CharField(blank=True, db_column='BillAccountName', max_length=100, null=True)),
                ('clientmachine', models.CharField(blank=True, db_column='ClientMachine', max_length=40, null=True)),
                ('recorddatetime', models.DateTimeField(blank=True, db_column='RecordDateTime', null=True)),
            ],
            options={
                'db_table': 'OutwardFiles',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Packages',
            fields=[
                ('packageid', models.IntegerField(db_column='PackageID')),
                ('packageno', models.CharField(db_column='PackageNo', max_length=20, primary_key=True, serialize=False)),
                ('packagename', models.CharField(blank=True, db_column='PackageName', max_length=200, null=True)),
                ('unitcost', models.DecimalField(blank=True, db_column='UnitCost', decimal_places=4, max_digits=19, null=True)),
                ('unitprice', models.DecimalField(blank=True, db_column='UnitPrice', decimal_places=4, max_digits=19, null=True)),
                ('expirydays', models.IntegerField(blank=True, db_column='ExpiryDays', null=True)),
                ('hidden', models.BooleanField(blank=True, db_column='Hidden', null=True)),
                ('monitorqty', models.BooleanField(blank=True, db_column='MonitorQty', null=True)),
                ('clientmachine', models.CharField(blank=True, db_column='ClientMachine', max_length=40, null=True)),
                ('recorddatetime', models.DateTimeField(blank=True, db_column='RecordDateTime', null=True)),
                ('standardfee', models.DecimalField(blank=True, db_column='StandardFee', decimal_places=4, max_digits=19, null=True)),
            ],
            options={
                'db_table': 'Packages',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Parishes',
            fields=[
                ('parishcode', models.CharField(db_column='ParishCode', max_length=20, primary_key=True, serialize=False)),
                ('parishname', models.CharField(blank=True, db_column='ParishName', max_length=41, null=True)),
            ],
            options={
                'db_table': 'Parishes',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Pathologyexaminations',
            fields=[
                ('examid', models.IntegerField(db_column='ExamID')),
                ('examcode', models.CharField(db_column='ExamCode', max_length=20, primary_key=True, serialize=False)),
                ('examname', models.CharField(blank=True, db_column='ExamName', max_length=40, null=True)),
                ('unitprice', models.DecimalField(blank=True, db_column='UnitPrice', decimal_places=4, max_digits=19, null=True)),
                ('vatpercentage', models.DecimalField(blank=True, db_column='VATPercentage', decimal_places=0, max_digits=18, null=True)),
                ('hidden', models.BooleanField(blank=True, db_column='Hidden', null=True)),
                ('clientmachine', models.CharField(blank=True, db_column='ClientMachine', max_length=40, null=True)),
                ('recorddatetime', models.DateTimeField(blank=True, db_column='RecordDateTime', null=True)),
                ('unitcost', models.DecimalField(blank=True, db_column='UnitCost', decimal_places=4, max_digits=19, null=True)),
            ],
            options={
                'db_table': 'PathologyExaminations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Patients',
            fields=[
                ('patientid', models.IntegerField(db_column='PatientID')),
                ('patientno', models.CharField(db_column='PatientNo', max_length=20, primary_key=True, serialize=False)),
                ('nationalidno', models.CharField(blank=True, db_column='NationalIDNo', max_length=20, null=True)),
                ('referenceno', models.CharField(blank=True, db_column='ReferenceNo', max_length=20, null=True)),
                ('firstname', models.CharField(blank=True, db_column='FirstName', max_length=20, null=True)),
                ('lastname', models.CharField(blank=True, db_column='LastName', max_length=20, null=True)),
                ('middlename', models.CharField(blank=True, db_column='MiddleName', max_length=20, null=True)),
                ('birthdate', models.DateTimeField(blank=True, db_column='BirthDate', null=True)),
                ('photo', models.BinaryField(blank=True, db_column='Photo', null=True)),
                ('fingerprint', models.BinaryField(blank=True, db_column='Fingerprint', null=True)),
                ('birthplace', models.CharField(blank=True, db_column='BirthPlace', max_length=40, null=True)),
                ('address', models.CharField(blank=True, db_column='Address', max_length=100, null=True)),
                ('occupation', models.CharField(blank=True, db_column='Occupation', max_length=100, null=True)),
                ('phone', models.CharField(blank=True, db_column='Phone', max_length=30, null=True)),
                ('email', models.CharField(blank=True, db_column='Email', max_length=40, null=True)),
                ('joindate', models.DateTimeField(blank=True, db_column='JoinDate', null=True)),
                ('location', models.CharField(blank=True, db_column='Location', max_length=40, null=True)),
                ('nokname', models.CharField(blank=True, db_column='NOKName', max_length=41, null=True)),
                ('nokrelationship', models.CharField(blank=True, db_column='NOKRelationship', max_length=20, null=True)),
                ('nokphone', models.CharField(blank=True, db_column='NOKPhone', max_length=30, null=True)),
                ('defaultbillno', models.CharField(blank=True, db_column='DefaultBillNo', max_length=20, null=True)),
                ('defaultmembercardno', models.CharField(blank=True, db_column='DefaultMemberCardNo', max_length=30, null=True)),
                ('defaultmainmembername', models.CharField(blank=True, db_column='DefaultMainMemberName', max_length=41, null=True)),
                ('enforcedefaultbillno', models.BooleanField(db_column='EnforceDefaultBillNo')),
                ('hidedetails', models.BooleanField(blank=True, db_column='HideDetails', null=True)),
                ('employer', models.CharField(blank=True, db_column='Employer', max_length=41, null=True)),
                ('employeraddress', models.CharField(blank=True, db_column='EmployerAddress', max_length=100, null=True)),
                ('referringmedicalofficer', models.CharField(blank=True, db_column='ReferringMedicalOfficer', max_length=41, null=True)),
                ('nearestdispensary', models.CharField(blank=True, db_column='NearestDispensary', max_length=30, null=True)),
                ('previousadmissions', models.CharField(blank=True, db_column='PreviousAdmissions', max_length=30, null=True)),
                ('chronicdiseases', models.CharField(blank=True, db_column='ChronicDiseases', max_length=200, null=True)),
                ('firstvisitdate', models.DateTimeField(blank=True, db_column='FirstVisitDate', null=True)),
                ('lastvisitdate', models.DateTimeField(blank=True, db_column='LastVisitDate', null=True)),
                ('combinationon', models.CharField(blank=True, db_column='CombinationOn', max_length=30, null=True)),
                ('totalvisits', models.IntegerField(blank=True, db_column='TotalVisits', null=True)),
                ('accountbalance', models.DecimalField(blank=True, db_column='AccountBalance', decimal_places=4, max_digits=19, null=True)),
                ('xraynumbers', models.DecimalField(blank=True, db_column='XrayNumbers', decimal_places=2, max_digits=6, null=True)),
                ('policenotified', models.BooleanField(db_column='PoliceNotified')),
                ('infectiousdiseasesnotified', models.BooleanField(db_column='InfectiousDiseasesNotified')),
                ('referringfacility', models.CharField(blank=True, db_column='ReferringFacility', max_length=41, null=True)),
                ('medicalconditions', models.CharField(blank=True, db_column='MedicalConditions', max_length=2000, null=True)),
                ('provisionaldiagnosis', models.CharField(blank=True, db_column='ProvisionalDiagnosis', max_length=2000, null=True)),
                ('clientmachine', models.CharField(blank=True, db_column='ClientMachine', max_length=40, null=True)),
                ('recorddatetime', models.DateTimeField(blank=True, db_column='RecordDateTime', null=True)),
                ('opdoutstanding', models.DecimalField(blank=True, db_column='OPDOutstanding', decimal_places=4, max_digits=19, null=True)),
                ('extrabilloutstanding', models.DecimalField(blank=True, db_column='ExtraBillOutstanding', decimal_places=4, max_digits=19, null=True)),
                ('lastaccountactiondate', models.DateTimeField(blank=True, db_column='LastAccountActionDate', null=True)),
                ('knowaboutservice', models.CharField(blank=True, db_column='KnowAboutService', max_length=100, null=True)),
                ('tinnumber', models.CharField(blank=True, db_column='TINNumber', max_length=20, null=True)),
            ],
            options={
                'db_table': 'Patients',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Paymentrequests',
            fields=[
                ('payid', models.IntegerField(blank=True, db_column='PayID', null=True)),
                ('referenceno', models.CharField(db_column='ReferenceNo', max_length=20, primary_key=True, serialize=False)),
                ('telephone', models.CharField(blank=True, db_column='Telephone', max_length=30, null=True)),
                ('amount', models.DecimalField(blank=True, db_column='Amount', decimal_places=4, max_digits=19, null=True)),
                ('comment', models.CharField(blank=True, db_column='Comment', max_length=2000, null=True)),
                ('clientmachine', models.CharField(blank=True, db_column='ClientMachine', max_length=41, null=True)),
                ('recorddatetime', models.DateTimeField(blank=True, db_column='RecordDateTime', null=True)),
            ],
            options={
                'db_table': 'PaymentRequests',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Payments',
            fields=[
                ('receiptid', models.IntegerField(db_column='ReceiptID')),
                ('receiptno', models.CharField(db_column='ReceiptNo', max_length=20, primary_key=True, serialize=False)),
                ('payno', models.CharField(blank=True, db_column='PayNo', max_length=20, null=True)),
                ('clientfullname', models.CharField(blank=True, db_column='ClientFullName', max_length=100, null=True)),
                ('paydate', models.DateTimeField(blank=True, db_column='PayDate', null=True)),
                ('documentno', models.CharField(blank=True, db_column='DocumentNo', max_length=20, null=True)),
                ('amountwords', models.CharField(blank=True, db_column='AmountWords', max_length=200, null=True)),
                ('notes', models.CharField(blank=True, db_column='Notes', max_length=100, null=True)),
                ('withholdingtax', models.DecimalField(blank=True, db_column='WithholdingTax', decimal_places=4, max_digits=19, null=True)),
                ('granddiscount', models.DecimalField(blank=True, db_column='GrandDiscount', decimal_places=4, max_digits=19, null=True)),
                ('amounttendered', models.DecimalField(blank=True, db_column='AmountTendered', decimal_places=4, max_digits=19, null=True)),
                ('exchangerate', models.DecimalField(blank=True, db_column='ExchangeRate', decimal_places=4, max_digits=19, null=True)),
                ('change', models.DecimalField(blank=True, db_column='Change', decimal_places=4, max_digits=19, null=True)),
                ('sendbalancetoaccount', models.BooleanField(blank=True, db_column='SendBalanceToAccount', null=True)),
                ('useaccountbalance', models.BooleanField(blank=True, db_column='UseAccountBalance', null=True)),
                ('clientmachine', models.CharField(blank=True, db_column='ClientMachine', max_length=40, null=True)),
                ('recorddatetime', models.DateTimeField(blank=True, db_column='RecordDateTime', null=True)),
                ('amount', models.DecimalField(blank=True, db_column='Amount', decimal_places=4, max_digits=19, null=True)),
                ('cashamount', models.DecimalField(blank=True, db_column='CashAmount', decimal_places=4, max_digits=19, null=True)),
            ],
            options={
                'db_table': 'Payments',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Paymentvouchers',
            fields=[
                ('voucherid', models.IntegerField(db_column='VoucherID')),
                ('voucherno', models.CharField(db_column='VoucherNo', max_length=20, primary_key=True, serialize=False)),
                ('billno', models.CharField(blank=True, db_column='BillNo', max_length=20, null=True)),
                ('paydate', models.DateTimeField(blank=True, db_column='PayDate', null=True)),
                ('documentno', models.CharField(blank=True, db_column='DocumentNo', max_length=20, null=True)),
                ('amountwords', models.CharField(blank=True, db_column='AmountWords', max_length=200, null=True)),
                ('notes', models.CharField(blank=True, db_column='Notes', max_length=200, null=True)),
                ('amounttendered', models.DecimalField(blank=True, db_column='AmountTendered', decimal_places=4, max_digits=19, null=True)),
                ('exchangerate', models.DecimalField(blank=True, db_column='ExchangeRate', decimal_places=4, max_digits=19, null=True)),
                ('change', models.DecimalField(blank=True, db_column='Change', decimal_places=4, max_digits=19, null=True)),
                ('sendbalancetoaccount', models.BooleanField(blank=True, db_column='SendBalanceToAccount', null=True)),
                ('useaccountbalance', models.BooleanField(blank=True, db_column='UseAccountBalance', null=True)),
                ('payno', models.CharField(blank=True, db_column='PayNo', max_length=20, null=True)),
                ('filterno', models.CharField(blank=True, db_column='FilterNo', max_length=20, null=True)),
                ('payee', models.CharField(blank=True, db_column='Payee', max_length=200, null=True)),
                ('clientmachine', models.CharField(blank=True, db_column='ClientMachine', max_length=41, null=True)),
                ('recorddatetime', models.DateTimeField(blank=True, db_column='RecordDateTime', null=True)),
            ],
            options={
                'db_table': 'PaymentVouchers',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Perinatal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('durationoflabour', models.DecimalField(blank=True, db_column='DurationOfLabour', decimal_places=0, max_digits=18, null=True)),
                ('amountofbloodloss', models.DecimalField(blank=True, db_column='AmountOfBloodLoss', decimal_places=0, max_digits=18, null=True)),
                ('detailsofcondition', models.CharField(blank=True, db_column='DetailsOfCondition', max_length=100, null=True)),
                ('clientmachine', models.CharField(blank=True, db_column='ClientMachine', max_length=40, null=True)),
                ('recorddatetime', models.DateTimeField(blank=True, db_column='RecordDateTime', null=True)),
            ],
            options={
                'db_table': 'Perinatal',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Physicalstockcount',
            fields=[
                ('pscid', models.IntegerField(db_column='PSCID')),
                ('pscno', models.CharField(db_column='PSCNo', max_length=20, primary_key=True, serialize=False)),
                ('generalnotes', models.CharField(blank=True, db_column='GeneralNotes', max_length=200, null=True)),
                ('startdate', models.DateTimeField(blank=True, db_column='StartDate', null=True)),
                ('enddate', models.DateTimeField(blank=True, db_column='EndDate', null=True)),
                ('closed', models.BooleanField(blank=True, db_column='Closed', null=True)),
                ('clientmachine', models.CharField(blank=True, db_column='ClientMachine', max_length=40, null=True)),
                ('recorddatetime', models.DateTimeField(blank=True, db_column='RecordDateTime', null=True)),
            ],
            options={
                'db_table': 'PhysicalStockCount',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Physicalstockcountdetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('itemcode', models.CharField(db_column='ItemCode', max_length=20)),
                ('systemquantity', models.IntegerField(blank=True, db_column='SystemQuantity', null=True)),
                ('physicalcountquantity', models.IntegerField(blank=True, db_column='PhysicalCountQuantity', null=True)),
                ('notes', models.CharField(blank=True, db_column='Notes', max_length=200, null=True)),
                ('clientmachine', models.CharField(blank=True, db_column='ClientMachine', max_length=20, null=True)),
                ('recorddatetime', models.DateTimeField(blank=True, db_column='RecordDateTime', null=True)),
                ('batchno', models.CharField(blank=True, db_column='BatchNo', max_length=20, null=True)),
                ('expirydate', models.DateTimeField(blank=True, db_column='ExpiryDate', null=True)),
                ('itemname', models.CharField(blank=True, db_column='ItemName', max_length=800, null=True)),
                ('stocktype', models.CharField(blank=True, db_column='StockType', max_length=100, null=True)),
                ('variance', models.IntegerField(blank=True, db_column='Variance', null=True)),
                ('unitcost', models.DecimalField(blank=True, db_column='UnitCost', decimal_places=4, max_digits=19, null=True)),
                ('unitprice', models.DecimalField(blank=True, db_column='UnitPrice', decimal_places=4, max_digits=19, null=True)),
            ],
            options={
                'db_table': 'PhysicalStockCountDetails',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Physiodiseases',
            fields=[
                ('diseaseid', models.IntegerField(blank=True, db_column='DiseaseID', null=True)),
                ('physiodiseaseno', models.CharField(db_column='PhysioDiseaseNo', max_length=20, primary_key=True, serialize=False)),
                ('diseasecode', models.CharField(blank=True, db_column='DiseaseCode', max_length=10, null=True)),
                ('diseasename', models.CharField(blank=True, db_column='DiseaseName', max_length=200, null=True)),
                ('clientmachine', models.CharField(blank=True, db_column='ClientMachine', max_length=40, null=True)),
                ('recorddatetime', models.DateTimeField(blank=True, db_column='RecordDateTime', null=True)),
            ],
            options={
                'db_table': 'PhysioDiseases',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Physiotherapy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('medication', models.CharField(blank=True, db_column='Medication', max_length=100, null=True)),
                ('musclestatus', models.CharField(blank=True, db_column='MuscleStatus', max_length=100, null=True)),
                ('statusofjoints', models.CharField(blank=True, db_column='StatusOfJoints', max_length=50, null=True)),
                ('sensitivity', models.CharField(blank=True, db_column='Sensitivity', max_length=100, null=True)),
                ('walkinganalysis', models.CharField(blank=True, db_column='WalkingAnalysis', max_length=100, null=True)),
                ('shorttermtreatmenttargets', models.CharField(blank=True, db_column='ShortTermTreatmentTargets', max_length=100, null=True)),
                ('longtermtreatmenttargets', models.CharField(blank=True, db_column='LongTermTreatmentTargets', max_length=100, null=True)),
                ('provisionaldiagnosis', models.CharField(blank=True, db_column='ProvisionalDiagnosis', max_length=100, null=True)),
                ('clientmachine', models.CharField(blank=True, db_column='ClientMachine', max_length=40, null=True)),
                ('recorddatetime', models.DateTimeField(blank=True, db_column='RecordDateTime', null=True)),
            ],
            options={
                'db_table': 'Physiotherapy',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Possibleattacheditems',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('objectno', models.CharField(db_column='ObjectNo', max_length=20)),
                ('itemcode', models.CharField(db_column='ItemCode', max_length=20)),
                ('itemcategoryid', models.CharField(db_column='ItemCategoryID', max_length=10)),
                ('quantity', models.IntegerField(blank=True, db_column='Quantity', null=True)),
                ('notes', models.CharField(blank=True, db_column='Notes', max_length=200, null=True)),
                ('dosage', models.CharField(blank=True, db_column='Dosage', max_length=20, null=True)),
                ('duration', models.IntegerField(blank=True, db_column='Duration', null=True)),
                ('unitcost', models.DecimalField(blank=True, db_column='UnitCost', decimal_places=4, max_digits=19, null=True)),
                ('unitprice', models.DecimalField(blank=True, db_column='UnitPrice', decimal_places=4, max_digits=19, null=True)),
                ('loginid', models.CharField(blank=True, db_column='LoginID', max_length=20, null=True)),
                ('clientmachine', models.CharField(blank=True, db_column='ClientMachine', max_length=40, null=True)),
                ('recorddatetime', models.DateTimeField(blank=True, db_column='RecordDateTime', null=True)),
                ('objectdescription', models.CharField(blank=True, db_column='ObjectDescription', max_length=100, null=True)),
                ('userfullname', models.CharField(blank=True, db_column='UserFullName', max_length=41, null=True)),
            ],
            options={
                'db_table': 'PossibleAttachedItems',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Postnatal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('conditiondetails', models.CharField(blank=True, db_column='ConditionDetails', max_length=100, null=True)),
                ('physicalabnormalitydetails', models.CharField(blank=True, db_column='PhysicalAbnormalityDetails', max_length=100, null=True)),
                ('umblicalcorddetails', models.CharField(blank=True, db_column='UmblicalCordDetails', max_length=100, null=True)),
                ('infectiondetails', models.CharField(blank=True, db_column='InfectionDetails', max_length=100, null=True)),
                ('convulsionsdetails', models.CharField(blank=True, db_column='ConvulsionsDetails', max_length=100, null=True)),
                ('apgarscore', models.IntegerField(blank=True, db_column='ApgarScore', null=True)),
                ('notes', models.CharField(blank=True, db_column='Notes', max_length=200, null=True)),
                ('clientmachine', models.CharField(blank=True, db_column='ClientMachine', max_length=41, null=True)),
                ('recorddatetime', models.DateTimeField(blank=True, db_column='RecordDateTime', null=True)),
            ],
            options={
                'db_table': 'PostNatal',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Preoperative',
            fields=[
                ('roundno', models.CharField(db_column='RoundNo', max_length=20, primary_key=True, serialize=False)),
                ('explainationofsurgery', models.BooleanField(blank=True, db_column='ExplainationOfSurgery', null=True)),
                ('bathed', models.BooleanField(blank=True, db_column='Bathed', null=True)),
                ('knownallergy', models.BooleanField(blank=True, db_column='KnownAllergy', null=True)),
                ('correctidentity', models.BooleanField(blank=True, db_column='CorrectIdentity', null=True)),
                ('correctnotes', models.BooleanField(blank=True, db_column='CorrectNotes', null=True)),
                ('npmlast6hrs', models.BooleanField(blank=True, db_column='NPMLast6hrs', null=True)),
                ('consentsigned', models.BooleanField(blank=True, db_column='ConsentSigned', null=True)),
                ('denturesremoved', models.BooleanField(blank=True, db_column='DenturesRemoved', null=True)),
                ('jewelleryremoved', models.BooleanField(blank=True, db_column='JewelleryRemoved', null=True)),
                ('clientmachine', models.CharField(blank=True, db_column='ClientMachine', max_length=41, null=True)),
                ('recorddatetime', models.DateTimeField(blank=True, db_column='RecordDateTime', null=True)),
            ],
            options={
                'db_table': 'Preoperative',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Printdetails',
            fields=[
                ('patientno', models.CharField(db_column='PatientNo', max_length=20, primary_key=True, serialize=False)),
                ('documentno', models.CharField(blank=True, db_column='DocumentNo', max_length=20, null=True)),
                ('printdesc', models.CharField(db_column='PrintDesc', max_length=200)),
                ('clientmachine', models.CharField(blank=True, db_column='ClientMachine', max_length=40, null=True)),
                ('recorddatetime', models.DateTimeField(db_column='RecordDateTime')),
            ],
            options={
                'db_table': 'PrintDetails',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Procedures',
            fields=[
                ('procedureid', models.IntegerField(db_column='ProcedureID')),
                ('procedurecode', models.CharField(db_column='ProcedureCode', max_length=10, primary_key=True, serialize=False)),
                ('procedurename', models.CharField(blank=True, db_column='ProcedureName', max_length=800, null=True, unique=True)),
                ('shortname', models.CharField(blank=True, db_column='ShortName', max_length=200, null=True)),
                ('unitcost', models.DecimalField(blank=True, db_column='UnitCost', decimal_places=4, max_digits=19, null=True)),
                ('unitprice', models.DecimalField(blank=True, db_column='UnitPrice', decimal_places=4, max_digits=19, null=True)),
                ('vatpercentage', models.DecimalField(blank=True, db_column='VATPercentage', decimal_places=0, max_digits=18, null=True)),
                ('hidden', models.BooleanField(blank=True, db_column='Hidden', null=True)),
                ('revenuestream', models.CharField(blank=True, db_column='RevenueStream', max_length=20, null=True)),
                ('recorddatetime', models.DateTimeField(blank=True, db_column='RecordDateTime', null=True)),
                ('clientmachine', models.CharField(blank=True, db_column='ClientMachine', max_length=41, null=True)),
            ],
            options={
                'db_table': 'Procedures',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Productownerinfo',
            fields=[
                ('productowner', models.CharField(db_column='ProductOwner', max_length=200, primary_key=True, serialize=False)),
                ('address', models.CharField(blank=True, db_column='Address', max_length=200, null=True)),
                ('phone', models.CharField(blank=True, db_column='Phone', max_length=100, null=True)),
                ('alternatephone', models.CharField(blank=True, db_column='AlternatePhone', max_length=100, null=True)),
                ('fax', models.CharField(blank=True, db_column='Fax', max_length=100, null=True)),
                ('email', models.CharField(blank=True, db_column='Email', max_length=100, null=True)),
                ('alternateemail', models.CharField(blank=True, db_column='AlternateEmail', max_length=100, null=True)),
                ('website', models.CharField(blank=True, db_column='Website', max_length=100, null=True)),
                ('photo', models.BinaryField(blank=True, db_column='Photo', null=True)),
                ('alternatephoto', models.BinaryField(blank=True, db_column='AlternatePhoto', null=True)),
                ('productversion', models.CharField(blank=True, db_column='ProductVersion', max_length=100, null=True)),
                ('tinno', models.CharField(blank=True, db_column='TINNo', max_length=100, null=True)),
                ('vatno', models.CharField(blank=True, db_column='VATNo', max_length=100, null=True)),
                ('logotopmargin', models.SmallIntegerField(blank=True, db_column='LogoTopMargin', null=True)),
                ('texttopmargin', models.SmallIntegerField(blank=True, db_column='TextTopMargin', null=True)),
                ('logoleftmargin', models.SmallIntegerField(blank=True, db_column='LogoLeftMargin', null=True)),
                ('textleftmargin', models.SmallIntegerField(blank=True, db_column='TextLeftMargin', null=True)),
                ('lastupdate', models.DateTimeField(blank=True, db_column='LastUpdate', null=True)),
            ],
            options={
                'db_table': 'ProductOwnerInfo',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Purchaseorders',
            fields=[
                ('purchaseorderid', models.IntegerField(db_column='PurchaseOrderID')),
                ('purchaseorderno', models.CharField(db_column='PurchaseOrderNo', max_length=20, primary_key=True, serialize=False)),
                ('orderdate', models.DateTimeField(blank=True, db_column='OrderDate', null=True)),
                ('documentno', models.CharField(blank=True, db_column='DocumentNo', max_length=20, null=True)),
                ('shipaddress', models.CharField(blank=True, db_column='ShipAddress', max_length=300, null=True)),
                ('clientmachine', models.CharField(blank=True, db_column='ClientMachine', max_length=40, null=True)),
                ('recorddatetime', models.DateTimeField(blank=True, db_column='RecordDateTime', null=True)),
            ],
            options={
                'db_table': 'PurchaseOrders',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Quicksearchcolumns',
            fields=[
                ('sortorder', models.AutoField(db_column='SortOrder', primary_key=True, serialize=False)),
                ('columnname', models.CharField(db_column='ColumnName', max_length=200)),
                ('columncaption', models.CharField(db_column='ColumnCaption', max_length=200)),
                ('columnreference', models.CharField(db_column='ColumnReference', max_length=200)),
                ('searchable', models.BooleanField(blank=True, db_column='Searchable', null=True)),
            ],
            options={
                'db_table': 'QuickSearchColumns',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Quotations',
            fields=[
                ('quotationid', models.IntegerField(db_column='QuotationID')),
                ('quotationno', models.CharField(db_column='QuotationNo', max_length=20, primary_key=True, serialize=False)),
                ('quotationdate', models.DateTimeField(blank=True, db_column='QuotationDate', null=True)),
                ('amountwords', models.CharField(blank=True, db_column='AmountWords', max_length=200, null=True)),
                ('clientmachine', models.CharField(blank=True, db_column='ClientMachine', max_length=40, null=True)),
                ('recorddatetime', models.DateTimeField(blank=True, db_column='RecordDateTime', null=True)),
            ],
            options={
                'db_table': 'Quotations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Radiologyexaminations',
            fields=[
                ('examid', models.IntegerField(db_column='ExamID')),
                ('examcode', models.CharField(db_column='ExamCode', max_length=20, primary_key=True, serialize=False)),
                ('examname', models.CharField(blank=True, db_column='ExamName', max_length=40, null=True, unique=True)),
                ('unitprice', models.DecimalField(blank=True, db_column='UnitPrice', decimal_places=4, max_digits=19, null=True)),
                ('vatpercentage', models.DecimalField(blank=True, db_column='VATPercentage', decimal_places=0, max_digits=18, null=True)),
                ('hidden', models.BooleanField(blank=True, db_column='Hidden', null=True)),
                ('unitcost', models.DecimalField(blank=True, db_column='UnitCost', decimal_places=4, max_digits=19, null=True)),
            ],
            options={
                'db_table': 'RadiologyExaminations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Refundrequests',
            fields=[
                ('refundrequestid', models.IntegerField(db_column='RefundRequestID')),
                ('refundrequestno', models.CharField(db_column='RefundRequestNo', max_length=20, primary_key=True, serialize=False)),
                ('requestedby', models.CharField(blank=True, db_column='Requestedby', max_length=41, null=True)),
                ('clientmachine', models.CharField(blank=True, db_column='ClientMachine', max_length=40, null=True)),
                ('recorddatetime', models.DateTimeField(blank=True, db_column='RecordDateTime', null=True)),
            ],
            options={
                'db_table': 'RefundRequests',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Refunds',
            fields=[
                ('refundid', models.IntegerField(db_column='RefundID')),
                ('refundno', models.CharField(db_column='RefundNo', max_length=20, primary_key=True, serialize=False)),
                ('refunddate', models.DateTimeField(blank=True, db_column='RefundDate', null=True)),
                ('amount', models.DecimalField(blank=True, db_column='Amount', decimal_places=4, max_digits=19, null=True)),
                ('amountwords', models.CharField(blank=True, db_column='AmountWords', max_length=200, null=True)),
                ('notes', models.CharField(blank=True, db_column='Notes', max_length=200, null=True)),
                ('clientmachine', models.CharField(blank=True, db_column='ClientMachine', max_length=40, null=True)),
                ('recorddatetime', models.DateTimeField(blank=True, db_column='RecordDateTime', null=True)),
            ],
            options={
                'db_table': 'Refunds',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Rejectedspecimens',
            fields=[
                ('specimenno', models.CharField(db_column='SpecimenNo', max_length=20, primary_key=True, serialize=False)),
                ('visitno', models.CharField(blank=True, db_column='VisitNo', max_length=20, null=True)),
                ('rejectiondate', models.DateTimeField(blank=True, db_column='RejectionDate', null=True)),
                ('rejectedat', models.CharField(blank=True, db_column='RejectedAt', max_length=10, null=True)),
                ('rejectedby', models.CharField(blank=True, db_column='RejectedBy', max_length=40, null=True)),
                ('isreaccepted', models.BooleanField(blank=True, db_column='IsReAccepted', null=True)),
                ('clientmachine', models.CharField(blank=True, db_column='ClientMachine', max_length=40, null=True)),
                ('recorddatetime', models.DateTimeField(blank=True, db_column='RecordDateTime', null=True)),
            ],
            options={
                'db_table': 'RejectedSpecimens',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Researchroutingform',
            fields=[
                ('ucino', models.IntegerField(blank=True, db_column='UCINo', null=True)),
                ('uciid', models.CharField(db_column='UCIID', max_length=20, primary_key=True, serialize=False)),
                ('patientno', models.CharField(blank=True, db_column='PatientNo', max_length=20, null=True)),
                ('firstname', models.CharField(blank=True, db_column='FirstName', max_length=20, null=True)),
                ('lastname', models.CharField(blank=True, db_column='LastName', max_length=20, null=True)),
                ('othername', models.CharField(blank=True, db_column='OtherName', max_length=20, null=True)),
                ('referalinitials', models.CharField(blank=True, db_column='ReferalInitials', max_length=10, null=True)),
                ('birthdate', models.DateTimeField(blank=True, db_column='BirthDate', null=True)),
                ('referraldate', models.DateTimeField(blank=True, db_column='ReferralDate', null=True)),
                ('referralstudyname', models.CharField(blank=True, db_column='ReferralStudyName', max_length=100, null=True)),
                ('diagnosis', models.CharField(blank=True, db_column='Diagnosis', max_length=1000, null=True)),
                ('referredby', models.CharField(blank=True, db_column='ReferredBy', max_length=100, null=True)),
                ('patientscreenedby', models.CharField(blank=True, db_column='PatientScreenedBy', max_length=200, null=True)),
                ('referralinitials', models.CharField(blank=True, db_column='ReferralInitials', max_length=10, null=True)),
                ('exclusionreason', models.CharField(blank=True, db_column='ExclusionReason', max_length=1000, null=True)),
                ('patientreferedto', models.CharField(blank=True, db_column='PatientReferedTo', max_length=200, null=True)),
                ('referreddate', models.DateTimeField(blank=True, db_column='ReferredDate', null=True)),
                ('scrno', models.CharField(blank=True, db_column='SCRNo', max_length=20, null=True)),
                ('pid', models.CharField(blank=True, db_column='PID', max_length=20, null=True)),
                ('sid', models.CharField(blank=True, db_column='SID', max_length=20, null=True)),
                ('clientmachine', models.CharField(blank=True, db_column='ClientMachine', max_length=40, null=True)),
                ('recorddatetime', models.DateTimeField(blank=True, db_column='RecordDateTime', null=True)),
            ],
            options={
                'db_table': 'ResearchRoutingForm',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Resourcesint',
            fields=[
                ('code', models.CharField(db_column='Code', max_length=20, primary_key=True, serialize=False)),
                ('description', models.CharField(blank=True, db_column='Description', max_length=10, null=True)),
                ('cost', models.DecimalField(blank=True, db_column='Cost', decimal_places=4, max_digits=19, null=True)),
                ('price', models.DecimalField(blank=True, db_column='Price', decimal_places=4, max_digits=19, null=True)),
                ('agent', models.CharField(blank=True, db_column='Agent', max_length=10, null=True)),
                ('syncstatus', models.BooleanField(blank=True, db_column='SyncStatus', null=True)),
                ('recorddatetime', models.DateTimeField(blank=True, db_column='RecordDateTime', null=True)),
            ],
            options={
                'db_table': 'ResourcesINT',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Revenuestreams',
            fields=[
                ('revenuestreamcode', models.CharField(db_column='RevenueStreamCode', max_length=20, primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, db_column='Name', max_length=40, null=True)),
                ('hidden', models.BooleanField(blank=True, db_column='Hidden', null=True)),
                ('recorddatetime', models.DateTimeField(blank=True, db_column='RecordDateTime', null=True)),
            ],
            options={
                'db_table': 'RevenueStreams',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Roles',
            fields=[
                ('rolename', models.CharField(db_column='RoleName', max_length=40, primary_key=True, serialize=False)),
                ('roledes', models.CharField(blank=True, db_column='RoleDes', max_length=100, null=True)),
                ('inbuilt', models.BooleanField(blank=True, db_column='InBuilt', null=True)),
            ],
            options={
                'db_table': 'Roles',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Rooms',
            fields=[
                ('roomno', models.CharField(db_column='RoomNo', max_length=20, primary_key=True, serialize=False)),
                ('roomname', models.CharField(blank=True, db_column='RoomName', max_length=41, null=True)),
            ],
            options={
                'db_table': 'Rooms',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Schememembers',
            fields=[
                ('medicalcardid', models.IntegerField(db_column='MedicalCardID')),
                ('mainmemberid', models.IntegerField(db_column='MainMemberID')),
                ('medicalcardno', models.CharField(db_column='MedicalCardNo', max_length=20, primary_key=True, serialize=False)),
                ('referenceno', models.CharField(blank=True, db_column='ReferenceNo', max_length=20, null=True)),
                ('surname', models.CharField(blank=True, db_column='Surname', max_length=20, null=True)),
                ('firstname', models.CharField(blank=True, db_column='FirstName', max_length=20, null=True)),
                ('middlename', models.CharField(blank=True, db_column='MiddleName', max_length=20, null=True)),
                ('birthdate', models.DateTimeField(blank=True, db_column='BirthDate', null=True)),
                ('address', models.CharField(blank=True, db_column='Address', max_length=100, null=True)),
                ('email', models.CharField(blank=True, db_column='Email', max_length=40, null=True)),
                ('phonework', models.CharField(blank=True, db_column='PhoneWork', max_length=30, null=True)),
                ('phonemobile', models.CharField(blank=True, db_column='PhoneMobile', max_length=30, null=True)),
                ('phonehome', models.CharField(blank=True, db_column='PhoneHome', max_length=30, null=True)),
                ('photo', models.BinaryField(blank=True, db_column='Photo', null=True)),
                ('fingerprint', models.BinaryField(blank=True, db_column='Fingerprint', null=True)),
                ('joindate', models.DateTimeField(blank=True, db_column='JoinDate', null=True)),
                ('relationship', models.CharField(blank=True, db_column='Relationship', max_length=41, null=True)),
                ('policystartdate', models.DateTimeField(blank=True, db_column='PolicyStartDate', null=True)),
                ('policyenddate', models.DateTimeField(blank=True, db_column='PolicyEndDate', null=True)),
                ('clientmachine', models.CharField(blank=True, db_column='ClientMachine', max_length=40, null=True)),
                ('recorddatetime', models.DateTimeField(blank=True, db_column='RecordDateTime', null=True)),
                ('memberpremium', models.DecimalField(blank=True, db_column='MemberPremium', decimal_places=4, max_digits=19, null=True)),
                ('memberconsumption', models.DecimalField(blank=True, db_column='MemberConsumption', decimal_places=4, max_digits=19, null=True)),
                ('memberbalance', models.DecimalField(blank=True, db_column='MemberBalance', decimal_places=4, max_digits=19, null=True)),
            ],
            options={
                'db_table': 'SchemeMembers',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Searchcolumns',
            fields=[
                ('sortorder', models.AutoField(db_column='SortOrder', primary_key=True, serialize=False)),
                ('columnname', models.CharField(db_column='ColumnName', max_length=200)),
                ('columncaption', models.CharField(db_column='ColumnCaption', max_length=200)),
                ('includeinitially', models.BooleanField(blank=True, db_column='IncludeInitially', null=True)),
                ('searchable', models.BooleanField(blank=True, db_column='Searchable', null=True)),
                ('isaggregate', models.BooleanField(blank=True, db_column='IsAggregate', null=True)),
            ],
            options={
                'db_table': 'SearchColumns',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Searchobjects',
            fields=[
                ('sortorder', models.AutoField(db_column='SortOrder', primary_key=True, serialize=False)),
                ('sp_name', models.CharField(db_column='SP_Name', max_length=60)),
                ('joinstext', models.CharField(blank=True, db_column='JoinsText', max_length=1000, null=True)),
                ('isgrouped', models.BooleanField(blank=True, db_column='IsGrouped', null=True)),
                ('hasdefault', models.BooleanField(blank=True, db_column='HasDefault', null=True)),
                ('topvalue', models.SmallIntegerField(blank=True, db_column='TopValue', null=True)),
                ('ordercolumns', models.CharField(blank=True, db_column='OrderColumns', max_length=1000, null=True)),
                ('isdistinct', models.BooleanField(db_column='IsDistinct')),
                ('searhinclude', models.BooleanField(db_column='SearhInclude')),
            ],
            options={
                'db_table': 'SearchObjects',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Searchqueries',
            fields=[
                ('queryname', models.CharField(db_column='QueryName', max_length=40, primary_key=True, serialize=False)),
                ('querydata', models.TextField(blank=True, db_column='QueryData', null=True)),
                ('notes', models.CharField(blank=True, db_column='Notes', max_length=200, null=True)),
                ('clientmachine', models.CharField(blank=True, db_column='ClientMachine', max_length=40, null=True)),
                ('recorddatetime', models.DateTimeField(blank=True, db_column='RecordDateTime', null=True)),
            ],
            options={
                'db_table': 'SearchQueries',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Servercredentials',
            fields=[
                ('sourcename', models.CharField(db_column='SourceName', max_length=60, primary_key=True, serialize=False)),
                ('sourcelogin', models.CharField(blank=True, db_column='SourceLogin', max_length=100, null=True)),
                ('sourcepassword', models.CharField(blank=True, db_column='SourcePassword', max_length=100, null=True)),
            ],
            options={
                'db_table': 'ServerCredentials',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Serviceinvoices',
            fields=[
                ('serviceinvoiceid', models.IntegerField(db_column='ServiceInvoiceID')),
                ('serviceinvoiceno', models.CharField(db_column='ServiceInvoiceNo', max_length=20, primary_key=True, serialize=False)),
                ('invoicedate', models.DateTimeField(blank=True, db_column='InvoiceDate', null=True)),
                ('documentno', models.CharField(blank=True, db_column='DocumentNo', max_length=20, null=True)),
                ('shipaddress', models.CharField(blank=True, db_column='ShipAddress', max_length=300, null=True)),
                ('clientmachine', models.CharField(blank=True, db_column='ClientMachine', max_length=40, null=True)),
                ('recorddatetime', models.DateTimeField(blank=True, db_column='RecordDateTime', null=True)),
            ],
            options={
                'db_table': 'ServiceInvoices',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Services',
            fields=[
                ('serviceid', models.IntegerField(db_column='ServiceID')),
                ('servicecode', models.CharField(db_column='ServiceCode', max_length=10, primary_key=True, serialize=False)),
                ('servicename', models.CharField(blank=True, db_column='ServiceName', max_length=100, null=True, unique=True)),
                ('revenuestreamcode', models.CharField(blank=True, db_column='RevenueStreamCode', max_length=20, null=True)),
                ('unitcost', models.DecimalField(blank=True, db_column='UnitCost', decimal_places=4, max_digits=19, null=True)),
                ('standardfee', models.DecimalField(blank=True, db_column='StandardFee', decimal_places=4, max_digits=19, null=True)),
                ('vatpercentage', models.DecimalField(blank=True, db_column='VATPercentage', decimal_places=0, max_digits=18, null=True)),
                ('hidden', models.BooleanField(blank=True, db_column='Hidden', null=True)),
            ],
            options={
                'db_table': 'Services',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Staff',
            fields=[
                ('staffid', models.IntegerField(db_column='StaffID')),
                ('staffno', models.CharField(db_column='StaffNo', max_length=20, primary_key=True, serialize=False)),
                ('firstname', models.CharField(blank=True, db_column='FirstName', max_length=20, null=True)),
                ('lastname', models.CharField(blank=True, db_column='LastName', max_length=20, null=True)),
                ('speciality', models.CharField(blank=True, db_column='Speciality', max_length=20, null=True)),
                ('qualifications', models.CharField(blank=True, db_column='Qualifications', max_length=40, null=True)),
                ('email', models.CharField(blank=True, db_column='Email', max_length=40, null=True)),
                ('joindate', models.DateTimeField(blank=True, db_column='JoinDate', null=True)),
                ('phone', models.CharField(blank=True, db_column='Phone', max_length=30, null=True)),
                ('location', models.CharField(blank=True, db_column='Location', max_length=40, null=True)),
                ('fingerprint', models.BinaryField(blank=True, db_column='Fingerprint', null=True)),
                ('signature', models.BinaryField(blank=True, db_column='Signature', null=True)),
                ('creatorclientmachine', models.CharField(blank=True, db_column='CreatorClientMachine', max_length=40, null=True)),
                ('recorddatetime', models.DateTimeField(blank=True, db_column='RecordDateTime', null=True)),
                ('clientmachine', models.CharField(blank=True, db_column='ClientMachine', max_length=41, null=True)),
                ('hidden', models.BooleanField(blank=True, db_column='Hidden', null=True)),
            ],
            options={
                'db_table': 'Staff',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Staffpayments',
            fields=[
                ('paymentvoucherid', models.IntegerField(db_column='PaymentVoucherID')),
                ('paymentvoucherno', models.CharField(db_column='PaymentVoucherNo', max_length=20, primary_key=True, serialize=False)),
                ('startdatetime', models.DateTimeField(db_column='StartDateTime')),
                ('enddatetime', models.DateTimeField(db_column='EndDateTime')),
                ('clientmachine', models.CharField(db_column='ClientMachine', max_length=40)),
                ('recorddatetime', models.DateTimeField(db_column='RecordDateTime')),
            ],
            options={
                'db_table': 'StaffPayments',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Subcounties',
            fields=[
                ('subcountycode', models.CharField(db_column='SubCountyCode', max_length=20, primary_key=True, serialize=False)),
                ('subcountyname', models.CharField(blank=True, db_column='SubCountyName', max_length=41, null=True)),
            ],
            options={
                'db_table': 'SubCounties',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Suppliers',
            fields=[
                ('supplierid', models.IntegerField(db_column='SupplierID')),
                ('supplierno', models.CharField(db_column='SupplierNo', max_length=20, primary_key=True, serialize=False)),
                ('suppliername', models.CharField(blank=True, db_column='SupplierName', max_length=60, null=True, unique=True)),
                ('contactperson', models.CharField(blank=True, db_column='ContactPerson', max_length=100, null=True)),
                ('address', models.CharField(blank=True, db_column='Address', max_length=200, null=True)),
                ('phone', models.CharField(blank=True, db_column='Phone', max_length=30, null=True)),
                ('recorddatetime', models.DateTimeField(blank=True, db_column='RecordDateTime', null=True)),
                ('clientmachine', models.CharField(blank=True, db_column='ClientMachine', max_length=41, null=True)),
                ('hidden', models.BooleanField(blank=True, db_column='Hidden', null=True)),
            ],
            options={
                'db_table': 'Suppliers',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Suspiciouslogins',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(blank=True, db_column='Username', max_length=20, null=True)),
                ('details', models.CharField(blank=True, db_column='Details', max_length=200, null=True)),
                ('clientmachine', models.CharField(blank=True, db_column='ClientMachine', max_length=41, null=True)),
                ('recorddatetime', models.DateTimeField(blank=True, db_column='RecordDateTime', null=True)),
            ],
            options={
                'db_table': 'SuspiciousLogins',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Templates',
            fields=[
                ('templatename', models.CharField(db_column='TemplateName', max_length=40, primary_key=True, serialize=False)),
                ('notes', models.CharField(blank=True, db_column='Notes', max_length=2000, null=True)),
            ],
            options={
                'db_table': 'Templates',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Testinstruments',
            fields=[
                ('testinstrumentid', models.IntegerField(db_column='TestInstrumentID')),
                ('testinstrumentno', models.CharField(db_column='TestInstrumentNo', max_length=20, primary_key=True, serialize=False)),
                ('testinstrumentname', models.CharField(blank=True, db_column='TestInstrumentName', max_length=200, null=True)),
                ('loginid', models.CharField(blank=True, db_column='LoginID', max_length=20, null=True)),
                ('userfullname', models.CharField(blank=True, db_column='UserFullName', max_length=41, null=True)),
                ('clientmachine', models.CharField(blank=True, db_column='ClientMachine', max_length=40, null=True)),
                ('recorddatetime', models.DateTimeField(blank=True, db_column='RecordDateTime', null=True)),
            ],
            options={
                'db_table': 'TestInstruments',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Theatreservices',
            fields=[
                ('theatreid', models.IntegerField(db_column='TheatreID')),
                ('theatrecode', models.CharField(db_column='TheatreCode', max_length=20, primary_key=True, serialize=False)),
                ('theatrename', models.CharField(blank=True, db_column='TheatreName', max_length=200, null=True, unique=True)),
                ('unitprice', models.DecimalField(blank=True, db_column='UnitPrice', decimal_places=4, max_digits=19, null=True)),
                ('vatpercentage', models.DecimalField(blank=True, db_column='VATPercentage', decimal_places=0, max_digits=18, null=True)),
                ('hidden', models.BooleanField(blank=True, db_column='Hidden', null=True)),
                ('unitcost', models.DecimalField(blank=True, db_column='UnitCost', decimal_places=4, max_digits=19, null=True)),
            ],
            options={
                'db_table': 'TheatreServices',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Topologysites',
            fields=[
                ('topographicalno', models.CharField(db_column='TopographicalNo', max_length=20, primary_key=True, serialize=False)),
                ('topologysitename', models.CharField(blank=True, db_column='TopologySiteName', max_length=800, null=True)),
                ('hidden', models.BooleanField(blank=True, db_column='Hidden', null=True)),
                ('clientmachine', models.CharField(blank=True, db_column='ClientMachine', max_length=40, null=True)),
                ('recorddatetime', models.DateTimeField(blank=True, db_column='RecordDateTime', null=True)),
            ],
            options={
                'db_table': 'TopologySites',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Updatehistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('originallogin', models.CharField(blank=True, db_column='OriginalLogin', max_length=500, null=True)),
                ('systemuser', models.CharField(blank=True, db_column='SystemUser', max_length=500, null=True)),
                ('clientmachine', models.CharField(blank=True, db_column='ClientMachine', max_length=40, null=True)),
                ('recorddatetime', models.DateTimeField(blank=True, db_column='RecordDateTime', null=True)),
            ],
            options={
                'db_table': 'updateHistory',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Verificationext',
            fields=[
                ('visitno', models.CharField(db_column='VisitNo', max_length=20, primary_key=True, serialize=False)),
                ('fromlocation', models.CharField(db_column='FromLocation', max_length=20)),
                ('tolocation', models.CharField(db_column='ToLocation', max_length=20)),
                ('recorddatetime', models.DateTimeField(db_column='RecordDateTime')),
            ],
            options={
                'db_table': 'VerificationExt',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Villages',
            fields=[
                ('villagecode', models.CharField(db_column='VillageCode', max_length=20, primary_key=True, serialize=False)),
                ('villagename', models.CharField(blank=True, db_column='VillageName', max_length=41, null=True)),
            ],
            options={
                'db_table': 'Villages',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Visits',
            fields=[
                ('visitid', models.IntegerField(db_column='VisitID')),
                ('visitno', models.CharField(db_column='VisitNo', max_length=20, primary_key=True, serialize=False)),
                ('visitdate', models.DateTimeField(blank=True, db_column='VisitDate', null=True)),
                ('referredby', models.CharField(blank=True, db_column='ReferredBy', max_length=40, null=True)),
                ('billno', models.CharField(blank=True, db_column='BillNo', max_length=20, null=True)),
                ('insuranceno', models.CharField(blank=True, db_column='InsuranceNo', max_length=20, null=True)),
                ('membercardno', models.CharField(blank=True, db_column='MemberCardNo', max_length=30, null=True)),
                ('mainmembername', models.CharField(blank=True, db_column='MainMemberName', max_length=41, null=True)),
                ('claimreferenceno', models.CharField(blank=True, db_column='ClaimReferenceNo', max_length=30, null=True)),
                ('accesscashservices', models.BooleanField(blank=True, db_column='AccessCashServices', null=True)),
                ('locked', models.BooleanField(blank=True, db_column='Locked', null=True)),
                ('fingerprintverified', models.BooleanField(blank=True, db_column='FingerprintVerified', null=True)),
                ('copaypercent', models.DecimalField(blank=True, db_column='CoPayPercent', decimal_places=2, max_digits=5, null=True)),
                ('copayvalue', models.DecimalField(blank=True, db_column='CoPayValue', decimal_places=4, max_digits=19, null=True)),
                ('smartcardapplicable', models.BooleanField(blank=True, db_column='SmartCardApplicable', null=True)),
                ('clientmachine', models.CharField(blank=True, db_column='ClientMachine', max_length=40, null=True)),
                ('recorddatetime', models.DateTimeField(blank=True, db_column='RecordDateTime', null=True)),
            ],
            options={
                'db_table': 'Visits',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Accessedcashservices',
            fields=[
                ('visitno', models.OneToOneField(db_column='VisitNo', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='clinicMas.visits')),
                ('tovisitdate', models.DateTimeField(db_column='ToVisitDate')),
                ('authorisedby', models.CharField(blank=True, db_column='AuthorisedBy', max_length=41, null=True)),
                ('clientmachine', models.CharField(blank=True, db_column='ClientMachine', max_length=40, null=True)),
                ('recorddatetime', models.DateTimeField(blank=True, db_column='RecordDateTime', null=True)),
                ('notes', models.CharField(blank=True, db_column='Notes', max_length=1000, null=True)),
            ],
            options={
                'db_table': 'AccessedCashServices',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Accountextrabillpayments',
            fields=[
                ('paytranno', models.OneToOneField(db_column='PayTranNo', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='clinicMas.accounts')),
                ('amount', models.DecimalField(blank=True, db_column='Amount', decimal_places=4, max_digits=19, null=True)),
                ('clientmachine', models.CharField(blank=True, db_column='ClientMachine', max_length=40, null=True)),
                ('recorddatetime', models.DateTimeField(blank=True, db_column='RecordDateTime', null=True)),
            ],
            options={
                'db_table': 'AccountExtraBillPayments',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Accountextrabills',
            fields=[
                ('extrabillno', models.OneToOneField(db_column='ExtraBillNo', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='clinicMas.extrabills')),
                ('amount', models.DecimalField(blank=True, db_column='Amount', decimal_places=4, max_digits=19, null=True)),
                ('balance', models.DecimalField(blank=True, db_column='Balance', decimal_places=4, max_digits=19, null=True)),
                ('clientmachine', models.CharField(blank=True, db_column='ClientMachine', max_length=40, null=True)),
                ('recorddatetime', models.DateTimeField(blank=True, db_column='RecordDateTime', null=True)),
            ],
            options={
                'db_table': 'AccountExtraBills',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Accountinvoicepayments',
            fields=[
                ('paytranno', models.OneToOneField(db_column='PayTranNo', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='clinicMas.accounts')),
                ('amount', models.DecimalField(blank=True, db_column='Amount', decimal_places=4, max_digits=19, null=True)),
                ('clientmachine', models.CharField(blank=True, db_column='ClientMachine', max_length=40, null=True)),
                ('recorddatetime', models.DateTimeField(blank=True, db_column='RecordDateTime', null=True)),
            ],
            options={
                'db_table': 'AccountInvoicePayments',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Accountinvoices',
            fields=[
                ('invoiceno', models.OneToOneField(db_column='InvoiceNo', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='clinicMas.invoices')),
                ('amount', models.DecimalField(blank=True, db_column='Amount', decimal_places=4, max_digits=19, null=True)),
                ('balance', models.DecimalField(blank=True, db_column='Balance', decimal_places=4, max_digits=19, null=True)),
                ('clientmachine', models.CharField(blank=True, db_column='ClientMachine', max_length=40, null=True)),
                ('recorddatetime', models.DateTimeField(blank=True, db_column='RecordDateTime', null=True)),
            ],
            options={
                'db_table': 'AccountInvoices',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Accountsext',
            fields=[
                ('tranno', models.OneToOneField(db_column='TranNo', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='clinicMas.accounts')),
            ],
            options={
                'db_table': 'AccountsEXT',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Accounttransferdetails',
            fields=[
                ('tranno', models.OneToOneField(db_column='TranNo', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='clinicMas.accounts')),
                ('fromaccount', models.CharField(blank=True, db_column='FromAccount', max_length=20, null=True)),
                ('amount', models.DecimalField(blank=True, db_column='Amount', decimal_places=4, max_digits=19, null=True)),
                ('amountinwords', models.CharField(blank=True, db_column='AmountInWords', max_length=500, null=True)),
                ('clientmachine', models.CharField(blank=True, db_column='ClientMachine', max_length=40, null=True)),
                ('recorddatetime', models.DateTimeField(blank=True, db_column='RecordDateTime', null=True)),
            ],
            options={
                'db_table': 'AccountTransferDetails',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Accountwithdrawapprovals',
            fields=[
                ('requestno', models.OneToOneField(db_column='RequestNo', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='clinicMas.accountwithdrawrequests')),
                ('accountbillmodes', models.CharField(blank=True, db_column='AccountBillModes', max_length=100, null=True)),
                ('accountname', models.CharField(blank=True, db_column='AccountName', max_length=41, null=True)),
                ('approvaldate', models.DateTimeField(blank=True, db_column='ApprovalDate', null=True)),
                ('notes', models.CharField(blank=True, db_column='Notes', max_length=200, null=True)),
                ('userfullname', models.CharField(blank=True, db_column='UserFullName', max_length=41, null=True)),
                ('loginid', models.CharField(blank=True, db_column='LoginID', max_length=20, null=True)),
                ('clientmachine', models.CharField(blank=True, db_column='ClientMachine', max_length=41, null=True)),
                ('recorddatetime', models.DateTimeField(blank=True, db_column='RecordDateTime', null=True)),
            ],
            options={
                'db_table': 'AccountWithdrawApprovals',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Activeusers',
            fields=[
                ('loginid', models.OneToOneField(db_column='LoginID', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='clinicMas.logins')),
                ('clientmachine', models.CharField(db_column='ClientMachine', max_length=40)),
                ('logindate', models.DateTimeField(blank=True, db_column='LoginDate', null=True)),
                ('lastupdate', models.DateTimeField(blank=True, db_column='LastUpdate', null=True)),
                ('nologins', models.SmallIntegerField(blank=True, db_column='NoLogins', null=True)),
            ],
            options={
                'db_table': 'ActiveUsers',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Allergydrugs',
            fields=[
                ('allergyno', models.OneToOneField(db_column='AllergyNo', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='clinicMas.allergies')),
            ],
            options={
                'db_table': 'AllergyDrugs',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Alternatedrugs',
            fields=[
                ('drugno', models.OneToOneField(db_column='DrugNo', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='clinicMas.drugs')),
            ],
            options={
                'db_table': 'AlternateDrugs',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Antenatalvisits',
            fields=[
                ('visitno', models.OneToOneField(db_column='VisitNo', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='clinicMas.visits')),
                ('stidetails', models.CharField(blank=True, db_column='STIDetails', max_length=200, null=True)),
                ('anenorrheaweeks', models.IntegerField(blank=True, db_column='AnenorrheaWeeks', null=True)),
                ('fundalheight', models.CharField(blank=True, db_column='FundalHeight', max_length=10, null=True)),
                ('relationpporbrim', models.CharField(blank=True, db_column='RelationPPOrBrim', max_length=10, null=True)),
                ('foetalheart', models.IntegerField(blank=True, db_column='FoetalHeart', null=True)),
                ('ttgiven', models.BooleanField(blank=True, db_column='TTGiven', null=True)),
                ('remarks', models.CharField(blank=True, db_column='Remarks', max_length=2000, null=True)),
                ('returndate', models.DateTimeField(blank=True, db_column='ReturnDate', null=True)),
                ('clientmachine', models.CharField(blank=True, db_column='ClientMachine', max_length=40, null=True)),
                ('recorddatetime', models.DateTimeField(blank=True, db_column='RecordDateTime', null=True)),
            ],
            options={
                'db_table': 'AntenatalVisits',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Appointments',
            fields=[
                ('patientno', models.OneToOneField(db_column='PatientNo', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='clinicMas.patients')),
                ('startdate', models.DateTimeField(db_column='StartDate')),
                ('starttime', models.CharField(blank=True, db_column='StartTime', max_length=8, null=True)),
                ('duration', models.SmallIntegerField(blank=True, db_column='Duration', null=True)),
                ('enddate', models.DateTimeField(blank=True, db_column='EndDate', null=True)),
                ('appointmentdes', models.CharField(blank=True, db_column='AppointmentDes', max_length=100, null=True)),
                ('recorddatetime', models.DateTimeField(blank=True, db_column='RecordDateTime', null=True)),
            ],
            options={
                'db_table': 'Appointments',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Artregimen',
            fields=[
                ('visitno', models.OneToOneField(db_column='VisitNo', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='clinicMas.visits')),
                ('startdate', models.DateTimeField(blank=True, db_column='StartDate', null=True)),
                ('whyeligible', models.CharField(blank=True, db_column='WhyEligible', max_length=200, null=True)),
                ('artswitchreasons', models.CharField(blank=True, db_column='ARTSwitchReasons', max_length=200, null=True)),
                ('notes', models.CharField(blank=True, db_column='Notes', max_length=200, null=True)),
                ('refillduration', models.SmallIntegerField(blank=True, db_column='RefillDuration', null=True)),
                ('recorddatetime', models.DateTimeField(blank=True, db_column='RecordDateTime', null=True)),
            ],
            options={
                'db_table': 'ARTRegimen',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Artregimendetails',
            fields=[
                ('visitno', models.OneToOneField(db_column='VisitNo', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='clinicMas.visits')),
                ('dosage', models.CharField(blank=True, db_column='Dosage', max_length=100, null=True)),
                ('duration', models.IntegerField(blank=True, db_column='Duration', null=True)),
                ('quantity', models.IntegerField(blank=True, db_column='Quantity', null=True)),
                ('formula', models.CharField(blank=True, db_column='Formula', max_length=40, null=True)),
            ],
            options={
                'db_table': 'ARTRegimenDetails',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Artstopped',
            fields=[
                ('visitno', models.OneToOneField(db_column='VisitNo', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='clinicMas.visits')),
                ('stopdate', models.DateTimeField(blank=True, db_column='StopDate', null=True)),
                ('artstopreasons', models.CharField(blank=True, db_column='ARTStopReasons', max_length=200, null=True)),
                ('recorddatetime', models.DateTimeField(blank=True, db_column='RecordDateTime', null=True)),
            ],
            options={
                'db_table': 'ARTStopped',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Assetmaintainancelog',
            fields=[
                ('serialno', models.OneToOneField(db_column='SerialNo', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='clinicMas.assetregister')),
                ('actiontaken', models.CharField(blank=True, db_column='ActionTaken', max_length=200, null=True)),
                ('maintainancedate', models.DateTimeField(db_column='MaintainanceDate')),
                ('maintainedby', models.CharField(blank=True, db_column='MaintainedBy', max_length=200, null=True)),
                ('maintainacecost', models.DecimalField(blank=True, db_column='MaintainaceCost', decimal_places=4, max_digits=19, null=True)),
                ('nextdue', models.DateTimeField(blank=True, db_column='NextDue', null=True)),
                ('clientmachine', models.CharField(blank=True, db_column='ClientMachine', max_length=40, null=True)),
                ('recorddatetime', models.DateTimeField(blank=True, db_column='RecordDateTime', null=True)),
            ],
            options={
                'db_table': 'AssetMaintainanceLog',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Associatedbillcustomers',
            fields=[
                ('accountno', models.OneToOneField(db_column='AccountNo', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='clinicMas.billcustomers')),
            ],
            options={
                'db_table': 'AssociatedBillCustomers',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Audittraildetails',
            fields=[
                ('auditid', models.OneToOneField(db_column='AuditID', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='clinicMas.audittrail')),
                ('columnname', models.CharField(db_column='ColumnName', max_length=60)),
                ('originalvalue', models.CharField(blank=True, db_column='OriginalValue', max_length=2000, null=True)),
                ('newvalue', models.CharField(blank=True, db_column='NewValue', max_length=2000, null=True)),
            ],
            options={
                'db_table': 'AuditTrailDetails',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Autonumbers',
            fields=[
                ('objectname', models.OneToOneField(db_column='ObjectName', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='clinicMas.accessobjects')),
                ('autocolumnname', models.CharField(db_column='AutoColumnName', max_length=60)),
                ('helpercolumnname', models.CharField(db_column='HelperColumnName', max_length=60)),
                ('autocolumnlen', models.SmallIntegerField(db_column='AutoColumnLEN')),
                ('paddingchar', models.CharField(db_column='PaddingCHAR', max_length=1)),
                ('paddinglen', models.SmallIntegerField(db_column='PaddingLEN')),
                ('separatorchar', models.CharField(db_column='SeparatorCHAR', max_length=1)),
                ('separatorpositions', models.CharField(blank=True, db_column='SeparatorPositions', max_length=20, null=True)),
                ('startvalue', models.IntegerField(db_column='StartValue')),
                ('increment', models.SmallIntegerField(db_column='Increment')),
                ('allowjumpto', models.BooleanField(db_column='AllowJumpTo')),
                ('jumptovalue', models.IntegerField(db_column='JumpToValue')),
            ],
            options={
                'db_table': 'AutoNumbers',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Bankingregisterdetails',
            fields=[
                ('registerno', models.OneToOneField(db_column='RegisterNo', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='clinicMas.bankingregister')),
                ('amount', models.DecimalField(blank=True, db_column='Amount', decimal_places=4, max_digits=19, null=True)),
                ('documentno', models.CharField(db_column='DocumentNo', max_length=20)),
                ('clientmachine', models.CharField(blank=True, db_column='ClientMachine', max_length=40, null=True)),
                ('recorddatetime', models.DateTimeField(blank=True, db_column='RecordDateTime', null=True)),
            ],
            options={
                'db_table': 'BankingRegisterDetails',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Billablemappings',
            fields=[
                ('itemcategoryid', models.OneToOneField(db_column='ItemCategoryID', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='clinicMas.lookupdata')),
                ('itemcode', models.CharField(db_column='ItemCode', max_length=20)),
                ('mappedcode', models.CharField(blank=True, db_column='MappedCode', max_length=20, null=True)),
                ('clientmachine', models.CharField(blank=True, db_column='ClientMachine', max_length=10, null=True)),
                ('recorddatetime', models.DateTimeField(blank=True, db_column='RecordDateTime', null=True)),
            ],
            options={
                'db_table': 'BillableMappings',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Billcustomeritemcategorycopay',
            fields=[
                ('accountno', models.OneToOneField(db_column='AccountNo', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='clinicMas.billcustomers')),
                ('copaypercent', models.DecimalField(db_column='CoPayPercent', decimal_places=2, max_digits=5)),
                ('userfullname', models.CharField(db_column='UserFullName', max_length=41)),
                ('clientmachine', models.CharField(db_column='ClientMachine', max_length=40)),
                ('recorddatetime', models.DateTimeField(db_column='RecordDateTime')),
            ],
            options={
                'db_table': 'BillCustomerItemCategoryCopay',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Billcustomeritemscopay',
            fields=[
                ('accountno', models.OneToOneField(db_column='AccountNo', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='clinicMas.billcustomers')),
                ('itemcode', models.CharField(db_column='ItemCode', max_length=20)),
                ('copaypercent', models.DecimalField(db_column='CoPayPercent', decimal_places=2, max_digits=5)),
                ('userfullname', models.CharField(db_column='UserFullName', max_length=41)),
                ('clientmachine', models.CharField(db_column='ClientMachine', max_length=40)),
                ('recorddatetime', models.DateTimeField(db_column='RecordDateTime')),
            ],
            options={
                'db_table': 'BillCustomerItemsCopay',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Billcustomervisittypecopay',
            fields=[
                ('accountno', models.OneToOneField(db_column='AccountNo', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='clinicMas.billcustomers')),
                ('copaypercent', models.DecimalField(db_column='CoPayPercent', decimal_places=2, max_digits=5)),
                ('userfullname', models.CharField(db_column='UserFullName', max_length=20)),
                ('clientmachine', models.CharField(db_column='ClientMachine', max_length=41)),
                ('recorddatetime', models.DateTimeField(db_column='RecordDateTime')),
            ],
            options={
                'db_table': 'BillCustomerVisitTypeCopay',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Billcustomfee',
            fields=[
                ('accountno', models.OneToOneField(db_column='AccountNo', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='clinicMas.billcustomers')),
                ('itemcode', models.CharField(db_column='ItemCode', max_length=20)),
                ('customfee', models.DecimalField(blank=True, db_column='CustomFee', decimal_places=4, max_digits=19, null=True)),
            ],
            options={
                'db_table': 'BillCustomFee',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Billexcludeditems',
            fields=[
                ('accountno', models.OneToOneField(db_column='AccountNo', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='clinicMas.billcustomers')),
                ('itemcode', models.CharField(db_column='ItemCode', max_length=20)),
            ],
            options={
                'db_table': 'BillExcludedItems',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Billvisittypecustomfee',
            fields=[
                ('accountno', models.OneToOneField(db_column='AccountNo', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='clinicMas.billcustomers')),
                ('itemcode', models.CharField(db_column='ItemCode', max_length=20)),
                ('customfee', models.DecimalField(blank=True, db_column='CustomFee', decimal_places=4, max_digits=19, null=True)),
                ('loginid', models.CharField(blank=True, db_column='LoginID', max_length=20, null=True)),
                ('userfullname', models.CharField(blank=True, db_column='UserFullName', max_length=41, null=True)),
                ('clientmachine', models.CharField(blank=True, db_column='ClientMachine', max_length=40, null=True)),
                ('recorddatetime', models.DateTimeField(blank=True, db_column='RecordDateTime', null=True)),
            ],
            options={
                'db_table': 'BillVisitTypeCustomFee',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Cancerdiagnosis',
            fields=[
                ('visitno', models.OneToOneField(db_column='VisitNo', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='clinicMas.visits')),
                ('notes', models.CharField(blank=True, db_column='Notes', max_length=200, null=True)),
                ('clientmachine', models.CharField(blank=True, db_column='ClientMachine', max_length=40, null=True)),
                ('recorddatetime', models.DateTimeField(blank=True, db_column='RecordDateTime', null=True)),
            ],
            options={
                'db_table': 'CancerDiagnosis',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Claimdetails',
            fields=[
                ('claimno', models.OneToOneField(db_column='ClaimNo', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='clinicMas.claims')),
                ('itemname', models.CharField(db_column='ItemName', max_length=100)),
                ('quantity', models.IntegerField(blank=True, db_column='Quantity', null=True)),
                ('unitprice', models.DecimalField(blank=True, db_column='UnitPrice', decimal_places=4, max_digits=19, null=True)),
                ('adjustment', models.DecimalField(blank=True, db_column='Adjustment', decimal_places=4, max_digits=19, null=True)),
                ('amount', models.DecimalField(blank=True, db_column='Amount', decimal_places=4, max_digits=19, null=True)),
                ('notes', models.CharField(blank=True, db_column='Notes', max_length=400, null=True)),
                ('limitamount', models.DecimalField(blank=True, db_column='LimitAmount', decimal_places=4, max_digits=19, null=True)),
                ('consumedamount', models.DecimalField(blank=True, db_column='ConsumedAmount', decimal_places=4, max_digits=19, null=True)),
                ('limitbalance', models.DecimalField(blank=True, db_column='LimitBalance', decimal_places=4, max_digits=19, null=True)),
            ],
            options={
                'db_table': 'ClaimDetails',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Claimdiagnosis',
            fields=[
                ('claimno', models.OneToOneField(db_column='ClaimNo', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='clinicMas.claims')),
            ],
            options={
                'db_table': 'ClaimDiagnosis',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Claimpayments',
            fields=[
                ('claimno', models.OneToOneField(db_column='ClaimNo', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='clinicMas.claims')),
                ('paymentdatetime', models.DateTimeField(blank=True, db_column='PaymentDateTime', null=True)),
                ('clientmachine', models.CharField(blank=True, db_column='ClientMachine', max_length=40, null=True)),
                ('recorddatetime', models.DateTimeField(blank=True, db_column='RecordDateTime', null=True)),
            ],
            options={
                'db_table': 'ClaimPayments',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Claimsext',
            fields=[
                ('claimno', models.OneToOneField(db_column='ClaimNo', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='clinicMas.claims')),
            ],
            options={
                'db_table': 'ClaimsEXT',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Clinicalfindings',
            fields=[
                ('visitno', models.OneToOneField(db_column='VisitNo', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='clinicMas.visits')),
                ('presentingcomplaint', models.CharField(blank=True, db_column='PresentingComplaint', max_length=1000, null=True)),
                ('clinicalnotes', models.CharField(blank=True, db_column='ClinicalNotes', max_length=4000, null=True)),
                ('ros', models.CharField(blank=True, db_column='ROS', max_length=1000, null=True)),
                ('pmh', models.CharField(blank=True, db_column='PMH', max_length=1000, null=True)),
                ('poh', models.CharField(blank=True, db_column='POH', max_length=1000, null=True)),
                ('pgh', models.CharField(blank=True, db_column='PGH', max_length=1000, null=True)),
                ('fsh', models.CharField(blank=True, db_column='FSH', max_length=1000, null=True)),
                ('generalappearance', models.CharField(blank=True, db_column='GeneralAppearance', max_length=1000, null=True)),
                ('respiratory', models.CharField(blank=True, db_column='Respiratory', max_length=1000, null=True)),
                ('cvs', models.CharField(blank=True, db_column='CVS', max_length=1000, null=True)),
                ('ent', models.CharField(blank=True, db_column='ENT', max_length=1000, null=True)),
                ('abdomen', models.CharField(blank=True, db_column='Abdomen', max_length=1000, null=True)),
                ('cns', models.CharField(blank=True, db_column='CNS', max_length=1000, null=True)),
                ('eye', models.CharField(blank=True, db_column='EYE', max_length=1000, null=True)),
                ('muscularskeletal', models.CharField(blank=True, db_column='MuscularSkeletal', max_length=1000, null=True)),
                ('skin', models.CharField(blank=True, db_column='Skin', max_length=1000, null=True)),
                ('pv', models.CharField(blank=True, db_column='PV', max_length=1000, null=True)),
                ('psychologicalstatus', models.CharField(blank=True, db_column='PsychologicalStatus', max_length=1000, null=True)),
                ('provisionaldiagnosis', models.CharField(blank=True, db_column='ProvisionalDiagnosis', max_length=1000, null=True)),
                ('treatmentplan', models.CharField(blank=True, db_column='TreatmentPlan', max_length=1000, null=True)),
                ('recorddatetime', models.DateTimeField(blank=True, db_column='RecordDateTime', null=True)),
            ],
            options={
                'db_table': 'ClinicalFindings',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Contraceptiveshistory',
            fields=[
                ('complicationdetails', models.CharField(blank=True, db_column='ComplicationDetails', max_length=200, null=True)),
                ('datestarted', models.DateTimeField(blank=True, db_column='DateStarted', null=True)),
                ('notes', models.CharField(blank=True, db_column='Notes', max_length=200, null=True)),
                ('clientmachine', models.CharField(blank=True, db_column='ClientMachine', max_length=40, null=True)),
                ('recorddatetime', models.DateTimeField(blank=True, db_column='RecordDateTime', null=True)),
                ('ancno', models.OneToOneField(db_column='ANCNo', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='clinicMas.antenatalenrollment')),
            ],
            options={
                'db_table': 'ContraceptivesHistory',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Deaths',
            fields=[
                ('patientno', models.OneToOneField(db_column='PatientNo', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='clinicMas.patients')),
                ('deathdate', models.DateTimeField(blank=True, db_column='DeathDate', null=True)),
                ('notes', models.CharField(blank=True, db_column='Notes', max_length=200, null=True)),
                ('staffno', models.CharField(blank=True, db_column='StaffNo', max_length=20, null=True)),
                ('timeofdeath', models.CharField(blank=True, db_column='TimeOfDeath', max_length=8, null=True)),
                ('primarycauseofdeath', models.CharField(blank=True, db_column='PrimaryCauseOfDeath', max_length=200, null=True)),
                ('secondarycauseofdeath', models.CharField(blank=True, db_column='SecondaryCauseOfDeath', max_length=200, null=True)),
                ('othercauseofdeath', models.CharField(blank=True, db_column='OtherCauseOfDeath', max_length=200, null=True)),
                ('recorddatetime', models.DateTimeField(blank=True, db_column='RecordDateTime', null=True)),
            ],
            options={
                'db_table': 'Deaths',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Diagnosis',
            fields=[
                ('objectname', models.OneToOneField(db_column='ObjectName', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='clinicMas.accessobjects')),
                ('treatmentno', models.CharField(db_column='TreatmentNo', max_length=20)),
                ('diseasename', models.CharField(blank=True, db_column='DiseaseName', max_length=800, null=True)),
                ('diseasecategory', models.CharField(blank=True, db_column='DiseaseCategory', max_length=100, null=True)),
                ('notes', models.CharField(blank=True, db_column='Notes', max_length=200, null=True)),
                ('loginid', models.CharField(blank=True, db_column='LoginID', max_length=20, null=True)),
                ('userfullname', models.CharField(blank=True, db_column='UserFullName', max_length=41, null=True)),
                ('clientmachine', models.CharField(blank=True, db_column='ClientMachine', max_length=40, null=True)),
                ('recorddatetime', models.DateTimeField(blank=True, db_column='RecordDateTime', null=True)),
            ],
            options={
                'db_table': 'Diagnosis',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Discharges',
            fields=[
                ('admissionno', models.OneToOneField(db_column='AdmissionNo', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='clinicMas.admissions')),
                ('dischargedatetime', models.DateTimeField(blank=True, db_column='DischargeDateTime', null=True)),
                ('dischargenotes', models.CharField(blank=True, db_column='DischargeNotes', max_length=2000, null=True)),
                ('reviewdate', models.DateTimeField(blank=True, db_column='ReviewDate', null=True)),
                ('history', models.CharField(blank=True, db_column='History', max_length=400, null=True)),
                ('examination', models.CharField(blank=True, db_column='Examination', max_length=400, null=True)),
                ('keyfindingsinvestigation', models.CharField(blank=True, db_column='KeyFindingsInvestigation', max_length=400, null=True)),
                ('treatmentplan', models.CharField(blank=True, db_column='TreatmentPlan', max_length=400, null=True)),
                ('outcomeoftreatment', models.CharField(blank=True, db_column='OutcomeOfTreatment', max_length=400, null=True)),
                ('keyrecommendations', models.CharField(blank=True, db_column='KeyRecommendations', max_length=400, null=True)),
                ('recorddatetime', models.DateTimeField(blank=True, db_column='RecordDateTime', null=True)),
            ],
            options={
                'db_table': 'Discharges',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Doctorvisits',
            fields=[
                ('visitno', models.OneToOneField(db_column='VisitNo', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='clinicMas.visits')),
                ('closed', models.BooleanField(blank=True, db_column='Closed', null=True)),
                ('clientmachine', models.CharField(blank=True, db_column='ClientMachine', max_length=40, null=True)),
                ('recorddatetime', models.DateTimeField(blank=True, db_column='RecordDateTime', null=True)),
            ],
            options={
                'db_table': 'DoctorVisits',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Drugadministration',
            fields=[
                ('visitno', models.OneToOneField(db_column='VisitNo', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='clinicMas.visits')),
                ('takendatetime', models.DateTimeField(db_column='TakenDateTime')),
                ('itemcode', models.CharField(db_column='ItemCode', max_length=20)),
                ('itemname', models.CharField(db_column='ItemName', max_length=800)),
                ('quantitytaken', models.IntegerField(blank=True, db_column='QuantityTaken', null=True)),
                ('nursenotes', models.CharField(blank=True, db_column='NurseNotes', max_length=200, null=True)),
                ('clientmachine', models.CharField(blank=True, db_column='ClientMachine', max_length=40, null=True)),
                ('recorddatetime', models.DateTimeField(blank=True, db_column='RecordDateTime', null=True)),
            ],
            options={
                'db_table': 'DrugAdministration',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Drugcombinationdetails',
            fields=[
                ('combination', models.OneToOneField(db_column='Combination', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='clinicMas.drugcombinations')),
            ],
            options={
                'db_table': 'DrugCombinationDetails',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Enrollmentinformation',
            fields=[
                ('uciid', models.OneToOneField(db_column='UCIID', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='clinicMas.researchroutingform')),
                ('ccinitials', models.CharField(blank=True, db_column='CCInitials', max_length=20, null=True)),
                ('exclusionreason', models.CharField(blank=True, db_column='ExclusionReason', max_length=1000, null=True)),
                ('enrollmentdate', models.DateTimeField(blank=True, db_column='EnrollmentDate', null=True)),
                ('patientreferred', models.CharField(blank=True, db_column='PatientReferred', max_length=1000, null=True)),
                ('referreddate', models.DateTimeField(blank=True, db_column='ReferredDate', null=True)),
                ('clientmachine', models.CharField(blank=True, db_column='ClientMachine', max_length=40, null=True)),
                ('recorddatetime', models.DateTimeField(blank=True, db_column='RecordDateTime', null=True)),
            ],
            options={
                'db_table': 'EnrollmentInformation',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Examinations',
            fields=[
                ('visitno', models.OneToOneField(db_column='VisitNo', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='clinicMas.visits')),
                ('followupdate', models.DateTimeField(blank=True, db_column='FollowupDate', null=True)),
                ('durationstartart', models.IntegerField(blank=True, db_column='DurationStartART', null=True)),
                ('durationcurrentart', models.IntegerField(blank=True, db_column='DurationCurrentART', null=True)),
                ('expecteddeliverydate', models.DateTimeField(blank=True, db_column='ExpectedDeliveryDate', null=True)),
                ('pmtct', models.BooleanField(blank=True, db_column='PMTCT', null=True)),
                ('gestationalage', models.SmallIntegerField(blank=True, db_column='GestationalAge', null=True)),
                ('fpmethods', models.CharField(blank=True, db_column='FPMethods', max_length=200, null=True)),
                ('tbrxstartdate', models.DateTimeField(blank=True, db_column='TBRxStartDate', null=True)),
                ('tbrxstopdate', models.DateTimeField(blank=True, db_column='TBRxStopDate', null=True)),
                ('tbregno', models.CharField(blank=True, db_column='TBRegNo', max_length=20, null=True)),
                ('sideeffects', models.CharField(blank=True, db_column='SideEffects', max_length=200, null=True)),
                ('newoi', models.CharField(blank=True, db_column='NewOI', max_length=200, null=True)),
                ('cptdosage', models.SmallIntegerField(blank=True, db_column='CPTDosage', null=True)),
                ('cptduration', models.SmallIntegerField(blank=True, db_column='CPTDuration', null=True)),
                ('othermeds', models.CharField(blank=True, db_column='OtherMeds', max_length=200, null=True)),
                ('arvadherewhy', models.CharField(blank=True, db_column='ARVAdhereWhy', max_length=200, null=True)),
                ('arvdosage', models.SmallIntegerField(blank=True, db_column='ARVDosage', null=True)),
                ('arvduration', models.SmallIntegerField(blank=True, db_column='ARVDuration', null=True)),
                ('cd4abs', models.DecimalField(blank=True, db_column='CD4ABS', decimal_places=2, max_digits=10, null=True)),
                ('cd4pct', models.DecimalField(blank=True, db_column='CD4PCT', decimal_places=2, max_digits=10, null=True)),
                ('investigations', models.CharField(blank=True, db_column='Investigations', max_length=200, null=True)),
                ('refer', models.CharField(blank=True, db_column='Refer', max_length=40, null=True)),
                ('dayshosp', models.SmallIntegerField(blank=True, db_column='DaysHOSP', null=True)),
                ('recorddatetime', models.DateTimeField(blank=True, db_column='RecordDateTime', null=True)),
            ],
            options={
                'db_table': 'Examinations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Exchangerates',
            fields=[
                ('currenciesid', models.OneToOneField(db_column='CurrenciesID', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='clinicMas.lookupdata')),
                ('buying', models.DecimalField(blank=True, db_column='Buying', decimal_places=4, max_digits=19, null=True)),
                ('selling', models.DecimalField(blank=True, db_column='Selling', decimal_places=4, max_digits=19, null=True)),
                ('recorddatetime', models.DateTimeField(blank=True, db_column='RecordDateTime', null=True)),
                ('username', models.CharField(blank=True, db_column='UserName', max_length=41, null=True)),
                ('clientmachine', models.CharField(blank=True, db_column='ClientMachine', max_length=40, null=True)),
            ],
            options={
                'db_table': 'ExchangeRates',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Exposedinfants',
            fields=[
                ('patientno', models.OneToOneField(db_column='PatientNo', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='clinicMas.patients')),
                ('infantname', models.CharField(db_column='InfantName', max_length=41)),
                ('birthdate', models.DateTimeField(blank=True, db_column='BirthDate', null=True)),
                ('ctxstarted', models.CharField(blank=True, db_column='CTXStarted', max_length=41, null=True)),
                ('uniqueno', models.CharField(blank=True, db_column='UniqueNo', max_length=20, null=True)),
            ],
            options={
                'db_table': 'ExposedInfants',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Externalreferrals',
            fields=[
                ('visitno', models.OneToOneField(db_column='VisitNo', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='clinicMas.visits')),
                ('procedurepaidby', models.CharField(blank=True, db_column='ProcedurePaidBy', max_length=200, null=True)),
                ('employeename', models.CharField(blank=True, db_column='EmployeeName', max_length=200, null=True)),
                ('referredto', models.CharField(blank=True, db_column='ReferredTo', max_length=200, null=True)),
                ('departuretime', models.CharField(blank=True, db_column='DepartureTime', max_length=8, null=True)),
                ('dateofreferral', models.DateTimeField(blank=True, db_column='DateOfReferral', null=True)),
                ('historyandsymptoms', models.CharField(blank=True, db_column='HistoryAndSymptoms', max_length=2000, null=True)),
                ('diagnosis', models.CharField(blank=True, db_column='Diagnosis', max_length=2000, null=True)),
                ('treatmentgiven', models.CharField(blank=True, db_column='TreatmentGiven', max_length=2000, null=True)),
                ('reasonforreferral', models.CharField(blank=True, db_column='ReasonForReferral', max_length=2000, null=True)),
                ('labinvestigations', models.CharField(blank=True, db_column='LabInvestigations', max_length=2000, null=True)),
                ('authorisedby', models.CharField(blank=True, db_column='AuthorisedBy', max_length=200, null=True)),
                ('treatmentlimit', models.DecimalField(blank=True, db_column='TreatmentLimit', decimal_places=4, max_digits=19, null=True)),
                ('clientmachine', models.CharField(blank=True, db_column='ClientMachine', max_length=40, null=True)),
                ('recorddatetime', models.DateTimeField(blank=True, db_column='RecordDateTime', null=True)),
            ],
            options={
                'db_table': 'ExternalReferrals',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Extrabillitemadjustments',
            fields=[
                ('adjustmentno', models.OneToOneField(db_column='AdjustmentNo', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='clinicMas.billadjustments')),
                ('quantity', models.IntegerField(blank=True, db_column='Quantity', null=True)),
                ('notes', models.CharField(blank=True, db_column='Notes', max_length=200, null=True)),
                ('amount', models.DecimalField(blank=True, db_column='Amount', decimal_places=4, max_digits=19, null=True)),
                ('transactiondate', models.DateTimeField(blank=True, db_column='TransactionDate', null=True)),
                ('acknowledgeable', models.BooleanField(blank=True, db_column='Acknowledgeable', null=True)),
                ('isacknowledged', models.BooleanField(blank=True, db_column='IsAcknowledged', null=True)),
                ('clientmachine', models.CharField(blank=True, db_column='ClientMachine', max_length=40, null=True)),
                ('recorddatetime', models.DateTimeField(blank=True, db_column='RecordDateTime', null=True)),
            ],
            options={
                'db_table': 'ExtraBillItemAdjustments',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Extrabillitems',
            fields=[
                ('extrabillno', models.OneToOneField(db_column='ExtraBillNo', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='clinicMas.extrabills')),
                ('itemcode', models.CharField(db_column='ItemCode', max_length=20)),
                ('itemname', models.CharField(db_column='ItemName', max_length=800)),
                ('unitmeasure', models.CharField(blank=True, db_column='UnitMeasure', max_length=100, null=True)),
                ('invoiceno', models.CharField(blank=True, db_column='InvoiceNo', max_length=20, null=True)),
                ('quantity', models.IntegerField(blank=True, db_column='Quantity', null=True)),
                ('unitcost', models.DecimalField(blank=True, db_column='UnitCost', decimal_places=4, max_digits=19, null=True)),
                ('unitprice', models.DecimalField(blank=True, db_column='UnitPrice', decimal_places=4, max_digits=19, null=True)),
                ('vatvalue', models.DecimalField(blank=True, db_column='VATValue', decimal_places=4, max_digits=19, null=True)),
                ('notes', models.CharField(blank=True, db_column='Notes', max_length=200, null=True)),
                ('lastupdate', models.DateTimeField(blank=True, db_column='LastUpdate', null=True)),
                ('originalquantity', models.IntegerField(blank=True, db_column='OriginalQuantity', null=True)),
                ('originalprice', models.DecimalField(blank=True, db_column='OriginalPrice', decimal_places=4, max_digits=19, null=True)),
                ('returnquantity', models.IntegerField(blank=True, db_column='ReturnQuantity', null=True)),
                ('returnamount', models.DecimalField(blank=True, db_column='ReturnAmount', decimal_places=4, max_digits=19, null=True)),
                ('clientmachine', models.CharField(blank=True, db_column='ClientMachine', max_length=40, null=True)),
                ('recorddatetime', models.DateTimeField(blank=True, db_column='RecordDateTime', null=True)),
                ('creatorclientmachine', models.CharField(blank=True, db_column='CreatorClientMachine', max_length=40, null=True)),
                ('adjustmentcount', models.IntegerField(blank=True, db_column='AdjustmentCount', null=True)),
                ('amount', models.DecimalField(blank=True, db_column='Amount', decimal_places=4, max_digits=19, null=True)),
                ('originalamount', models.DecimalField(blank=True, db_column='OriginalAmount', decimal_places=4, max_digits=19, null=True)),
            ],
            options={
                'db_table': 'ExtraBillItems',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Extrabillsext',
            fields=[
                ('extrabillno', models.OneToOneField(db_column='ExtraBillNo', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='clinicMas.extrabills')),
            ],
            options={
                'db_table': 'ExtraBillsEXT',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Eyeassessment',
            fields=[
                ('visitno', models.OneToOneField(db_column='VisitNo', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='clinicMas.visits')),
                ('leftpupil', models.CharField(blank=True, db_column='LeftPupil', max_length=200, null=True)),
                ('rightpupil', models.CharField(blank=True, db_column='RightPupil', max_length=200, null=True)),
                ('leftlidmargin', models.CharField(blank=True, db_column='LeftLidMargin', max_length=200, null=True)),
                ('rightlidmargin', models.CharField(blank=True, db_column='RightLidMargin', max_length=200, null=True)),
                ('leftconjuctiva', models.CharField(blank=True, db_column='LeftConjuctiva', max_length=200, null=True)),
                ('rightconjuctiva', models.CharField(blank=True, db_column='RightConjuctiva', max_length=200, null=True)),
                ('leftbulbarconjuctiva', models.CharField(blank=True, db_column='LeftBulbarConjuctiva', max_length=200, null=True)),
                ('rightbulbarconjuctiva', models.CharField(blank=True, db_column='RightBulbarConjuctiva', max_length=200, null=True)),
                ('leftcentralcornea', models.CharField(blank=True, db_column='LeftCentralCornea', max_length=200, null=True)),
                ('rightcentralcornea', models.CharField(blank=True, db_column='RightCentralCornea', max_length=200, null=True)),
                ('leftverticalcornea', models.CharField(blank=True, db_column='LeftVerticalCornea', max_length=200, null=True)),
                ('rightverticalcornea', models.CharField(blank=True, db_column='RightVerticalCornea', max_length=200, null=True)),
                ('leftanteriorchamber', models.CharField(blank=True, db_column='LeftAnteriorChamber', max_length=200, null=True)),
                ('rightanteriorchamber', models.CharField(blank=True, db_column='RightAnteriorChamber', max_length=200, null=True)),
                ('leftirish', models.CharField(blank=True, db_column='LeftIrish', max_length=200, null=True)),
                ('rightirish', models.CharField(blank=True, db_column='RightIrish', max_length=200, null=True)),
                ('leftanteriorchamberangle', models.CharField(blank=True, db_column='LeftAnteriorChamberAngle', max_length=200, null=True)),
                ('rightanteriorchamberangle', models.CharField(blank=True, db_column='RightAnteriorChamberAngle', max_length=200, null=True)),
                ('leftretina', models.CharField(blank=True, db_column='LeftRetina', max_length=200, null=True)),
                ('rightretina', models.CharField(blank=True, db_column='RightRetina', max_length=200, null=True)),
                ('leftmacular', models.CharField(blank=True, db_column='LeftMacular', max_length=200, null=True)),
                ('rightmacular', models.CharField(blank=True, db_column='RightMacular', max_length=200, null=True)),
                ('leftopticdisc', models.CharField(blank=True, db_column='LeftOpticDisc', max_length=200, null=True)),
                ('rightopticdisc', models.CharField(blank=True, db_column='RightOpticDisc', max_length=200, null=True)),
                ('leftiop', models.CharField(blank=True, db_column='LeftIOP', max_length=10, null=True)),
                ('rightiop', models.CharField(blank=True, db_column='RightIOP', max_length=10, null=True)),
                ('leftvitreous', models.CharField(blank=True, db_column='LeftVitreous', max_length=200, null=True)),
                ('rightvitreous', models.CharField(blank=True, db_column='RightVitreous', max_length=200, null=True)),
                ('leftlense', models.CharField(blank=True, db_column='LeftLense', max_length=200, null=True)),
                ('rightlense', models.CharField(blank=True, db_column='RightLense', max_length=200, null=True)),
                ('eyenotes', models.CharField(blank=True, db_column='EyeNotes', max_length=200, null=True)),
                ('lefteyeball', models.CharField(blank=True, db_column='LeftEyeBall', max_length=200, null=True)),
                ('righteyeball', models.CharField(blank=True, db_column='RightEyeBall', max_length=200, null=True)),
                ('leftorbit', models.CharField(blank=True, db_column='LeftOrbit', max_length=200, null=True)),
                ('rightorbit', models.CharField(blank=True, db_column='RightOrbit', max_length=200, null=True)),
                ('clientmachine', models.CharField(blank=True, db_column='ClientMachine', max_length=40, null=True)),
                ('recorddatetime', models.DateTimeField(blank=True, db_column='RecordDateTime', null=True)),
            ],
            options={
                'db_table': 'EyeAssessment',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Familymembers',
            fields=[
                ('patientno', models.OneToOneField(db_column='PatientNo', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='clinicMas.patients')),
                ('membername', models.CharField(db_column='MemberName', max_length=41)),
                ('age', models.SmallIntegerField(blank=True, db_column='Age', null=True)),
                ('uniqueno', models.CharField(blank=True, db_column='UniqueNo', max_length=20, null=True)),
            ],
            options={
                'db_table': 'FamilyMembers',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Goodsreceivednotedetails',
            fields=[
                ('grnno', models.OneToOneField(db_column='GRNNo', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='clinicMas.goodsreceivednote')),
                ('itemcode', models.CharField(db_column='ItemCode', max_length=20)),
                ('itemname', models.CharField(db_column='ItemName', max_length=800)),
                ('unitmeasure', models.CharField(blank=True, db_column='UnitMeasure', max_length=100, null=True)),
                ('orderedquantity', models.IntegerField(blank=True, db_column='OrderedQuantity', null=True)),
                ('packsize', models.IntegerField(blank=True, db_column='PackSize', null=True)),
                ('receivedquantity', models.IntegerField(blank=True, db_column='ReceivedQuantity', null=True)),
                ('bonusquantity', models.IntegerField(blank=True, db_column='BonusQuantity', null=True)),
                ('rate', models.DecimalField(blank=True, db_column='Rate', decimal_places=4, max_digits=19, null=True)),
                ('discount', models.DecimalField(blank=True, db_column='Discount', decimal_places=4, max_digits=19, null=True)),
                ('vatvalue', models.DecimalField(blank=True, db_column='VATValue', decimal_places=4, max_digits=19, null=True)),
                ('vatpercentage', models.DecimalField(blank=True, db_column='VATPercentage', decimal_places=0, max_digits=18, null=True)),
                ('amount', models.DecimalField(blank=True, db_column='Amount', decimal_places=4, max_digits=19, null=True)),
                ('notes', models.CharField(blank=True, db_column='Notes', max_length=100, null=True)),
                ('syncstatus', models.BooleanField(blank=True, db_column='SyncStatus', null=True)),
                ('clientmachine', models.CharField(blank=True, db_column='ClientMachine', max_length=40, null=True)),
                ('recorddatetime', models.DateTimeField(blank=True, db_column='RecordDateTime', null=True)),
            ],
            options={
                'db_table': 'GoodsReceivedNoteDetails',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Goodsreturnednotedetails',
            fields=[
                ('returnno', models.OneToOneField(db_column='ReturnNo', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='clinicMas.goodsreturnednote')),
                ('itemcode', models.CharField(db_column='ItemCode', max_length=20)),
                ('itemname', models.CharField(blank=True, db_column='ItemName', max_length=800, null=True)),
                ('returnquantity', models.IntegerField(blank=True, db_column='ReturnQuantity', null=True)),
                ('sysncstatus', models.BooleanField(blank=True, db_column='SysncStatus', null=True)),
                ('clientmachine', models.CharField(blank=True, db_column='ClientMachine', max_length=20, null=True)),
                ('recorddatetime', models.DateTimeField(blank=True, db_column='RecordDateTime', null=True)),
            ],
            options={
                'db_table': 'GoodsReturnedNoteDetails',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Hctclientcard',
            fields=[
                ('visitno', models.OneToOneField(db_column='VisitNo', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='clinicMas.visits')),
                ('hsd', models.CharField(blank=True, db_column='HSD', max_length=100, null=True)),
                ('sexualpatnerno', models.SmallIntegerField(blank=True, db_column='SexualPatnerNo', null=True)),
                ('knowaboutserviceid', models.CharField(db_column='KnowAboutServiceID', max_length=200)),
                ('noconsentreasonid', models.CharField(blank=True, db_column='NoConsentReasonID', max_length=200, null=True)),
                ('testdoneby', models.CharField(blank=True, db_column='TestDoneBy', max_length=41, null=True)),
                ('designation', models.CharField(blank=True, db_column='Designation', max_length=20, null=True)),
                ('testdate', models.DateTimeField(blank=True, db_column='TestDate', null=True)),
                ('referralreason', models.CharField(blank=True, db_column='ReferralReason', max_length=200, null=True)),
                ('counselorname', models.CharField(blank=True, db_column='CounselorName', max_length=41, null=True)),
                ('counseldate', models.DateTimeField(blank=True, db_column='CounselDate', null=True)),
                ('clientmachine', models.CharField(blank=True, db_column='ClientMachine', max_length=40, null=True)),
                ('recorddatetime', models.DateTimeField(blank=True, db_column='RecordDateTime', null=True)),
            ],
            options={
                'db_table': 'HCTClientCard',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Hivcare',
            fields=[
                ('patientno', models.OneToOneField(db_column='PatientNo', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='clinicMas.patients')),
                ('ptclinic', models.CharField(blank=True, db_column='PtClinic', max_length=20, null=True)),
                ('lc1', models.CharField(blank=True, db_column='LC1', max_length=200, null=True)),
                ('confirmedtestdate', models.DateTimeField(blank=True, db_column='ConfirmedTestDate', null=True)),
                ('hivenrolleddate', models.DateTimeField(blank=True, db_column='HIVEnrolledDate', null=True)),
                ('eligibleartdate', models.DateTimeField(blank=True, db_column='EligibleARTDate', null=True)),
                ('eligiblereadydate', models.DateTimeField(blank=True, db_column='EligibleReadyDate', null=True)),
                ('ab', models.BooleanField(blank=True, db_column='Ab', null=True)),
                ('pcr', models.BooleanField(blank=True, db_column='PCR', null=True)),
                ('hivcarewhere', models.CharField(blank=True, db_column='HIVCareWhere', max_length=41, null=True)),
                ('hivcaretransferin', models.BooleanField(blank=True, db_column='HIVCareTransferIn', null=True)),
                ('transferinfrom', models.CharField(blank=True, db_column='TransferInFrom', max_length=41, null=True)),
                ('cd4', models.DecimalField(blank=True, db_column='CD4', decimal_places=2, max_digits=10, null=True)),
                ('presumptivehiv', models.BooleanField(blank=True, db_column='PresumptiveHIV', null=True)),
                ('pcrinfant', models.BooleanField(blank=True, db_column='PCRInfant', null=True)),
                ('medicalconditions', models.CharField(blank=True, db_column='MedicalConditions', max_length=2000, null=True)),
                ('cohortmonth', models.SmallIntegerField(blank=True, db_column='COHORTMonth', null=True)),
                ('cohortyear', models.SmallIntegerField(blank=True, db_column='COHORTYear', null=True)),
                ('arttransferindate', models.DateTimeField(blank=True, db_column='ARTTransferInDate', null=True)),
                ('arttransferinfrom', models.CharField(blank=True, db_column='ARTTransferInFrom', max_length=40, null=True)),
                ('startartdate', models.DateTimeField(blank=True, db_column='StartARTDate', null=True)),
                ('startartweight', models.DecimalField(blank=True, db_column='StartARTWeight', decimal_places=2, max_digits=10, null=True)),
                ('startartcd4', models.DecimalField(blank=True, db_column='StartARTCD4', decimal_places=2, max_digits=10, null=True)),
                ('recorddatetime', models.DateTimeField(blank=True, db_column='RecordDateTime', null=True)),
                ('computername', models.CharField(blank=True, db_column='ComputerName', max_length=40, null=True)),
            ],
            options={
                'db_table': 'HIVCARE',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Importdatainfo',
            fields=[
                ('itemcode', models.OneToOneField(db_column='ItemCode', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='clinicMas.labtests')),
                ('sourcename', models.CharField(db_column='SourceName', max_length=60)),
                ('sourcecaption', models.CharField(db_column='SourceCaption', max_length=100)),
                ('importserver', models.CharField(blank=True, db_column='ImportServer', max_length=100, null=True)),
                ('importlogin', models.CharField(blank=True, db_column='ImportLogin', max_length=100, null=True)),
                ('importpassword', models.CharField(blank=True, db_column='ImportPassword', max_length=100, null=True)),
                ('sp_name', models.CharField(blank=True, db_column='SP_Name', max_length=100, null=True)),
            ],
            options={
                'db_table': 'ImportDataInfo',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Insurancecustomfee',
            fields=[
                ('insuranceno', models.OneToOneField(db_column='InsuranceNo', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='clinicMas.insurances')),
                ('itemcode', models.CharField(db_column='ItemCode', max_length=20)),
                ('customfee', models.DecimalField(blank=True, db_column='CustomFee', decimal_places=4, max_digits=19, null=True)),
            ],
            options={
                'db_table': 'InsuranceCustomFee',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Insuranceexclusions',
            fields=[
                ('insuranceno', models.OneToOneField(db_column='InsuranceNo', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='clinicMas.insurances')),
                ('itemcode', models.CharField(db_column='ItemCode', max_length=20)),
            ],
            options={
                'db_table': 'InsuranceExclusions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Insuranceschemes',
            fields=[
                ('companyno', models.OneToOneField(db_column='CompanyNo', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='clinicMas.companies')),
                ('schemejoindate', models.DateTimeField(blank=True, db_column='SchemeJoinDate', null=True)),
                ('schemestartdate', models.DateTimeField(blank=True, db_column='SchemeStartDate', null=True)),
                ('schemeenddate', models.DateTimeField(blank=True, db_column='SchemeEndDate', null=True)),
                ('copaypercent', models.DecimalField(blank=True, db_column='CoPayPercent', decimal_places=2, max_digits=5, null=True)),
                ('copayvalue', models.DecimalField(blank=True, db_column='CoPayValue', decimal_places=4, max_digits=19, null=True)),
                ('annualpremium', models.DecimalField(blank=True, db_column='AnnualPremium', decimal_places=4, max_digits=19, null=True)),
                ('memberpremium', models.DecimalField(blank=True, db_column='MemberPremium', decimal_places=4, max_digits=19, null=True)),
                ('smartcardapplicable', models.BooleanField(blank=True, db_column='SmartCardApplicable', null=True)),
                ('recorddatetime', models.DateTimeField(blank=True, db_column='RecordDateTime', null=True)),
                ('opdcopayvalue', models.DecimalField(blank=True, db_column='OPDCoPayValue', decimal_places=4, max_digits=19, null=True)),
                ('ipdcopayvalue', models.DecimalField(blank=True, db_column='IPDCoPayValue', decimal_places=4, max_digits=19, null=True)),
            ],
            options={
                'db_table': 'InsuranceSchemes',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Insurancevisittypecustomfee',
            fields=[
                ('insuranceno', models.OneToOneField(db_column='InsuranceNo', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='clinicMas.insurances')),
                ('itemcode', models.CharField(db_column='ItemCode', max_length=20)),
                ('customfee', models.DecimalField(blank=True, db_column='CustomFee', decimal_places=4, max_digits=19, null=True)),
                ('loginid', models.CharField(blank=True, db_column='LoginID', max_length=20, null=True)),
                ('userfullname', models.CharField(blank=True, db_column='UserFullName', max_length=41, null=True)),
                ('clientmachine', models.CharField(blank=True, db_column='ClientMachine', max_length=40, null=True)),
                ('recorddatetime', models.DateTimeField(blank=True, db_column='RecordDateTime', null=True)),
            ],
            options={
                'db_table': 'InsuranceVisitTypeCustomFee',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Intextrabills',
            fields=[
                ('extrabillno', models.OneToOneField(db_column='ExtraBillNo', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='clinicMas.extrabills')),
                ('syncstatus', models.BooleanField(blank=True, db_column='SyncStatus', null=True)),
                ('userid', models.CharField(blank=True, db_column='UserID', max_length=100, null=True)),
                ('clientmachine', models.CharField(blank=True, db_column='ClientMachine', max_length=41, null=True)),
                ('recorddatetime', models.DateTimeField(blank=True, db_column='RecordDateTime', null=True)),
            ],
            options={
                'db_table': 'INTExtraBills',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Inventoryext',
            fields=[
                ('tranid', models.OneToOneField(db_column='TranID', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='clinicMas.inventory')),
                ('referenceno', models.CharField(blank=True, db_column='ReferenceNo', max_length=20, null=True)),
                ('sourceno', models.CharField(blank=True, db_column='SourceNo', max_length=20, null=True)),
            ],
            options={
                'db_table': 'InventoryEXT',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Inventorylocation',
            fields=[
                ('locationid', models.OneToOneField(db_column='LocationID', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='clinicMas.lookupdata')),
                ('itemcode', models.CharField(db_column='ItemCode', max_length=20)),
                ('unitsathand', models.IntegerField(blank=True, db_column='UnitsAtHand', null=True)),
                ('locationorderlevel', models.IntegerField(blank=True, db_column='LocationOrderLevel', null=True)),
            ],
            options={
                'db_table': 'InventoryLocation',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Inventoryorderdetails',
            fields=[
                ('orderno', models.OneToOneField(db_column='OrderNo', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='clinicMas.inventoryorders')),
                ('itemcode', models.CharField(db_column='ItemCode', max_length=20)),
                ('packid', models.CharField(blank=True, db_column='PackID', max_length=10, null=True)),
                ('quantity', models.IntegerField(blank=True, db_column='Quantity', null=True)),
                ('unitcost', models.DecimalField(blank=True, db_column='UnitCost', decimal_places=4, max_digits=19, null=True)),
                ('packsize', models.IntegerField(blank=True, db_column='PackSize', null=True)),
                ('clientmachine', models.CharField(blank=True, db_column='ClientMachine', max_length=40, null=True)),
                ('recorddatetime', models.DateTimeField(blank=True, db_column='RecordDateTime', null=True)),
            ],
            options={
                'db_table': 'InventoryOrderDetails',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Inventorytransferdetails',
            fields=[
                ('transferno', models.OneToOneField(db_column='TransferNo', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='clinicMas.inventorytransfers')),
                ('itemcode', models.CharField(db_column='ItemCode', max_length=20)),
                ('quantity', models.IntegerField(blank=True, db_column='Quantity', null=True)),
                ('unitcost', models.DecimalField(blank=True, db_column='UnitCost', decimal_places=4, max_digits=19, null=True)),
                ('clientmachine', models.CharField(blank=True, db_column='ClientMachine', max_length=40, null=True)),
                ('recorddatetime', models.DateTimeField(blank=True, db_column='RecordDateTime', null=True)),
            ],
            options={
                'db_table': 'InventoryTransferDetails',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Invoicedetailadjustments',
            fields=[
                ('adjustmentno', models.OneToOneField(db_column='AdjustmentNo', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='clinicMas.invoiceadjustments')),
                ('quantity', models.IntegerField(blank=True, db_column='Quantity', null=True)),
                ('amount', models.DecimalField(blank=True, db_column='Amount', decimal_places=4, max_digits=19, null=True)),
                ('clientmachine', models.CharField(blank=True, db_column='ClientMachine', max_length=40, null=True)),
                ('recorddatetime', models.DateTimeField(blank=True, db_column='RecordDateTime', null=True)),
            ],
            options={
                'db_table': 'InvoiceDetailAdjustments',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Invoicedetails',
            fields=[
                ('invoiceno', models.OneToOneField(db_column='InvoiceNo', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='clinicMas.invoices')),
                ('quantity', models.IntegerField(blank=True, db_column='Quantity', null=True)),
                ('unitprice', models.DecimalField(blank=True, db_column='UnitPrice', decimal_places=4, max_digits=19, null=True)),
                ('discount', models.DecimalField(blank=True, db_column='Discount', decimal_places=4, max_digits=19, null=True)),
                ('amount', models.DecimalField(blank=True, db_column='Amount', decimal_places=4, max_digits=19, null=True)),
            ],
            options={
                'db_table': 'InvoiceDetails',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Invoiceextrabillitemadjustments',
            fields=[
                ('adjustmentno', models.OneToOneField(db_column='AdjustmentNo', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='clinicMas.invoiceadjustments')),
                ('quantity', models.IntegerField(blank=True, db_column='Quantity', null=True)),
                ('amount', models.DecimalField(blank=True, db_column='Amount', decimal_places=4, max_digits=19, null=True)),
                ('clientmachine', models.CharField(blank=True, db_column='ClientMachine', max_length=40, null=True)),
                ('recorddatetime', models.DateTimeField(blank=True, db_column='RecordDateTime', null=True)),
            ],
            options={
                'db_table': 'InvoiceExtraBillItemAdjustments',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Invoiceextrabillitems',
            fields=[
                ('invoiceno', models.OneToOneField(db_column='InvoiceNo', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='clinicMas.invoices')),
                ('quantity', models.IntegerField(blank=True, db_column='Quantity', null=True)),
                ('unitprice', models.DecimalField(blank=True, db_column='UnitPrice', decimal_places=4, max_digits=19, null=True)),
                ('discount', models.DecimalField(blank=True, db_column='Discount', decimal_places=4, max_digits=19, null=True)),
                ('amount', models.DecimalField(blank=True, db_column='Amount', decimal_places=4, max_digits=19, null=True)),
            ],
            options={
                'db_table': 'InvoiceExtraBillItems',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Inwardfiles',
            fields=[
                ('outwardno', models.OneToOneField(db_column='OutwardNo', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='clinicMas.outwardfiles')),
                ('returndatetime', models.DateTimeField(blank=True, db_column='ReturnDateTime', null=True)),
                ('returnedby', models.CharField(blank=True, db_column='ReturnedBy', max_length=100, null=True)),
                ('clientmachine', models.CharField(blank=True, db_column='ClientMachine', max_length=40, null=True)),
                ('recorddatetime', models.DateTimeField(blank=True, db_column='RecordDateTime', null=True)),
            ],
            options={
                'db_table': 'InwardFiles',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Ipdcancerdiagnosis',
            fields=[
                ('roundno', models.OneToOneField(db_column='RoundNo', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='clinicMas.ipddoctor')),
                ('notes', models.CharField(blank=True, db_column='Notes', max_length=200, null=True)),
                ('clientmachine', models.CharField(blank=True, db_column='ClientMachine', max_length=41, null=True)),
                ('recorddatetime', models.DateTimeField(blank=True, db_column='RecordDateTime', null=True)),
            ],
            options={
                'db_table': 'IPDCancerDiagnosis',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Ipdclinicalfindings',
            fields=[
                ('roundno', models.OneToOneField(db_column='RoundNo', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='clinicMas.ipddoctor')),
                ('weight', models.DecimalField(blank=True, db_column='Weight', decimal_places=2, max_digits=5, null=True)),
                ('temperature', models.DecimalField(blank=True, db_column='Temperature', decimal_places=2, max_digits=5, null=True)),
                ('height', models.DecimalField(blank=True, db_column='Height', decimal_places=2, max_digits=5, null=True)),
                ('pulse', models.SmallIntegerField(blank=True, db_column='Pulse', null=True)),
                ('bloodpressure', models.CharField(blank=True, db_column='BloodPressure', max_length=10, null=True)),
                ('headcircum', models.DecimalField(blank=True, db_column='HeadCircum', decimal_places=2, max_digits=5, null=True)),
                ('bodysurfacearea', models.DecimalField(blank=True, db_column='BodySurfaceArea', decimal_places=2, max_digits=10, null=True)),
                ('history', models.CharField(blank=True, db_column='History', max_length=100, null=True)),
                ('clinicalnotes', models.CharField(blank=True, db_column='ClinicalNotes', max_length=4000, null=True)),
                ('respiratory', models.CharField(blank=True, db_column='Respiratory', max_length=100, null=True)),
                ('generalappearance', models.CharField(blank=True, db_column='GeneralAppearance', max_length=100, null=True)),
                ('cvs', models.CharField(blank=True, db_column='CVS', max_length=100, null=True)),
                ('abdomen', models.CharField(blank=True, db_column='Abdomen', max_length=100, null=True)),
                ('cns', models.CharField(blank=True, db_column='CNS', max_length=100, null=True)),
                ('muscularskeletal', models.CharField(blank=True, db_column='MuscularSkeletal', max_length=100, null=True)),
                ('psychologicalstatus', models.CharField(blank=True, db_column='PsychologicalStatus', max_length=100, null=True)),
                ('clinicaldiagnosis', models.CharField(blank=True, db_column='ClinicalDiagnosis', max_length=100, null=True)),
                ('recorddatetime', models.DateTimeField(blank=True, db_column='RecordDateTime', null=True)),
                ('ros', models.CharField(blank=True, db_column='ROS', max_length=1000, null=True)),
                ('pmh', models.CharField(blank=True, db_column='PMH', max_length=1000, null=True)),
                ('poh', models.CharField(blank=True, db_column='POH', max_length=1000, null=True)),
                ('pgh', models.CharField(blank=True, db_column='PGH', max_length=1000, null=True)),
                ('fsh', models.CharField(blank=True, db_column='FSH', max_length=1000, null=True)),
                ('ent', models.CharField(blank=True, db_column='ENT', max_length=1000, null=True)),
                ('eye', models.CharField(blank=True, db_column='EYE', max_length=1000, null=True)),
                ('skin', models.CharField(blank=True, db_column='Skin', max_length=1000, null=True)),
                ('pv', models.CharField(blank=True, db_column='PV', max_length=1000, null=True)),
                ('treatmentplan', models.CharField(blank=True, db_column='TreatmentPlan', max_length=1000, null=True)),
                ('muac', models.DecimalField(blank=True, db_column='MUAC', decimal_places=2, max_digits=5, null=True)),
                ('respirationrate', models.DecimalField(blank=True, db_column='RespirationRate', decimal_places=2, max_digits=5, null=True)),
            ],
            options={
                'db_table': 'IPDClinicalFindings',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Ipddrugadministration',
            fields=[
                ('nurseroundno', models.OneToOneField(db_column='NurseRoundNo', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='clinicMas.ipdnurse')),
                ('takendatetime', models.DateTimeField(db_column='TakenDateTime')),
                ('itemcode', models.CharField(db_column='ItemCode', max_length=20)),
                ('itemname', models.CharField(db_column='ItemName', max_length=800)),
                ('quantitytaken', models.IntegerField(blank=True, db_column='QuantityTaken', null=True)),
                ('nursenotes', models.CharField(blank=True, db_column='NurseNotes', max_length=200, null=True)),
                ('clientmachine', models.CharField(blank=True, db_column='ClientMachine', max_length=40, null=True)),
                ('recorddatetime', models.DateTimeField(blank=True, db_column='RecordDateTime', null=True)),
            ],
            options={
                'db_table': 'IPDDrugAdministration',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Ipdeyeassessment',
            fields=[
                ('roundno', models.OneToOneField(db_column='RoundNo', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='clinicMas.ipddoctor')),
                ('leftpupil', models.CharField(blank=True, db_column='LeftPupil', max_length=200, null=True)),
                ('rightpupil', models.CharField(blank=True, db_column='RightPupil', max_length=200, null=True)),
                ('leftlidmargin', models.CharField(blank=True, db_column='LeftLidMargin', max_length=200, null=True)),
                ('rightlidmargin', models.CharField(blank=True, db_column='RightLidMargin', max_length=200, null=True)),
                ('leftconjuctiva', models.CharField(blank=True, db_column='LeftConjuctiva', max_length=200, null=True)),
                ('rightconjuctiva', models.CharField(blank=True, db_column='RightConjuctiva', max_length=200, null=True)),
                ('leftbulbarconjuctiva', models.CharField(blank=True, db_column='LeftBulbarConjuctiva', max_length=200, null=True)),
                ('rightbulbarconjuctiva', models.CharField(blank=True, db_column='RightBulbarConjuctiva', max_length=200, null=True)),
                ('leftcentralcornea', models.CharField(blank=True, db_column='LeftCentralCornea', max_length=200, null=True)),
                ('rightcentralcornea', models.CharField(blank=True, db_column='RightCentralCornea', max_length=200, null=True)),
                ('leftverticalcornea', models.CharField(blank=True, db_column='LeftVerticalCornea', max_length=200, null=True)),
                ('rightverticalcornea', models.CharField(blank=True, db_column='RightVerticalCornea', max_length=200, null=True)),
                ('leftanteriorchamber', models.CharField(blank=True, db_column='LeftAnteriorChamber', max_length=200, null=True)),
                ('rightanteriorchamber', models.CharField(blank=True, db_column='RightAnteriorChamber', max_length=200, null=True)),
                ('leftirish', models.CharField(blank=True, db_column='LeftIrish', max_length=200, null=True)),
                ('rightirish', models.CharField(blank=True, db_column='RightIrish', max_length=200, null=True)),
                ('leftanteriorchamberangle', models.CharField(blank=True, db_column='LeftAnteriorChamberAngle', max_length=200, null=True)),
                ('rightanteriorchamberangle', models.CharField(blank=True, db_column='RightAnteriorChamberAngle', max_length=200, null=True)),
                ('leftretina', models.CharField(blank=True, db_column='LeftRetina', max_length=200, null=True)),
                ('rightretina', models.CharField(blank=True, db_column='RightRetina', max_length=200, null=True)),
                ('leftmacular', models.CharField(blank=True, db_column='LeftMacular', max_length=200, null=True)),
                ('rightmacular', models.CharField(blank=True, db_column='RightMacular', max_length=200, null=True)),
                ('leftopticdisc', models.CharField(blank=True, db_column='LeftOpticDisc', max_length=200, null=True)),
                ('rightopticdisc', models.CharField(blank=True, db_column='RightOpticDisc', max_length=200, null=True)),
                ('leftiop', models.CharField(blank=True, db_column='LeftIOP', max_length=10, null=True)),
                ('rightiop', models.CharField(blank=True, db_column='RightIOP', max_length=10, null=True)),
                ('leftvitreous', models.CharField(blank=True, db_column='LeftVitreous', max_length=200, null=True)),
                ('rightvitreous', models.CharField(blank=True, db_column='RightVitreous', max_length=200, null=True)),
                ('leftlense', models.CharField(blank=True, db_column='LeftLense', max_length=200, null=True)),
                ('rightlense', models.CharField(blank=True, db_column='RightLense', max_length=200, null=True)),
                ('eyenotes', models.CharField(blank=True, db_column='EyeNotes', max_length=200, null=True)),
                ('lefteyeball', models.CharField(blank=True, db_column='LeftEyeBall', max_length=200, null=True)),
                ('righteyeball', models.CharField(blank=True, db_column='RightEyeBall', max_length=200, null=True)),
                ('leftorbit', models.CharField(blank=True, db_column='LeftOrbit', max_length=200, null=True)),
                ('rightorbit', models.CharField(blank=True, db_column='RightOrbit', max_length=200, null=True)),
                ('clientmachine', models.CharField(blank=True, db_column='ClientMachine', max_length=40, null=True)),
                ('recorddatetime', models.DateTimeField(blank=True, db_column='RecordDateTime', null=True)),
            ],
            options={
                'db_table': 'IPDEyeAssessment',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Ipditems',
            fields=[
                ('roundno', models.OneToOneField(db_column='RoundNo', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='clinicMas.ipddoctor')),
                ('itemcode', models.CharField(db_column='ItemCode', max_length=20)),
                ('itemname', models.CharField(db_column='ItemName', max_length=800)),
                ('unitmeasure', models.CharField(blank=True, db_column='UnitMeasure', max_length=100, null=True)),
                ('quantity', models.IntegerField(blank=True, db_column='Quantity', null=True)),
                ('unitcost', models.DecimalField(blank=True, db_column='UnitCost', decimal_places=4, max_digits=19, null=True)),
                ('unitprice', models.DecimalField(blank=True, db_column='UnitPrice', decimal_places=4, max_digits=19, null=True)),
                ('itemdetails', models.CharField(blank=True, db_column='ItemDetails', max_length=800, null=True)),
                ('lastupdate', models.DateTimeField(blank=True, db_column='LastUpdate', null=True)),
                ('originalquantity', models.IntegerField(blank=True, db_column='OriginalQuantity', null=True)),
                ('originalprice', models.DecimalField(blank=True, db_column='OriginalPrice', decimal_places=4, max_digits=19, null=True)),
                ('clientmachine', models.CharField(blank=True, db_column='ClientMachine', max_length=40, null=True)),
                ('recorddatetime', models.DateTimeField(blank=True, db_column='RecordDateTime', null=True)),
                ('creatorclientmachine', models.CharField(blank=True, db_column='CreatorClientMachine', max_length=40, null=True)),
            ],
            options={
                'db_table': 'IPDItems',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Ipdnurseassessment',
            fields=[
                ('roundno', models.OneToOneField(db_column='RoundNo', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='clinicMas.ipdnurse')),
                ('complaint', models.CharField(blank=True, db_column='Complaint', max_length=1000, null=True)),
                ('etiology', models.CharField(blank=True, db_column='Etiology', max_length=1000, null=True)),
                ('signsandsymptoms', models.CharField(blank=True, db_column='SignsAndSymptoms', max_length=1000, null=True)),
                ('proposedsolution', models.CharField(blank=True, db_column='ProposedSolution', max_length=1000, null=True)),
                ('clientmachine', models.CharField(blank=True, db_column='ClientMachine', max_length=40, null=True)),
                ('recorddatetime', models.DateTimeField(blank=True, db_column='RecordDateTime', null=True)),
            ],
            options={
                'db_table': 'IPDNurseAssessment',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Ipdnurseevaluation',
            fields=[
                ('roundno', models.OneToOneField(db_column='RoundNo', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='clinicMas.ipdnurse')),
                ('proposedmodifications', models.CharField(blank=True, db_column='ProposedModifications', max_length=1000, null=True)),
                ('evaluationnotes', models.CharField(blank=True, db_column='EvaluationNotes', max_length=1000, null=True)),
                ('clientmachine', models.CharField(blank=True, db_column='ClientMachine', max_length=40, null=True)),
                ('recorddatetime', models.DateTimeField(blank=True, db_column='RecordDateTime', null=True)),
            ],
            options={
                'db_table': 'IPDNurseEvaluation',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Ipdnursefluids',
            fields=[
                ('nurseroundno', models.OneToOneField(db_column='NurseRoundNo', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='clinicMas.ipdnurse')),
                ('takendatetime', models.DateTimeField(blank=True, db_column='TakenDateTime', null=True)),
                ('quantity', models.IntegerField(blank=True, db_column='Quantity', null=True)),
                ('nursenotes', models.CharField(blank=True, db_column='NurseNotes', max_length=200, null=True)),
                ('clientmachine', models.CharField(blank=True, db_column='ClientMachine', max_length=40, null=True)),
                ('recorddatetime', models.DateTimeField(blank=True, db_column='RecordDateTime', null=True)),
            ],
            options={
                'db_table': 'IPDNurseFluids',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Ipdnursingplan',
            fields=[
                ('roundno', models.OneToOneField(db_column='RoundNo', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='clinicMas.ipdnurse')),
                ('expectedoutcome', models.CharField(blank=True, db_column='ExpectedOutcome', max_length=1000, null=True)),
                ('nursingactions', models.CharField(blank=True, db_column='NursingActions', max_length=1000, null=True)),
                ('implementation', models.CharField(blank=True, db_column='Implementation', max_length=1000, null=True)),
                ('clientmachine', models.CharField(blank=True, db_column='ClientMachine', max_length=40, null=True)),
                ('recorddatetime', models.DateTimeField(blank=True, db_column='RecordDateTime', null=True)),
            ],
            options={
                'db_table': 'IPDNursingPlan',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Ipdorthoptics',
            fields=[
                ('roundno', models.OneToOneField(db_column='RoundNo', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='clinicMas.ipddoctor')),
                ('headposture', models.CharField(blank=True, db_column='HeadPosture', max_length=200, null=True)),
                ('fixation', models.CharField(blank=True, db_column='Fixation', max_length=200, null=True)),
                ('lefthirschberg', models.CharField(blank=True, db_column='LeftHirschberg', max_length=200, null=True)),
                ('righthirschberg', models.CharField(blank=True, db_column='RightHirschberg', max_length=200, null=True)),
                ('righteom', models.CharField(blank=True, db_column='RightEOM', max_length=200, null=True)),
                ('lefteom', models.CharField(blank=True, db_column='LeftEOM', max_length=200, null=True)),
                ('leftapctglasses', models.CharField(blank=True, db_column='LeftAPCTGlasses', max_length=200, null=True)),
                ('rightapctglasses', models.CharField(blank=True, db_column='RightAPCTGlasses', max_length=200, null=True)),
                ('leftapctwithoutglasses', models.CharField(blank=True, db_column='LeftAPCTWithOutGlasses', max_length=200, null=True)),
                ('rightapctwithoutglasses', models.CharField(blank=True, db_column='RightAPCTWithOutGlasses', max_length=200, null=True)),
                ('correspondence', models.CharField(blank=True, db_column='Correspondence', max_length=200, null=True)),
                ('prismadaptation', models.CharField(blank=True, db_column='PrismAdaptation', max_length=200, null=True)),
                ('fusionconvergence', models.CharField(blank=True, db_column='FusionConvergence', max_length=200, null=True)),
                ('fusiondivergence', models.CharField(blank=True, db_column='FusionDivergence', max_length=200, null=True)),
                ('fusionrange', models.CharField(blank=True, db_column='FusionRange', max_length=200, null=True)),
                ('nearpointofaccommodation', models.CharField(blank=True, db_column='NearPointOfAccommodation', max_length=200, null=True)),
                ('nearpointofconvergence', models.CharField(blank=True, db_column='NearPointOfConvergence', max_length=200, null=True)),
                ('orthopticsnotes', models.CharField(blank=True, db_column='OrthopticsNotes', max_length=400, null=True)),
                ('clientmachine', models.CharField(blank=True, db_column='ClientMachine', max_length=40, null=True)),
                ('recorddatetime', models.DateTimeField(blank=True, db_column='RecordDateTime', null=True)),
            ],
            options={
                'db_table': 'IPDOrthoptics',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Ipdstaffpaymentdetails',
            fields=[
                ('paymentvoucherno', models.OneToOneField(db_column='PaymentVoucherNo', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='clinicMas.staffpayments')),
                ('roundno', models.CharField(db_column='RoundNo', max_length=20)),
                ('amount', models.DecimalField(db_column='Amount', decimal_places=4, max_digits=19)),
                ('approvalnotes', models.CharField(blank=True, db_column='ApprovalNotes', max_length=200, null=True)),
                ('clientmachine', models.CharField(db_column='ClientMachine', max_length=40)),
                ('recorddatetime', models.DateTimeField(db_column='RecordDateTime')),
            ],
            options={
                'db_table': 'IPDStaffPaymentDetails',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Ipdtheatreoperations',
            fields=[
                ('roundno', models.OneToOneField(db_column='RoundNo', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='clinicMas.ipddoctor')),
                ('operationdatetime', models.DateTimeField(blank=True, db_column='OperationDateTime', null=True)),
                ('othersurgeon', models.CharField(blank=True, db_column='OtherSurgeon', max_length=200, null=True)),
                ('otheranaesthetist', models.CharField(blank=True, db_column='OtherAnaesthetist', max_length=200, null=True)),
                ('othernurse', models.CharField(blank=True, db_column='OtherNurse', max_length=200, null=True)),
                ('anaesthesiatype', models.CharField(blank=True, db_column='AnaesthesiaType', max_length=200, null=True)),
                ('preoperativediagnosis', models.CharField(blank=True, db_column='PreoperativeDiagnosis', max_length=2000, null=True)),
                ('plannedprocedures', models.CharField(blank=True, db_column='PlannedProcedures', max_length=2000, null=True)),
                ('report', models.CharField(blank=True, db_column='Report', max_length=2000, null=True)),
                ('postoperativeinstructions', models.CharField(blank=True, db_column='PostoperativeInstructions', max_length=2000, null=True)),
                ('recorddatetime', models.DateTimeField(blank=True, db_column='RecordDateTime', null=True)),
            ],
            options={
                'db_table': 'IPDTheatreOperations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Itemadjustments',
            fields=[
                ('adjustmentno', models.OneToOneField(db_column='AdjustmentNo', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='clinicMas.billadjustments')),
                ('itemcode', models.CharField(db_column='ItemCode', max_length=20)),
                ('returndate', models.DateTimeField(blank=True, db_column='ReturnDate', null=True)),
                ('quantity', models.IntegerField(blank=True, db_column='Quantity', null=True)),
                ('notes', models.CharField(blank=True, db_column='Notes', max_length=200, null=True)),
                ('amount', models.DecimalField(blank=True, db_column='Amount', decimal_places=4, max_digits=19, null=True)),
                ('acknowledgeable', models.BooleanField(blank=True, db_column='Acknowledgeable', null=True)),
                ('isacknowledged', models.BooleanField(blank=True, db_column='IsAcknowledged', null=True)),
                ('transactiondate', models.DateTimeField(blank=True, db_column='TransactionDate', null=True)),
                ('clientmachine', models.CharField(blank=True, db_column='ClientMachine', max_length=40, null=True)),
                ('recorddatetime', models.DateTimeField(blank=True, db_column='RecordDateTime', null=True)),
            ],
            options={
                'db_table': 'ItemAdjustments',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Items',
            fields=[
                ('visitno', models.OneToOneField(db_column='VisitNo', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='clinicMas.visits')),
                ('itemcode', models.CharField(db_column='ItemCode', max_length=20)),
                ('itemname', models.CharField(db_column='ItemName', max_length=800)),
                ('invoiceno', models.CharField(blank=True, db_column='InvoiceNo', max_length=20, null=True)),
                ('unitmeasure', models.CharField(blank=True, db_column='UnitMeasure', max_length=100, null=True)),
                ('quantity', models.IntegerField(blank=True, db_column='Quantity', null=True)),
                ('unitcost', models.DecimalField(blank=True, db_column='UnitCost', decimal_places=4, max_digits=19, null=True)),
                ('unitprice', models.DecimalField(blank=True, db_column='UnitPrice', decimal_places=4, max_digits=19, null=True)),
                ('vatvalue', models.DecimalField(blank=True, db_column='VATValue', decimal_places=4, max_digits=19, null=True)),
                ('itemdetails', models.CharField(blank=True, db_column='ItemDetails', max_length=800, null=True)),
                ('lastupdate', models.DateTimeField(blank=True, db_column='LastUpdate', null=True)),
                ('originalquantity', models.IntegerField(blank=True, db_column='OriginalQuantity', null=True)),
                ('originalprice', models.DecimalField(blank=True, db_column='OriginalPrice', decimal_places=4, max_digits=19, null=True)),
                ('conclusiondate', models.DateTimeField(blank=True, db_column='ConclusionDate', null=True)),
                ('paydate', models.DateTimeField(blank=True, db_column='PayDate', null=True)),
                ('clientmachine', models.CharField(blank=True, db_column='ClientMachine', max_length=40, null=True)),
                ('recorddatetime', models.DateTimeField(blank=True, db_column='RecordDateTime', null=True)),
                ('creatorclientmachine', models.CharField(blank=True, db_column='CreatorClientMachine', max_length=40, null=True)),
                ('returnquantity', models.IntegerField(blank=True, db_column='ReturnQuantity', null=True)),
                ('returnamount', models.DecimalField(blank=True, db_column='ReturnAmount', decimal_places=4, max_digits=19, null=True)),
                ('adjustmentcount', models.IntegerField(blank=True, db_column='AdjustmentCount', null=True)),
                ('discount', models.DecimalField(blank=True, db_column='Discount', decimal_places=4, max_digits=19, null=True)),
                ('isverified', models.BooleanField(blank=True, db_column='IsVerified', null=True)),
            ],
            options={
                'db_table': 'Items',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Itemsincome',
            fields=[
                ('visitno', models.OneToOneField(db_column='VisitNo', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='clinicMas.visits')),
                ('itemcode', models.CharField(db_column='ItemCode', max_length=20)),
                ('itemname', models.CharField(blank=True, db_column='ItemName', max_length=500, null=True)),
                ('unitprice', models.DecimalField(blank=True, db_column='UnitPrice', decimal_places=4, max_digits=19, null=True)),
                ('copayamount', models.DecimalField(blank=True, db_column='CopayAmount', decimal_places=4, max_digits=19, null=True)),
                ('quantity', models.IntegerField(blank=True, db_column='Quantity', null=True)),
                ('vatvalue', models.DecimalField(blank=True, db_column='VATValue', decimal_places=4, max_digits=19, null=True)),
                ('clientmachine', models.CharField(blank=True, db_column='ClientMachine', max_length=40, null=True)),
                ('recorddatetime', models.DateTimeField(blank=True, db_column='RecordDateTime', null=True)),
            ],
            options={
                'db_table': 'ItemsIncome',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Labpossibleresults',
            fields=[
                ('testcode', models.OneToOneField(db_column='TestCode', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='clinicMas.labtests')),
                ('possibleresult', models.CharField(db_column='PossibleResult', max_length=200)),
            ],
            options={
                'db_table': 'LabPossibleResults',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Labrequestdetails',
            fields=[
                ('specimenno', models.OneToOneField(db_column='SpecimenNo', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='clinicMas.labrequests')),
                ('notes', models.CharField(blank=True, db_column='Notes', max_length=800, null=True)),
                ('loginid', models.CharField(blank=True, db_column='LoginID', max_length=20, null=True)),
                ('clientmachine', models.CharField(blank=True, db_column='ClientMachine', max_length=40, null=True)),
                ('recorddatetime', models.DateTimeField(blank=True, db_column='RecordDateTime', null=True)),
                ('userfullname', models.CharField(blank=True, db_column='UserFullName', max_length=41, null=True)),
            ],
            options={
                'db_table': 'LabRequestDetails',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Labrequestsipd',
            fields=[
                ('specimenno', models.OneToOneField(db_column='SpecimenNo', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='clinicMas.labrequests')),
            ],
            options={
                'db_table': 'LabRequestsIPD',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Labtestmeasurementprocedures',
            fields=[
                ('testcode', models.OneToOneField(db_column='TestCode', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='clinicMas.labtests')),
                ('isdefault', models.BooleanField(blank=True, db_column='IsDefault', null=True)),
                ('userfullname', models.CharField(blank=True, db_column='UserFullName', max_length=41, null=True)),
                ('clientmachine', models.CharField(blank=True, db_column='ClientMachine', max_length=40, null=True)),
                ('loginid', models.CharField(blank=True, db_column='LoginID', max_length=20, null=True)),
                ('recorddatetime', models.DateTimeField(blank=True, db_column='RecordDateTime', null=True)),
            ],
            options={
                'db_table': 'LabTestMeasurementProcedures',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Labtestsext',
            fields=[
                ('sortorder', models.SmallIntegerField(blank=True, db_column='SortOrder', null=True)),
                ('testcode', models.OneToOneField(db_column='TestCode', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='clinicMas.labtests')),
                ('subtestcode', models.CharField(db_column='SubTestCode', max_length=20)),
                ('subtestname', models.CharField(blank=True, db_column='SubTestName', max_length=100, null=True)),
                ('normalrange', models.TextField(blank=True, db_column='NormalRange', null=True)),
                ('hidden', models.BooleanField(blank=True, db_column='Hidden', null=True)),
            ],
            options={
                'db_table': 'LabTestsEXT',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Labtestsextpossibleresults',
            fields=[
                ('testcode', models.OneToOneField(db_column='TestCode', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='clinicMas.labtests')),
                ('subtestcode', models.CharField(db_column='SubTestCode', max_length=20)),
                ('possibleresults', models.CharField(db_column='PossibleResults', max_length=200)),
                ('clientmachine', models.CharField(blank=True, db_column='ClientMachine', max_length=41, null=True)),
                ('recorddatetime', models.DateTimeField(blank=True, db_column='RecordDateTime', null=True)),
            ],
            options={
                'db_table': 'LabTestsEXTPossibleResults',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Locations',
            fields=[
                ('locationid', models.OneToOneField(db_column='LocationID', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='clinicMas.lookupdata')),
                ('userfullname', models.CharField(blank=True, db_column='UserFullName', max_length=41, null=True)),
                ('clientmachine', models.CharField(blank=True, db_column='ClientMachine', max_length=41, null=True)),
                ('recorddatetime', models.DateTimeField(blank=True, db_column='RecordDateTime', null=True)),
            ],
            options={
                'db_table': 'Locations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Loginroles',
            fields=[
                ('loginid', models.OneToOneField(db_column='LoginID', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='clinicMas.logins')),
                ('assigndate', models.DateTimeField(blank=True, db_column='AssignDate', null=True)),
                ('roleexpires', models.BooleanField(blank=True, db_column='RoleExpires', null=True)),
                ('expirydate', models.DateTimeField(blank=True, db_column='ExpiryDate', null=True)),
            ],
            options={
                'db_table': 'LoginRoles',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Lookupdatamappings',
            fields=[
                ('dataid', models.OneToOneField(db_column='DataID', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='clinicMas.lookupdata')),
                ('agentdataid', models.CharField(db_column='AgentDataID', max_length=10)),
                ('objectname', models.CharField(blank=True, db_column='ObjectName', max_length=10, null=True)),
                ('recorddatetime', models.DateTimeField(blank=True, db_column='RecordDateTime', null=True)),
                ('clientmachine', models.CharField(blank=True, db_column='ClientMachine', max_length=40, null=True)),
            ],
            options={
                'db_table': 'LookupDataMappings',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Lowvision',
            fields=[
                ('visitno', models.OneToOneField(db_column='VisitNo', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='clinicMas.visits')),
                ('briefhistory', models.CharField(blank=True, db_column='BriefHistory', max_length=200, null=True)),
                ('profession', models.CharField(blank=True, db_column='Profession', max_length=200, null=True)),
                ('majoroculardiagnosisre', models.CharField(blank=True, db_column='MajorOcularDiagnosisRE', max_length=200, null=True)),
                ('majoroculardiagnosisle', models.CharField(blank=True, db_column='MajorOcularDiagnosisLE', max_length=200, null=True)),
                ('otheroculardiagnosisre', models.CharField(blank=True, db_column='OtherOcularDiagnosisRE', max_length=200, null=True)),
                ('otheroculardiagnosisle', models.CharField(blank=True, db_column='OtherOcularDiagnosisLE', max_length=200, null=True)),
                ('otherimpairments', models.CharField(blank=True, db_column='OtherImpairments', max_length=200, null=True)),
                ('existingtreatmentfarre', models.CharField(blank=True, db_column='ExistingTreatmentFarRE', max_length=200, null=True)),
                ('existingtreatmentfarle', models.CharField(blank=True, db_column='ExistingTreatmentFarLE', max_length=200, null=True)),
                ('existingtreatmentnearre', models.CharField(blank=True, db_column='ExistingTreatmentNearRE', max_length=200, null=True)),
                ('existingtreatmentnearle', models.CharField(blank=True, db_column='ExistingTreatmentNearLE', max_length=200, null=True)),
                ('newtreatmentfarre', models.CharField(blank=True, db_column='NewTreatmentFarRE', max_length=200, null=True)),
                ('newtreatmentfarle', models.CharField(blank=True, db_column='NewTreatmentFarLE', max_length=200, null=True)),
                ('newtreatmentnearre', models.CharField(blank=True, db_column='NewTreatmentNearRE', max_length=200, null=True)),
                ('newtreatmentnearle', models.CharField(blank=True, db_column='NewTreatmentNearLE', max_length=200, null=True)),
                ('existingvisualacuityfarleid', models.CharField(blank=True, db_column='ExistingVisualAcuityFarLEID', max_length=200, null=True)),
                ('existingvisualacuityfarreid', models.CharField(blank=True, db_column='ExistingVisualAcuityFarREID', max_length=200, null=True)),
                ('existingvisualacuitynearleid', models.CharField(blank=True, db_column='ExistingVisualAcuityNearLEID', max_length=200, null=True)),
                ('existingvisualacuitynearreid', models.CharField(blank=True, db_column='ExistingVisualAcuityNearREID', max_length=200, null=True)),
                ('newvisualacuityfarleid', models.CharField(blank=True, db_column='NewVisualAcuityFarLEID', max_length=200, null=True)),
                ('newvisualacuityfarreid', models.CharField(blank=True, db_column='NewVisualAcuityFarREID', max_length=200, null=True)),
                ('newvisualacuitynearleid', models.CharField(blank=True, db_column='NewVisualAcuityNearLEID', max_length=200, null=True)),
                ('newvisualacuitynearreid', models.CharField(blank=True, db_column='NewVisualAcuityNearREID', max_length=200, null=True)),
                ('existinglvdsnear', models.CharField(blank=True, db_column='ExistingLVDsNear', max_length=200, null=True)),
                ('existinglvdsfar', models.CharField(blank=True, db_column='ExistingLVDsFar', max_length=200, null=True)),
                ('problemencounteredlvdsnear', models.CharField(blank=True, db_column='ProblemEncounteredLVDsNear', max_length=200, null=True)),
                ('problemencounteredlvdsfar', models.CharField(blank=True, db_column='ProblemEncounteredLVDsFar', max_length=200, null=True)),
                ('colourvisiontestused', models.CharField(blank=True, db_column='ColourVisionTestUsed', max_length=200, null=True)),
                ('contrastsensitivitytestused', models.CharField(blank=True, db_column='ContrastSensitivityTestUsed', max_length=200, null=True)),
                ('visualfielddefecttestused', models.CharField(blank=True, db_column='VisualFieldDefectTestUsed', max_length=200, null=True)),
                ('lowvisiondevicesfar', models.CharField(blank=True, db_column='LowVisionDevicesFar', max_length=200, null=True)),
                ('lowvisiondevicesnear', models.CharField(blank=True, db_column='LowVisionDevicesNear', max_length=200, null=True)),
                ('nonopticalaids', models.CharField(blank=True, db_column='NonOpticalAids', max_length=200, null=True)),
                ('advice', models.CharField(blank=True, db_column='Advice', max_length=200, null=True)),
                ('clientmachine', models.CharField(blank=True, db_column='ClientMachine', max_length=40, null=True)),
                ('recorddatetime', models.DateTimeField(blank=True, db_column='RecordDateTime', null=True)),
            ],
            options={
                'db_table': 'LowVision',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Mappedcodes',
            fields=[
                ('accountno', models.OneToOneField(db_column='AccountNo', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='clinicMas.billcustomers')),
                ('itemcode', models.CharField(db_column='ItemCode', max_length=200)),
                ('customcode', models.CharField(blank=True, db_column='CustomCode', max_length=20, null=True)),
                ('loginid', models.CharField(db_column='LoginID', max_length=20)),
                ('clientmachine', models.CharField(blank=True, db_column='ClientMachine', max_length=40, null=True)),
                ('recorddatetime', models.DateTimeField(blank=True, db_column='RecordDateTime', null=True)),
            ],
            options={
                'db_table': 'MappedCodes',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Memberlimits',
            fields=[
                ('medicalcardno', models.OneToOneField(db_column='MedicalCardNo', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='clinicMas.billcustomermembers')),
                ('memberlimit', models.DecimalField(blank=True, db_column='MemberLimit', decimal_places=4, max_digits=19, null=True)),
            ],
            options={
                'db_table': 'MemberLimits',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Objectroles',
            fields=[
                ('objectname', models.OneToOneField(db_column='ObjectName', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='clinicMas.accessobjects')),
                ('write', models.BooleanField(blank=True, db_column='Write', null=True)),
                ('read', models.BooleanField(blank=True, db_column='Read', null=True)),
                ('update', models.BooleanField(blank=True, db_column='Update', null=True)),
                ('delete', models.BooleanField(blank=True, db_column='Delete', null=True)),
            ],
            options={
                'db_table': 'ObjectRoles',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Obstetric',
            fields=[
                ('patientno', models.OneToOneField(db_column='PatientNo', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='clinicMas.patients')),
                ('pregnancy', models.IntegerField(db_column='Pregnancy', unique=True)),
                ('yearpregnant', models.IntegerField(blank=True, db_column='YearPregnant', null=True)),
                ('birthweight', models.DecimalField(blank=True, db_column='BirthWeight', decimal_places=2, max_digits=4, null=True)),
                ('childimmunised', models.BooleanField(blank=True, db_column='ChildImmunised', null=True)),
                ('healthcondition', models.CharField(blank=True, db_column='HealthCondition', max_length=200, null=True)),
                ('clientmachine', models.CharField(blank=True, db_column='ClientMachine', max_length=40, null=True)),
                ('recorddatetime', models.DateTimeField(blank=True, db_column='RecordDateTime', null=True)),
            ],
            options={
                'db_table': 'Obstetric',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Opdstaffpaymentdetails',
            fields=[
                ('paymentvoucherno', models.OneToOneField(db_column='PaymentVoucherNo', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='clinicMas.staffpayments')),
                ('amount', models.DecimalField(db_column='Amount', decimal_places=4, max_digits=19)),
                ('approvalnotes', models.CharField(blank=True, db_column='ApprovalNotes', max_length=200, null=True)),
                ('clientmachine', models.CharField(db_column='ClientMachine', max_length=40)),
                ('recorddatetime', models.DateTimeField(db_column='RecordDateTime')),
            ],
            options={
                'db_table': 'OPDStaffPaymentDetails',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Optical',
            fields=[
                ('visitno', models.OneToOneField(db_column='VisitNo', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='clinicMas.visits')),
                ('rightsph', models.CharField(blank=True, db_column='RightSPH', max_length=200, null=True)),
                ('rightcyl', models.CharField(blank=True, db_column='RightCYL', max_length=200, null=True)),
                ('rightaxis', models.CharField(blank=True, db_column='RightAXIS', max_length=200, null=True)),
                ('rightprism', models.CharField(blank=True, db_column='RightPRISM', max_length=200, null=True)),
                ('rightadd', models.CharField(blank=True, db_column='RightADD', max_length=200, null=True)),
                ('leftsph', models.CharField(blank=True, db_column='LeftSPH', max_length=200, null=True)),
                ('leftcyl', models.CharField(blank=True, db_column='LeftCYL', max_length=200, null=True)),
                ('leftaxis', models.CharField(blank=True, db_column='LeftAXIS', max_length=200, null=True)),
                ('leftprism', models.CharField(blank=True, db_column='LeftPRISM', max_length=200, null=True)),
                ('leftadd', models.CharField(blank=True, db_column='LeftADD', max_length=200, null=True)),
                ('pd', models.SmallIntegerField(blank=True, db_column='Pd', null=True)),
                ('sg', models.SmallIntegerField(blank=True, db_column='Sg', null=True)),
                ('recorddatetime', models.DateTimeField(blank=True, db_column='RecordDateTime', null=True)),
            ],
            options={
                'db_table': 'Optical',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Orthoptics',
            fields=[
                ('visitno', models.OneToOneField(db_column='VisitNo', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='clinicMas.visits')),
                ('headposture', models.CharField(blank=True, db_column='HeadPosture', max_length=200, null=True)),
                ('fixation', models.CharField(blank=True, db_column='Fixation', max_length=200, null=True)),
                ('lefthirschberg', models.CharField(blank=True, db_column='LeftHirschberg', max_length=200, null=True)),
                ('righthirschberg', models.CharField(blank=True, db_column='RightHirschberg', max_length=200, null=True)),
                ('righteom', models.CharField(blank=True, db_column='RightEOM', max_length=200, null=True)),
                ('lefteom', models.CharField(blank=True, db_column='LeftEOM', max_length=200, null=True)),
                ('leftapctglasses', models.CharField(blank=True, db_column='LeftAPCTGlasses', max_length=200, null=True)),
                ('rightapctglasses', models.CharField(blank=True, db_column='RightAPCTGlasses', max_length=200, null=True)),
                ('leftapctwithoutglasses', models.CharField(blank=True, db_column='LeftAPCTWithOutGlasses', max_length=200, null=True)),
                ('rightapctwithoutglasses', models.CharField(blank=True, db_column='RightAPCTWithOutGlasses', max_length=200, null=True)),
                ('correspondence', models.CharField(blank=True, db_column='Correspondence', max_length=200, null=True)),
                ('prismadaptation', models.CharField(blank=True, db_column='PrismAdaptation', max_length=200, null=True)),
                ('fusionconvergence', models.CharField(blank=True, db_column='FusionConvergence', max_length=200, null=True)),
                ('fusiondivergence', models.CharField(blank=True, db_column='FusionDivergence', max_length=200, null=True)),
                ('fusionrange', models.CharField(blank=True, db_column='FusionRange', max_length=200, null=True)),
                ('nearpointofaccommodation', models.CharField(blank=True, db_column='NearPointOfAccommodation', max_length=200, null=True)),
                ('nearpointofconvergence', models.CharField(blank=True, db_column='NearPointOfConvergence', max_length=200, null=True)),
                ('orthopticsnotes', models.CharField(blank=True, db_column='OrthopticsNotes', max_length=400, null=True)),
                ('clientmachine', models.CharField(blank=True, db_column='ClientMachine', max_length=40, null=True)),
                ('recorddatetime', models.DateTimeField(blank=True, db_column='RecordDateTime', null=True)),
            ],
            options={
                'db_table': 'Orthoptics',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Packageconsumption',
            fields=[
                ('visitno', models.OneToOneField(db_column='VisitNo', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='clinicMas.visits')),
                ('itemcode', models.CharField(db_column='ItemCode', max_length=20)),
                ('packagevisitno', models.CharField(blank=True, db_column='PackageVisitNo', max_length=20, null=True)),
                ('quantity', models.IntegerField(blank=True, db_column='Quantity', null=True)),
                ('loginid', models.CharField(blank=True, db_column='LoginID', max_length=20, null=True)),
                ('clientmachine', models.CharField(blank=True, db_column='ClientMachine', max_length=41, null=True)),
                ('recorddatetime', models.DateTimeField(blank=True, db_column='RecordDateTime', null=True)),
            ],
            options={
                'db_table': 'PackageConsumption',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Packagesext',
            fields=[
                ('packageno', models.OneToOneField(db_column='PackageNo', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='clinicMas.packages')),
                ('itemcode', models.CharField(db_column='ItemCode', max_length=20)),
                ('quantity', models.IntegerField(blank=True, db_column='Quantity', null=True)),
                ('unitcost', models.DecimalField(blank=True, db_column='UnitCost', decimal_places=4, max_digits=19, null=True)),
                ('unitprice', models.DecimalField(blank=True, db_column='UnitPrice', decimal_places=4, max_digits=19, null=True)),
                ('clientmachine', models.CharField(blank=True, db_column='ClientMachine', max_length=41, null=True)),
                ('recorddatetime', models.DateTimeField(blank=True, db_column='RecordDateTime', null=True)),
            ],
            options={
                'db_table': 'PackagesEXT',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Packagevisits',
            fields=[
                ('visitno', models.OneToOneField(db_column='VisitNo', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='clinicMas.visits')),
                ('packagevisitno', models.CharField(blank=True, db_column='PackageVisitNo', max_length=20, null=True)),
            ],
            options={
                'db_table': 'PackageVisits',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Pathologyimages',
            fields=[
                ('visitno', models.OneToOneField(db_column='VisitNo', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='clinicMas.visits')),
                ('imagename', models.CharField(db_column='ImageName', max_length=20)),
                ('pathologyimage', models.BinaryField(blank=True, db_column='PathologyImage', null=True)),
            ],
            options={
                'db_table': 'PathologyImages',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Patientallergies',
            fields=[
                ('patientno', models.OneToOneField(db_column='PatientNo', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='clinicMas.patients')),
                ('reaction', models.CharField(blank=True, db_column='Reaction', max_length=200, null=True)),
            ],
            options={
                'db_table': 'PatientAllergies',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Patientconsent',
            fields=[
                ('patientno', models.OneToOneField(db_column='PatientNo', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='clinicMas.patients')),
                ('phoneno', models.CharField(blank=True, db_column='PhoneNo', max_length=30, null=True)),
                ('notes', models.CharField(blank=True, db_column='Notes', max_length=200, null=True)),
                ('fingerprintverified', models.BooleanField(blank=True, db_column='FingerprintVerified', null=True)),
                ('clientmachine', models.CharField(blank=True, db_column='ClientMachine', max_length=41, null=True)),
                ('recorddatetime', models.DateTimeField(blank=True, db_column='RecordDateTime', null=True)),
            ],
            options={
                'db_table': 'PatientConsent',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Patientrisks',
            fields=[
                ('visitno', models.OneToOneField(db_column='VisitNo', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='clinicMas.visits')),
                ('riskfactors', models.CharField(blank=True, db_column='RiskFactors', max_length=3000, null=True)),
                ('clientmachine', models.CharField(blank=True, db_column='ClientMachine', max_length=41, null=True)),
                ('recorddatetime', models.DateTimeField(blank=True, db_column='RecordDateTime', null=True)),
            ],
            options={
                'db_table': 'PatientRisks',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Patientsext',
            fields=[
                ('patientno', models.OneToOneField(db_column='PatientNo', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='clinicMas.patients')),
                ('alternateno', models.CharField(db_column='AlternateNo', max_length=20)),
                ('notes', models.CharField(blank=True, db_column='Notes', max_length=200, null=True)),
                ('alternatenoid', models.IntegerField(blank=True, db_column='AlternateNoID', null=True)),
                ('clientmachine', models.CharField(blank=True, db_column='ClientMachine', max_length=40, null=True)),
                ('recorddatetime', models.DateTimeField(blank=True, db_column='RecordDateTime', null=True)),
            ],
            options={
                'db_table': 'PatientsEXT',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Paymentdetails',
            fields=[
                ('receiptno', models.OneToOneField(db_column='ReceiptNo', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='clinicMas.payments')),
                ('quantity', models.IntegerField(blank=True, db_column='Quantity', null=True)),
                ('unitprice', models.DecimalField(blank=True, db_column='UnitPrice', decimal_places=4, max_digits=19, null=True)),
                ('discount', models.DecimalField(blank=True, db_column='Discount', decimal_places=4, max_digits=19, null=True)),
                ('amount', models.DecimalField(blank=True, db_column='Amount', decimal_places=4, max_digits=19, null=True)),
                ('syncstatus', models.BooleanField(blank=True, db_column='SyncStatus', null=True)),
                ('invoiceno', models.CharField(blank=True, db_column='InvoiceNo', max_length=20, null=True)),
            ],
            options={
                'db_table': 'PaymentDetails',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Paymentextrabillitems',
            fields=[
                ('receiptno', models.OneToOneField(db_column='ReceiptNo', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='clinicMas.payments')),
                ('quantity', models.IntegerField(blank=True, db_column='Quantity', null=True)),
                ('unitprice', models.DecimalField(blank=True, db_column='UnitPrice', decimal_places=4, max_digits=19, null=True)),
                ('discount', models.DecimalField(blank=True, db_column='Discount', decimal_places=4, max_digits=19, null=True)),
                ('amount', models.DecimalField(blank=True, db_column='Amount', decimal_places=4, max_digits=19, null=True)),
                ('syncstatus', models.BooleanField(blank=True, db_column='SyncStatus', null=True)),
                ('invoiceno', models.CharField(db_column='InvoiceNo', max_length=20)),
            ],
            options={
                'db_table': 'PaymentExtraBillItems',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Paymentvoucherdetails',
            fields=[
                ('voucherno', models.OneToOneField(db_column='VoucherNo', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='clinicMas.paymentvouchers')),
                ('billno', models.CharField(db_column='BillNo', max_length=20)),
                ('itemcode', models.CharField(db_column='ItemCode', max_length=20)),
                ('quantity', models.IntegerField(blank=True, db_column='Quantity', null=True)),
                ('unitprice', models.DecimalField(blank=True, db_column='UnitPrice', decimal_places=4, max_digits=19, null=True)),
                ('discount', models.DecimalField(blank=True, db_column='Discount', decimal_places=4, max_digits=19, null=True)),
                ('amount', models.DecimalField(blank=True, db_column='Amount', decimal_places=4, max_digits=19, null=True)),
                ('clientmachine', models.CharField(blank=True, db_column='ClientMachine', max_length=41, null=True)),
                ('recorddatetime', models.DateTimeField(blank=True, db_column='RecordDateTime', null=True)),
            ],
            options={
                'db_table': 'PaymentVoucherDetails',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Pelvicexamination',
            fields=[
                ('visitno', models.OneToOneField(db_column='VisitNo', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='clinicMas.visits')),
                ('diagonalconjugate', models.IntegerField(blank=True, db_column='DiagonalConjugate', null=True)),
                ('sacralcurve', models.IntegerField(blank=True, db_column='SacralCurve', null=True)),
                ('ischialspine', models.IntegerField(blank=True, db_column='IschialSpine', null=True)),
                ('subpublicangle', models.IntegerField(blank=True, db_column='SubPublicAngle', null=True)),
                ('ischialtuberosities', models.IntegerField(blank=True, db_column='IschialTuberosities', null=True)),
                ('riskfactors', models.CharField(blank=True, db_column='RiskFactors', max_length=2000, null=True)),
                ('recommendations', models.CharField(blank=True, db_column='Recommendations', max_length=2000, null=True)),
                ('clientmachine', models.CharField(blank=True, db_column='ClientMachine', max_length=40, null=True)),
                ('recorddatetime', models.DateTimeField(blank=True, db_column='RecordDateTime', null=True)),
            ],
            options={
                'db_table': 'PelvicExamination',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Physiodiagnosis',
            fields=[
                ('visitno', models.OneToOneField(db_column='VisitNo', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='clinicMas.visits')),
                ('notes', models.CharField(blank=True, db_column='Notes', max_length=200, null=True)),
                ('clientmachine', models.CharField(blank=True, db_column='ClientMachine', max_length=40, null=True)),
                ('recorddatetime', models.DateTimeField(blank=True, db_column='RecordDateTime', null=True)),
            ],
            options={
                'db_table': 'PhysioDiagnosis',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Priorartdetails',
            fields=[
                ('patientno', models.OneToOneField(db_column='PatientNo', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='clinicMas.patients')),
                ('artdate', models.DateTimeField(blank=True, db_column='ARTDate', null=True)),
                ('artwhere', models.CharField(blank=True, db_column='ARTWhere', max_length=41, null=True)),
            ],
            options={
                'db_table': 'PriorARTDetails',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Purchaseorderdetails',
            fields=[
                ('purchaseorderno', models.OneToOneField(db_column='PurchaseOrderNo', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='clinicMas.purchaseorders')),
                ('itemcode', models.CharField(db_column='ItemCode', max_length=20)),
                ('itemname', models.CharField(db_column='ItemName', max_length=800)),
                ('unitmeasure', models.CharField(blank=True, db_column='UnitMeasure', max_length=100, null=True)),
                ('itemgroup', models.CharField(blank=True, db_column='ItemGroup', max_length=100, null=True)),
                ('packsize', models.IntegerField(blank=True, db_column='PackSize', null=True)),
                ('quantity', models.IntegerField(blank=True, db_column='Quantity', null=True)),
                ('rate', models.DecimalField(blank=True, db_column='Rate', decimal_places=4, max_digits=19, null=True)),
                ('amount', models.DecimalField(blank=True, db_column='Amount', decimal_places=4, max_digits=19, null=True)),
                ('vatvalue', models.DecimalField(blank=True, db_column='VATValue', decimal_places=4, max_digits=19, null=True)),
                ('notes', models.CharField(blank=True, db_column='Notes', max_length=200, null=True)),
                ('clientmachine', models.CharField(blank=True, db_column='ClientMachine', max_length=40, null=True)),
                ('recorddatetime', models.DateTimeField(blank=True, db_column='RecordDateTime', null=True)),
            ],
            options={
                'db_table': 'PurchaseOrderDetails',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Queuedmessages',
            fields=[
                ('visitno', models.OneToOneField(db_column='VisitNo', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='clinicMas.visits')),
                ('roomnameid', models.CharField(blank=True, db_column='RoomNameID', max_length=200, null=True)),
                ('tokenno', models.CharField(blank=True, db_column='TokenNo', max_length=20, null=True)),
                ('readcount', models.IntegerField(blank=True, db_column='ReadCount', null=True)),
                ('clientmachine', models.CharField(blank=True, db_column='ClientMachine', max_length=40, null=True)),
                ('recorddatetime', models.DateTimeField(blank=True, db_column='RecordDateTime', null=True)),
            ],
            options={
                'db_table': 'QueuedMessages',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Queues',
            fields=[
                ('tokenid', models.IntegerField(db_column='TokenID')),
                ('visitno', models.OneToOneField(db_column='VisitNo', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='clinicMas.visits')),
                ('tokenno', models.CharField(blank=True, db_column='TokenNo', max_length=20, null=True)),
                ('queuestatus', models.BooleanField(blank=True, db_column='QueueStatus', null=True)),
                ('clientmachine', models.CharField(blank=True, db_column='ClientMachine', max_length=40, null=True)),
                ('recorddatetime', models.DateTimeField(blank=True, db_column='RecordDateTime', null=True)),
            ],
            options={
                'db_table': 'Queues',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Quotationdetails',
            fields=[
                ('quotationno', models.OneToOneField(db_column='QuotationNo', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='clinicMas.quotations')),
                ('itemcode', models.CharField(db_column='ItemCode', max_length=20)),
                ('itemname', models.CharField(db_column='ItemName', max_length=800)),
                ('unitmeasure', models.CharField(blank=True, db_column='UnitMeasure', max_length=100, null=True)),
                ('quantity', models.IntegerField(blank=True, db_column='Quantity', null=True)),
                ('unitprice', models.DecimalField(blank=True, db_column='UnitPrice', decimal_places=4, max_digits=19, null=True)),
                ('discount', models.DecimalField(blank=True, db_column='Discount', decimal_places=4, max_digits=19, null=True)),
                ('amount', models.DecimalField(blank=True, db_column='Amount', decimal_places=4, max_digits=19, null=True)),
                ('clientmachine', models.CharField(blank=True, db_column='ClientMachine', max_length=40, null=True)),
                ('recorddatetime', models.DateTimeField(blank=True, db_column='RecordDateTime', null=True)),
            ],
            options={
                'db_table': 'QuotationDetails',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Receiptreversals',
            fields=[
                ('refundno', models.OneToOneField(db_column='RefundNo', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='clinicMas.refunds')),
                ('notes', models.CharField(blank=True, db_column='Notes', max_length=200, null=True)),
                ('clientmachine', models.CharField(blank=True, db_column='ClientMachine', max_length=41, null=True)),
                ('recorddatetime', models.DateTimeField(blank=True, db_column='RecordDateTime', null=True)),
            ],
            options={
                'db_table': 'ReceiptReversals',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Referrals',
            fields=[
                ('visitno', models.OneToOneField(db_column='VisitNo', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='clinicMas.visits')),
                ('referraldate', models.DateTimeField(blank=True, db_column='ReferralDate', null=True)),
                ('referralnotes', models.CharField(blank=True, db_column='ReferralNotes', max_length=4000, null=True)),
                ('recorddatetime', models.DateTimeField(blank=True, db_column='RecordDateTime', null=True)),
            ],
            options={
                'db_table': 'Referrals',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Refraction',
            fields=[
                ('visitno', models.OneToOneField(db_column='VisitNo', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='clinicMas.visits')),
                ('rightmrsph', models.CharField(blank=True, db_column='RightMRSPH', max_length=200, null=True)),
                ('leftmrsph', models.CharField(blank=True, db_column='LeftMRSPH', max_length=200, null=True)),
                ('rightmrcyl', models.CharField(blank=True, db_column='RightMRCYL', max_length=200, null=True)),
                ('leftmrcyl', models.CharField(blank=True, db_column='LeftMRCYL', max_length=200, null=True)),
                ('rightmraxis', models.CharField(blank=True, db_column='RightMRAXIS', max_length=200, null=True)),
                ('leftmraxis', models.CharField(blank=True, db_column='LeftMRAXIS', max_length=200, null=True)),
                ('rightcrsph', models.CharField(blank=True, db_column='RightCRSPH', max_length=200, null=True)),
                ('leftcrsph', models.CharField(blank=True, db_column='LeftCRSPH', max_length=200, null=True)),
                ('rightcrcyl', models.CharField(blank=True, db_column='RightCRCYL', max_length=200, null=True)),
                ('leftcrcyl', models.CharField(blank=True, db_column='LeftCRCYL', max_length=200, null=True)),
                ('rightcraxis', models.CharField(blank=True, db_column='RightCRAXIS', max_length=200, null=True)),
                ('leftcraxis', models.CharField(blank=True, db_column='LeftCRAXIS', max_length=200, null=True)),
                ('rightpcrsph', models.CharField(blank=True, db_column='RightPCRSPH', max_length=200, null=True)),
                ('leftpcrsph', models.CharField(blank=True, db_column='LeftPCRSPH', max_length=200, null=True)),
                ('rightpcrcyl', models.CharField(blank=True, db_column='RightPCRCYL', max_length=200, null=True)),
                ('leftpcrcyl', models.CharField(blank=True, db_column='LeftPCRCYL', max_length=200, null=True)),
                ('rightpcraxis', models.CharField(blank=True, db_column='RightPCRAXIS', max_length=200, null=True)),
                ('leftpcrraxis', models.CharField(blank=True, db_column='LeftPCRRAXIS', max_length=200, null=True)),
                ('pd', models.CharField(blank=True, db_column='PD', max_length=200, null=True)),
                ('segmentheights', models.CharField(blank=True, db_column='SegmentHeights', max_length=200, null=True)),
                ('clientmachine', models.CharField(blank=True, db_column='ClientMachine', max_length=40, null=True)),
                ('recorddatetime', models.DateTimeField(blank=True, db_column='RecordDateTime', null=True)),
            ],
            options={
                'db_table': 'Refraction',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Refundapprovals',
            fields=[
                ('refundrequestno', models.OneToOneField(db_column='RefundRequestNo', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='clinicMas.refundrequests')),
                ('notes', models.CharField(blank=True, db_column='Notes', max_length=800, null=True)),
                ('attendingpersonel', models.CharField(blank=True, db_column='AttendingPersonel', max_length=41, null=True)),
                ('clientmachine', models.CharField(blank=True, db_column='ClientMachine', max_length=40, null=True)),
                ('recorddatetime', models.DateTimeField(blank=True, db_column='RecordDateTime', null=True)),
            ],
            options={
                'db_table': 'RefundApprovals',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Refunddetails',
            fields=[
                ('refundno', models.OneToOneField(db_column='RefundNo', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='clinicMas.refunds')),
                ('visitno', models.CharField(db_column='VisitNo', max_length=20)),
                ('receiptno', models.CharField(db_column='ReceiptNo', max_length=20)),
                ('itemcode', models.CharField(db_column='ItemCode', max_length=20)),
                ('quantity', models.IntegerField(blank=True, db_column='Quantity', null=True)),
                ('amount', models.DecimalField(blank=True, db_column='Amount', decimal_places=4, max_digits=19, null=True)),
                ('clientmachine', models.CharField(blank=True, db_column='ClientMachine', max_length=40, null=True)),
                ('recorddatetime', models.DateTimeField(blank=True, db_column='RecordDateTime', null=True)),
            ],
            options={
                'db_table': 'RefundDetails',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Refundextrabillitems',
            fields=[
                ('refundno', models.OneToOneField(db_column='RefundNo', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='clinicMas.refunds')),
                ('quantity', models.IntegerField(blank=True, db_column='Quantity', null=True)),
                ('amount', models.DecimalField(blank=True, db_column='Amount', decimal_places=4, max_digits=19, null=True)),
                ('clientmachine', models.CharField(blank=True, db_column='ClientMachine', max_length=40, null=True)),
                ('recorddatetime', models.DateTimeField(blank=True, db_column='RecordDateTime', null=True)),
            ],
            options={
                'db_table': 'RefundExtraBillItems',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Refundrejects',
            fields=[
                ('refundrequestno', models.OneToOneField(db_column='RefundRequestNo', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='clinicMas.refundrequests')),
                ('rejectiondate', models.DateTimeField(blank=True, db_column='RejectionDate', null=True)),
                ('notes', models.CharField(blank=True, db_column='Notes', max_length=200, null=True)),
                ('clientmachine', models.CharField(blank=True, db_column='ClientMachine', max_length=41, null=True)),
                ('recorddatetime', models.DateTimeField(blank=True, db_column='RecordDateTime', null=True)),
            ],
            options={
                'db_table': 'RefundRejects',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Refundrequestdetails',
            fields=[
                ('refundrequestno', models.OneToOneField(db_column='RefundRequestNo', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='clinicMas.refundrequests')),
                ('visitno', models.CharField(db_column='VisitNo', max_length=20)),
                ('receiptno', models.CharField(db_column='ReceiptNo', max_length=20)),
                ('itemcode', models.CharField(db_column='ItemCode', max_length=20)),
                ('quantity', models.IntegerField(blank=True, db_column='Quantity', null=True)),
                ('amount', models.DecimalField(blank=True, db_column='Amount', decimal_places=4, max_digits=19, null=True)),
                ('newprice', models.DecimalField(blank=True, db_column='NewPrice', decimal_places=4, max_digits=19, null=True)),
                ('clientmachine', models.CharField(blank=True, db_column='ClientMachine', max_length=40, null=True)),
                ('recorddatetime', models.DateTimeField(blank=True, db_column='RecordDateTime', null=True)),
            ],
            options={
                'db_table': 'RefundRequestDetails',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Refundrequestextrabillitems',
            fields=[
                ('refundrequestno', models.OneToOneField(db_column='RefundRequestNo', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='clinicMas.refundrequests')),
                ('extrabillno', models.CharField(db_column='ExtraBillNo', max_length=20)),
                ('receiptno', models.CharField(db_column='ReceiptNo', max_length=20)),
                ('itemcode', models.CharField(db_column='ItemCode', max_length=20)),
                ('quantity', models.IntegerField(blank=True, db_column='Quantity', null=True)),
                ('amount', models.DecimalField(blank=True, db_column='Amount', decimal_places=4, max_digits=19, null=True)),
                ('newprice', models.DecimalField(blank=True, db_column='NewPrice', decimal_places=4, max_digits=19, null=True)),
                ('clientmachine', models.CharField(blank=True, db_column='ClientMachine', max_length=40, null=True)),
                ('recorddatetime', models.DateTimeField(blank=True, db_column='RecordDateTime', null=True)),
            ],
            options={
                'db_table': 'RefundRequestExtraBillItems',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Researchpatientsenrollment',
            fields=[
                ('visitno', models.OneToOneField(db_column='VisitNo', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='clinicMas.visits')),
                ('researchstartdate', models.DateTimeField(blank=True, db_column='ResearchStartDate', null=True)),
                ('notes', models.CharField(blank=True, db_column='Notes', max_length=1000, null=True)),
                ('clientmachine', models.CharField(blank=True, db_column='ClientMachine', max_length=41, null=True)),
                ('recorddatetime', models.DateTimeField(blank=True, db_column='RecordDateTime', null=True)),
            ],
            options={
                'db_table': 'ResearchPatientsEnrollment',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Restrictedkeys',
            fields=[
                ('objectname', models.OneToOneField(db_column='ObjectName', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='clinicMas.accessobjects')),
                ('columnname', models.CharField(db_column='ColumnName', max_length=60)),
                ('columncaption', models.CharField(blank=True, db_column='ColumnCaption', max_length=70, null=True)),
            ],
            options={
                'db_table': 'RestrictedKeys',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Searchcolumnsext',
            fields=[
                ('columnname', models.OneToOneField(db_column='ColumnName', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, related_name='searchcolumnsext_columnname_set', serialize=False, to='clinicMas.searchcolumns')),
                ('maxlength', models.SmallIntegerField(blank=True, db_column='MaxLength', null=True)),
                ('isprimarykey', models.BooleanField(blank=True, db_column='IsPrimaryKey', null=True)),
                ('searchcriterionlocked', models.BooleanField(blank=True, db_column='SearchCriterionLocked', null=True)),
                ('incolumns', models.BooleanField(blank=True, db_column='InColumns', null=True)),
            ],
            options={
                'db_table': 'SearchColumnsEXT',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Serviceinvoicedetails',
            fields=[
                ('serviceinvoiceno', models.OneToOneField(db_column='ServiceInvoiceNo', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='clinicMas.serviceinvoices')),
                ('itemcode', models.CharField(db_column='ItemCode', max_length=20)),
                ('itemname', models.CharField(db_column='ItemName', max_length=800)),
                ('unitmeasure', models.CharField(blank=True, db_column='UnitMeasure', max_length=100, null=True)),
                ('itemgroup', models.CharField(blank=True, db_column='ItemGroup', max_length=100, null=True)),
                ('packsize', models.IntegerField(blank=True, db_column='PackSize', null=True)),
                ('quantity', models.IntegerField(blank=True, db_column='Quantity', null=True)),
                ('rate', models.DecimalField(blank=True, db_column='Rate', decimal_places=4, max_digits=19, null=True)),
                ('amount', models.DecimalField(blank=True, db_column='Amount', decimal_places=4, max_digits=19, null=True)),
                ('vatvalue', models.DecimalField(blank=True, db_column='VATValue', decimal_places=4, max_digits=19, null=True)),
                ('notes', models.CharField(blank=True, db_column='Notes', max_length=200, null=True)),
                ('clientmachine', models.CharField(blank=True, db_column='ClientMachine', max_length=40, null=True)),
                ('recorddatetime', models.DateTimeField(blank=True, db_column='RecordDateTime', null=True)),
            ],
            options={
                'db_table': 'ServiceInvoiceDetails',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Servicesdrspecialtyfee',
            fields=[
                ('servicecode', models.OneToOneField(db_column='ServiceCode', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='clinicMas.services')),
                ('specialtyfee', models.DecimalField(blank=True, db_column='SpecialtyFee', decimal_places=4, max_digits=19, null=True)),
                ('clientmachine', models.CharField(blank=True, db_column='ClientMachine', max_length=40, null=True)),
                ('recorddatetime', models.DateTimeField(blank=True, db_column='RecordDateTime', null=True)),
            ],
            options={
                'db_table': 'ServicesDrSpecialtyFee',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Servicesspecialtybillcustomfee',
            fields=[
                ('servicecode', models.OneToOneField(db_column='ServiceCode', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='clinicMas.services')),
                ('customfee', models.DecimalField(blank=True, db_column='CustomFee', decimal_places=4, max_digits=19, null=True)),
                ('clientmachine', models.CharField(blank=True, db_column='ClientMachine', max_length=40, null=True)),
                ('recorddatetime', models.DateTimeField(blank=True, db_column='RecordDateTime', null=True)),
            ],
            options={
                'db_table': 'ServicesSpecialtyBillCustomFee',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Servicesspecialtycustomcode',
            fields=[
                ('servicecode', models.OneToOneField(db_column='ServiceCode', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='clinicMas.services')),
                ('customcode', models.CharField(blank=True, db_column='CustomCode', max_length=20, null=True)),
                ('clientmachine', models.CharField(blank=True, db_column='ClientMachine', max_length=40, null=True)),
                ('recorddatetime', models.DateTimeField(blank=True, db_column='RecordDateTime', null=True)),
            ],
            options={
                'db_table': 'ServicesSpecialtyCustomCode',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Servicesstaffbillcustomfee',
            fields=[
                ('servicecode', models.OneToOneField(db_column='ServiceCode', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='clinicMas.services')),
                ('customfee', models.DecimalField(blank=True, db_column='CustomFee', decimal_places=4, max_digits=19, null=True)),
                ('clientmachine', models.CharField(blank=True, db_column='ClientMachine', max_length=40, null=True)),
                ('recorddatetime', models.DateTimeField(blank=True, db_column='RecordDateTime', null=True)),
            ],
            options={
                'db_table': 'ServicesStaffBillCustomFee',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Servicesstafffee',
            fields=[
                ('servicecode', models.OneToOneField(db_column='ServiceCode', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='clinicMas.services')),
                ('stafffee', models.DecimalField(blank=True, db_column='StaffFee', decimal_places=4, max_digits=19, null=True)),
                ('clientmachine', models.CharField(blank=True, db_column='ClientMachine', max_length=40, null=True)),
                ('recorddatetime', models.DateTimeField(blank=True, db_column='RecordDateTime', null=True)),
            ],
            options={
                'db_table': 'ServicesStaffFee',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Smartcardauthorisations',
            fields=[
                ('patientno', models.OneToOneField(db_column='PatientNo', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='clinicMas.patients')),
                ('billno', models.CharField(db_column='BillNo', max_length=20)),
                ('tovisitdate', models.DateTimeField(db_column='ToVisitDate')),
                ('medicalcardno', models.CharField(blank=True, db_column='MedicalCardNo', max_length=20, null=True)),
                ('authorisedby', models.CharField(blank=True, db_column='AuthorisedBy', max_length=41, null=True)),
                ('claimreferenceno', models.CharField(blank=True, db_column='ClaimReferenceNo', max_length=30, null=True)),
                ('clientmachine', models.CharField(blank=True, db_column='ClientMachine', max_length=40, null=True)),
                ('recorddatetime', models.DateTimeField(blank=True, db_column='RecordDateTime', null=True)),
            ],
            options={
                'db_table': 'SmartCardAuthorisations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Specialedits',
            fields=[
                ('objectname', models.OneToOneField(db_column='ObjectName', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='clinicMas.accessobjects')),
                ('keycolumnname', models.CharField(db_column='KeyColumnName', max_length=100)),
                ('keycolumncaption', models.CharField(db_column='KeyColumnCaption', max_length=100)),
            ],
            options={
                'db_table': 'SpecialEdits',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Stafflocations',
            fields=[
                ('staffloginid', models.OneToOneField(db_column='StaffLoginID', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='clinicMas.logins')),
                ('startdate', models.DateTimeField(db_column='StartDate')),
                ('notes', models.CharField(blank=True, db_column='Notes', max_length=200, null=True)),
                ('clientmachine', models.CharField(blank=True, db_column='ClientMachine', max_length=40, null=True)),
                ('recorddatetime', models.DateTimeField(blank=True, db_column='RecordDateTime', null=True)),
            ],
            options={
                'db_table': 'StaffLocations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Staffpaymentsext',
            fields=[
                ('paymentvoucherno', models.OneToOneField(db_column='PaymentVoucherNo', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='clinicMas.staffpayments')),
                ('approvaldatetime', models.DateTimeField(blank=True, db_column='ApprovalDateTime', null=True)),
                ('documentno', models.CharField(db_column='DocumentNo', max_length=20)),
                ('exchangerate', models.DecimalField(db_column='ExchangeRate', decimal_places=4, max_digits=19)),
                ('amount', models.DecimalField(db_column='Amount', decimal_places=4, max_digits=19)),
                ('amountwords', models.CharField(db_column='AmountWords', max_length=400)),
                ('clientmachine', models.CharField(blank=True, db_column='ClientMachine', max_length=40, null=True)),
                ('recorddatetime', models.DateTimeField(blank=True, db_column='RecordDateTime', null=True)),
            ],
            options={
                'db_table': 'StaffPaymentsEXT',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Symptomshistory',
            fields=[
                ('visitno', models.OneToOneField(db_column='VisitNo', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='clinicMas.visits')),
                ('otherhistory', models.CharField(blank=True, db_column='OtherHistory', max_length=2000, null=True)),
                ('pastmedicalhistory', models.CharField(blank=True, db_column='PastMedicalHistory', max_length=2000, null=True)),
                ('feedinghistory', models.CharField(blank=True, db_column='FeedingHistory', max_length=2000, null=True)),
                ('muac', models.IntegerField(blank=True, db_column='MUAC', null=True)),
                ('height', models.IntegerField(blank=True, db_column='Height', null=True)),
                ('bloodtransfusionstatereasons', models.CharField(blank=True, db_column='BloodTransfusionStateReasons', max_length=200, null=True)),
                ('ifyesvolume', models.IntegerField(blank=True, db_column='IfYesVolume', null=True)),
                ('transfusiondate', models.DateTimeField(blank=True, db_column='TransfusionDate', null=True)),
                ('bloodunits', models.IntegerField(blank=True, db_column='BloodUnits', null=True)),
                ('bloodtransfusionnotgivenstatereasons', models.CharField(blank=True, db_column='BloodTransfusionNotGivenStateReasons', max_length=200, null=True)),
                ('otherformsofsupportivecare', models.CharField(blank=True, db_column='OtherFormsOfSupportiveCare', max_length=200, null=True)),
                ('reasonsfordiagnosisofseverecomplicatedmalaria', models.CharField(blank=True, db_column='ReasonsForDiagnosisOfSevereComplicatedMalaria', max_length=200, null=True)),
                ('reasonsforadmissionwithpositivemalariatest', models.CharField(blank=True, db_column='ReasonsForAdmissionWithPositiveMalariaTest', max_length=200, null=True)),
                ('clientmachine', models.CharField(blank=True, db_column='ClientMachine', max_length=40, null=True)),
                ('recorddatetime', models.DateTimeField(blank=True, db_column='RecordDateTime', null=True)),
            ],
            options={
                'db_table': 'SymptomsHistory',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Tbintensifiedcasefinding',
            fields=[
                ('visitno', models.OneToOneField(db_column='VisitNo', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='clinicMas.visits')),
                ('clientmachine', models.CharField(blank=True, db_column='ClientMachine', max_length=40, null=True)),
                ('recorddatetime', models.DateTimeField(blank=True, db_column='RecordDateTime', null=True)),
            ],
            options={
                'db_table': 'TBIntensifiedCaseFinding',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Theatreoperations',
            fields=[
                ('visitno', models.OneToOneField(db_column='VisitNo', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='clinicMas.visits')),
                ('operationdatetime', models.DateTimeField(blank=True, db_column='OperationDateTime', null=True)),
                ('othersurgeon', models.CharField(blank=True, db_column='OtherSurgeon', max_length=200, null=True)),
                ('otheranaesthetist', models.CharField(blank=True, db_column='OtherAnaesthetist', max_length=200, null=True)),
                ('othernurse', models.CharField(blank=True, db_column='OtherNurse', max_length=200, null=True)),
                ('anaesthesiatype', models.CharField(blank=True, db_column='AnaesthesiaType', max_length=200, null=True)),
                ('preoperativediagnosis', models.CharField(blank=True, db_column='PreoperativeDiagnosis', max_length=2000, null=True)),
                ('plannedprocedures', models.CharField(blank=True, db_column='PlannedProcedures', max_length=2000, null=True)),
                ('report', models.CharField(blank=True, db_column='Report', max_length=2000, null=True)),
                ('postoperativeinstructions', models.CharField(blank=True, db_column='PostoperativeInstructions', max_length=2000, null=True)),
                ('recorddatetime', models.DateTimeField(blank=True, db_column='RecordDateTime', null=True)),
            ],
            options={
                'db_table': 'TheatreOperations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Triage',
            fields=[
                ('visitno', models.OneToOneField(db_column='VisitNo', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='clinicMas.visits')),
                ('weight', models.DecimalField(blank=True, db_column='Weight', decimal_places=2, max_digits=5, null=True)),
                ('temperature', models.DecimalField(blank=True, db_column='Temperature', decimal_places=2, max_digits=5, null=True)),
                ('height', models.DecimalField(blank=True, db_column='Height', decimal_places=2, max_digits=5, null=True)),
                ('bloodpressure', models.CharField(blank=True, db_column='BloodPressure', max_length=10, null=True)),
                ('headcircum', models.DecimalField(blank=True, db_column='HeadCircum', decimal_places=2, max_digits=5, null=True)),
                ('bodysurfacearea', models.DecimalField(blank=True, db_column='BodySurfaceArea', decimal_places=2, max_digits=10, null=True)),
                ('respirationrate', models.SmallIntegerField(blank=True, db_column='RespirationRate', null=True)),
                ('oxygensaturation', models.DecimalField(blank=True, db_column='OxygenSaturation', decimal_places=2, max_digits=5, null=True)),
                ('heartrate', models.SmallIntegerField(blank=True, db_column='HeartRate', null=True)),
                ('notes', models.CharField(blank=True, db_column='Notes', max_length=2000, null=True)),
                ('muac', models.DecimalField(blank=True, db_column='MUAC', decimal_places=2, max_digits=5, null=True)),
                ('clientmachine', models.CharField(blank=True, db_column='ClientMachine', max_length=40, null=True)),
                ('recorddatetime', models.DateTimeField(blank=True, db_column='RecordDateTime', null=True)),
            ],
            options={
                'db_table': 'Triage',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Visionassessment',
            fields=[
                ('visitno', models.OneToOneField(db_column='VisitNo', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='clinicMas.visits')),
                ('entryorder', models.IntegerField(db_column='EntryOrder')),
                ('notes', models.CharField(blank=True, db_column='Notes', max_length=200, null=True)),
                ('clientmachine', models.CharField(blank=True, db_column='ClientMachine', max_length=40, null=True)),
                ('recorddatetime', models.DateTimeField(blank=True, db_column='RecordDateTime', null=True)),
            ],
            options={
                'db_table': 'VisionAssessment',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Visitfiles',
            fields=[
                ('visitno', models.OneToOneField(db_column='VisitNo', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='clinicMas.visits')),
                ('recorddatetime', models.DateTimeField(blank=True, db_column='RecordDateTime', null=True)),
            ],
            options={
                'db_table': 'VisitFiles',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Cardiologyreports',
            fields=[
                ('visitno', models.OneToOneField(db_column='VisitNo', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='clinicMas.items')),
                ('examdatetime', models.DateTimeField(blank=True, db_column='ExamDateTime', null=True)),
                ('indication', models.CharField(blank=True, db_column='Indication', max_length=4000, null=True)),
                ('report', models.CharField(blank=True, db_column='Report', max_length=4000, null=True)),
                ('conclusion', models.CharField(blank=True, db_column='Conclusion', max_length=4000, null=True)),
                ('clientmachine', models.CharField(blank=True, db_column='ClientMachine', max_length=40, null=True)),
                ('recorddatetime', models.DateTimeField(blank=True, db_column='RecordDateTime', null=True)),
            ],
            options={
                'db_table': 'CardiologyReports',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Dentalreports',
            fields=[
                ('visitno', models.OneToOneField(db_column='VisitNo', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='clinicMas.items')),
                ('reportdate', models.DateTimeField(blank=True, db_column='ReportDate', null=True)),
                ('report', models.CharField(blank=True, db_column='Report', max_length=2000, null=True)),
                ('recorddatetime', models.DateTimeField(blank=True, db_column='RecordDateTime', null=True)),
            ],
            options={
                'db_table': 'DentalReports',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Dispenseverification',
            fields=[
                ('visitno', models.OneToOneField(db_column='VisitNo', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='clinicMas.items')),
                ('verificationdatetime', models.DateTimeField(blank=True, db_column='VerificationDateTime', null=True)),
                ('served', models.BooleanField(blank=True, db_column='Served', null=True)),
                ('loginid', models.CharField(blank=True, db_column='LoginID', max_length=20, null=True)),
                ('userfullname', models.CharField(blank=True, db_column='UserFullName', max_length=41, null=True)),
                ('clientmachine', models.CharField(blank=True, db_column='ClientMachine', max_length=40, null=True)),
                ('recorddatetime', models.DateTimeField(blank=True, db_column='RecordDateTime', null=True)),
            ],
            options={
                'db_table': 'DispenseVerification',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Goodsreceivednotedetailbatches',
            fields=[
                ('grnno', models.OneToOneField(db_column='GRNNo', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='clinicMas.goodsreceivednotedetails')),
                ('batchno', models.CharField(db_column='BatchNo', max_length=20)),
                ('expirydate', models.DateTimeField(blank=True, db_column='ExpiryDate', null=True)),
                ('batchreceivedquantity', models.IntegerField(blank=True, db_column='BatchReceivedQuantity', null=True)),
                ('clientmachine', models.CharField(blank=True, db_column='ClientMachine', max_length=40, null=True)),
                ('recorddatetime', models.DateTimeField(blank=True, db_column='RecordDateTime', null=True)),
            ],
            options={
                'db_table': 'GoodsReceivedNoteDetailBatches',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Goodsreturnednotedetailsbatches',
            fields=[
                ('returnno', models.OneToOneField(db_column='ReturnNo', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='clinicMas.goodsreturnednotedetails')),
                ('batchno', models.CharField(db_column='BatchNo', max_length=20)),
                ('expirydate', models.DateTimeField(blank=True, db_column='ExpiryDate', null=True)),
                ('batchreturnquantity', models.IntegerField(blank=True, db_column='BatchReturnQuantity', null=True)),
                ('clientmachine', models.CharField(blank=True, db_column='ClientMachine', max_length=40, null=True)),
                ('recorddatetime', models.DateTimeField(blank=True, db_column='RecordDateTime', null=True)),
            ],
            options={
                'db_table': 'GoodsReturnedNoteDetailsBatches',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Insuranceexcludeditems',
            fields=[
                ('companyno', models.OneToOneField(db_column='CompanyNo', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='clinicMas.insuranceschemes')),
                ('itemcode', models.CharField(db_column='ItemCode', max_length=20)),
            ],
            options={
                'db_table': 'InsuranceExcludedItems',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Insuranceschemesitemcategorycopay',
            fields=[
                ('companyno', models.OneToOneField(db_column='CompanyNo', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='clinicMas.insuranceschemes')),
                ('copaypercent', models.DecimalField(db_column='CoPayPercent', decimal_places=2, max_digits=5)),
                ('userfullname', models.CharField(db_column='UserFullName', max_length=41)),
                ('clientmachine', models.CharField(db_column='ClientMachine', max_length=40)),
                ('recorddatetime', models.DateTimeField(db_column='RecordDateTime')),
            ],
            options={
                'db_table': 'InsuranceSchemesItemCategoryCopay',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Insuranceschemesvisittypecopay',
            fields=[
                ('companyno', models.OneToOneField(db_column='CompanyNo', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='clinicMas.insuranceschemes')),
                ('copaypercent', models.DecimalField(db_column='CoPayPercent', decimal_places=2, max_digits=5)),
                ('userfullname', models.CharField(db_column='UserFullName', max_length=41)),
                ('clientmachine', models.CharField(db_column='ClientMachine', max_length=40)),
                ('recorddatetime', models.DateTimeField(db_column='RecordDateTime')),
            ],
            options={
                'db_table': 'InsuranceSchemesVisitTypeCopay',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Intextrabillitems',
            fields=[
                ('extrabillno', models.OneToOneField(db_column='ExtraBillNo', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='clinicMas.extrabillitems')),
                ('syncstatus', models.BooleanField(blank=True, db_column='SyncStatus', null=True)),
                ('userid', models.CharField(blank=True, db_column='UserID', max_length=100, null=True)),
                ('clientmachine', models.CharField(blank=True, db_column='ClientMachine', max_length=41, null=True)),
                ('recorddatetime', models.DateTimeField(blank=True, db_column='RecordDateTime', null=True)),
            ],
            options={
                'db_table': 'INTExtraBillItems',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Inventorylocationbatches',
            fields=[
                ('locationid', models.OneToOneField(db_column='LocationID', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='clinicMas.inventorylocation')),
                ('batchno', models.CharField(db_column='BatchNo', max_length=20)),
                ('expirydate', models.DateTimeField(blank=True, db_column='ExpiryDate', null=True)),
                ('batchunitsathand', models.IntegerField(blank=True, db_column='BatchUnitsAtHand', null=True)),
                ('recorddatetime', models.DateTimeField(blank=True, db_column='RecordDateTime', null=True)),
            ],
            options={
                'db_table': 'InventoryLocationBatches',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Inventorytransferdetailbatches',
            fields=[
                ('transferno', models.OneToOneField(db_column='TransferNo', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='clinicMas.inventorytransferdetails')),
                ('packid', models.CharField(blank=True, db_column='PackID', max_length=10, null=True)),
                ('packsize', models.IntegerField(blank=True, db_column='PackSize', null=True)),
                ('batchno', models.CharField(db_column='BatchNo', max_length=20)),
                ('expirydate', models.DateTimeField(blank=True, db_column='ExpiryDate', null=True)),
                ('batchquantity', models.IntegerField(blank=True, db_column='BatchQuantity', null=True)),
                ('clientmachine', models.CharField(blank=True, db_column='ClientMachine', max_length=40, null=True)),
                ('recorddatetime', models.DateTimeField(blank=True, db_column='RecordDateTime', null=True)),
            ],
            options={
                'db_table': 'InventoryTransferDetailBatches',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Ipdcardiologyreports',
            fields=[
                ('roundno', models.OneToOneField(db_column='RoundNo', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='clinicMas.ipditems')),
                ('examdatetime', models.DateTimeField(blank=True, db_column='ExamDateTime', null=True)),
                ('indication', models.CharField(blank=True, db_column='Indication', max_length=4000, null=True)),
                ('report', models.CharField(blank=True, db_column='Report', max_length=4000, null=True)),
                ('conclusion', models.CharField(blank=True, db_column='Conclusion', max_length=4000, null=True)),
                ('clientmachine', models.CharField(blank=True, db_column='ClientMachine', max_length=40, null=True)),
                ('recorddatetime', models.DateTimeField(blank=True, db_column='RecordDateTime', null=True)),
            ],
            options={
                'db_table': 'IPDCardiologyReports',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Ipdclinicalfindingimages',
            fields=[
                ('roundno', models.OneToOneField(db_column='RoundNo', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='clinicMas.ipdclinicalfindings')),
                ('imagename', models.CharField(db_column='ImageName', max_length=40)),
                ('clinicalimage', models.BinaryField(blank=True, db_column='ClinicalImage', null=True)),
                ('userfullname', models.CharField(blank=True, db_column='UserFullName', max_length=41, null=True)),
                ('loginid', models.CharField(blank=True, db_column='LoginID', max_length=20, null=True)),
                ('clientmachine', models.CharField(blank=True, db_column='ClientMachine', max_length=41, null=True)),
                ('recorddatetime', models.DateTimeField(blank=True, db_column='RecordDateTime', null=True)),
            ],
            options={
                'db_table': 'IPDClinicalFindingImages',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Ipddentalreports',
            fields=[
                ('roundno', models.OneToOneField(db_column='RoundNo', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='clinicMas.ipditems')),
                ('reportdate', models.DateTimeField(blank=True, db_column='ReportDate', null=True)),
                ('report', models.CharField(blank=True, db_column='Report', max_length=2000, null=True)),
                ('recorddatetime', models.DateTimeField(blank=True, db_column='RecordDateTime', null=True)),
            ],
            options={
                'db_table': 'IPDDentalReports',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Ipditemsext',
            fields=[
                ('roundno', models.OneToOneField(db_column='RoundNo', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='clinicMas.ipditems')),
                ('dosage', models.CharField(blank=True, db_column='Dosage', max_length=100, null=True)),
                ('duration', models.IntegerField(blank=True, db_column='Duration', null=True)),
                ('drquantity', models.IntegerField(blank=True, db_column='DrQuantity', null=True)),
                ('issuedatetime', models.DateTimeField(blank=True, db_column='IssueDateTime', null=True)),
                ('clientmachine', models.CharField(blank=True, db_column='ClientMachine', max_length=40, null=True)),
            ],
            options={
                'db_table': 'IPDItemsEXT',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Ipdpathologyreports',
            fields=[
                ('roundno', models.OneToOneField(db_column='RoundNo', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='clinicMas.ipditems')),
                ('examdatetime', models.DateTimeField(blank=True, db_column='ExamDateTime', null=True)),
                ('indication', models.CharField(blank=True, db_column='Indication', max_length=4000, null=True)),
                ('diagnosis', models.CharField(blank=True, db_column='Diagnosis', max_length=4000, null=True)),
                ('macroscopic', models.CharField(blank=True, db_column='Macroscopic', max_length=4000, null=True)),
                ('microscopic', models.CharField(blank=True, db_column='Microscopic', max_length=4000, null=True)),
                ('clientmachine', models.CharField(blank=True, db_column='ClientMachine', max_length=40, null=True)),
                ('recorddatetime', models.DateTimeField(blank=True, db_column='RecordDateTime', null=True)),
            ],
            options={
                'db_table': 'IPDPathologyReports',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Ipdradiologyreports',
            fields=[
                ('roundno', models.OneToOneField(db_column='RoundNo', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='clinicMas.ipditems')),
                ('examdatetime', models.DateTimeField(blank=True, db_column='ExamDateTime', null=True)),
                ('indication', models.CharField(blank=True, db_column='Indication', max_length=4000, null=True)),
                ('report', models.CharField(blank=True, db_column='Report', max_length=4000, null=True)),
                ('conclusion', models.CharField(blank=True, db_column='Conclusion', max_length=4000, null=True)),
                ('radiologist', models.CharField(blank=True, db_column='Radiologist', max_length=10, null=True)),
                ('recorddatetime', models.DateTimeField(blank=True, db_column='RecordDateTime', null=True)),
            ],
            options={
                'db_table': 'IPDRadiologyReports',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Itemsbalancedetails',
            fields=[
                ('visitno', models.OneToOneField(db_column='VisitNo', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='clinicMas.items')),
                ('itemname', models.CharField(blank=True, db_column='ItemName', max_length=800, null=True)),
                ('balance', models.IntegerField(blank=True, db_column='Balance', null=True)),
                ('nextvisitno', models.CharField(db_column='NextVisitNo', max_length=20)),
                ('clientmachine', models.CharField(blank=True, db_column='ClientMachine', max_length=40, null=True)),
                ('recorddatetime', models.DateTimeField(blank=True, db_column='RecordDateTime', null=True)),
            ],
            options={
                'db_table': 'ItemsBalanceDetails',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Itemscash',
            fields=[
                ('visitno', models.OneToOneField(db_column='VisitNo', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='clinicMas.items')),
                ('invoiceno', models.CharField(blank=True, db_column='InvoiceNo', max_length=20, null=True)),
                ('cashamount', models.DecimalField(blank=True, db_column='CashAmount', decimal_places=4, max_digits=19, null=True)),
                ('copaypercent', models.DecimalField(blank=True, db_column='CoPayPercent', decimal_places=2, max_digits=5, null=True)),
            ],
            options={
                'db_table': 'ItemsCASH',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Itemsext',
            fields=[
                ('visitno', models.OneToOneField(db_column='VisitNo', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='clinicMas.items')),
                ('dosage', models.CharField(blank=True, db_column='Dosage', max_length=100, null=True)),
                ('duration', models.IntegerField(blank=True, db_column='Duration', null=True)),
                ('drquantity', models.IntegerField(blank=True, db_column='DrQuantity', null=True)),
                ('issuedatetime', models.DateTimeField(blank=True, db_column='IssueDateTime', null=True)),
                ('clientmachine', models.CharField(blank=True, db_column='ClientMachine', max_length=40, null=True)),
            ],
            options={
                'db_table': 'ItemsEXT',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Labresults',
            fields=[
                ('specimenno', models.OneToOneField(db_column='SpecimenNo', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='clinicMas.labrequestdetails')),
                ('testdatetime', models.DateTimeField(blank=True, db_column='TestDateTime', null=True)),
                ('result', models.CharField(blank=True, db_column='Result', max_length=200, null=True)),
                ('unitmeasure', models.CharField(blank=True, db_column='UnitMeasure', max_length=100, null=True)),
                ('normalrange', models.CharField(blank=True, db_column='NormalRange', max_length=800, null=True)),
                ('report', models.CharField(blank=True, db_column='Report', max_length=2000, null=True)),
                ('recorddatetime', models.DateTimeField(blank=True, db_column='RecordDateTime', null=True)),
                ('clientmachine', models.CharField(blank=True, db_column='ClientMachine', max_length=40, null=True)),
                ('crosschecked', models.BooleanField(blank=True, db_column='CrossChecked', null=True)),
            ],
            options={
                'db_table': 'LabResults',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Pathologyreports',
            fields=[
                ('visitno', models.OneToOneField(db_column='VisitNo', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='clinicMas.items')),
                ('examdatetime', models.DateTimeField(blank=True, db_column='ExamDateTime', null=True)),
                ('indication', models.CharField(blank=True, db_column='Indication', max_length=4000, null=True)),
                ('diagnosis', models.CharField(blank=True, db_column='Diagnosis', max_length=4000, null=True)),
                ('macroscopic', models.CharField(blank=True, db_column='Macroscopic', max_length=4000, null=True)),
                ('microscopic', models.CharField(blank=True, db_column='Microscopic', max_length=4000, null=True)),
                ('clientmachine', models.CharField(blank=True, db_column='ClientMachine', max_length=40, null=True)),
                ('recorddatetime', models.DateTimeField(blank=True, db_column='RecordDateTime', null=True)),
            ],
            options={
                'db_table': 'PathologyReports',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Policylimits',
            fields=[
                ('companyno', models.OneToOneField(db_column='CompanyNo', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='clinicMas.insuranceschemes')),
                ('policylimit', models.DecimalField(blank=True, db_column='PolicyLimit', decimal_places=4, max_digits=19, null=True)),
            ],
            options={
                'db_table': 'PolicyLimits',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Radiologyreports',
            fields=[
                ('visitno', models.OneToOneField(db_column='VisitNo', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='clinicMas.items')),
                ('examdatetime', models.DateTimeField(blank=True, db_column='ExamDateTime', null=True)),
                ('indication', models.CharField(blank=True, db_column='Indication', max_length=4000, null=True)),
                ('report', models.CharField(blank=True, db_column='Report', max_length=4000, null=True)),
                ('conclusion', models.CharField(blank=True, db_column='Conclusion', max_length=4000, null=True)),
                ('recorddatetime', models.DateTimeField(blank=True, db_column='RecordDateTime', null=True)),
            ],
            options={
                'db_table': 'RadiologyReports',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Researchpatientsstop',
            fields=[
                ('visitno', models.OneToOneField(db_column='VisitNo', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='clinicMas.researchpatientsenrollment')),
                ('researchenddate', models.DateTimeField(blank=True, db_column='ResearchEndDate', null=True)),
                ('outcome', models.CharField(blank=True, db_column='OutCome', max_length=1000, null=True)),
                ('notes', models.CharField(blank=True, db_column='Notes', max_length=1000, null=True)),
                ('clientmachine', models.CharField(blank=True, db_column='ClientMachine', max_length=41, null=True)),
                ('recorddatetime', models.DateTimeField(blank=True, db_column='RecordDateTime', null=True)),
            ],
            options={
                'db_table': 'ResearchPatientsStop',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Dispenseverificationdetails',
            fields=[
                ('visitno', models.OneToOneField(db_column='VisitNo', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='clinicMas.dispenseverification')),
                ('batchno', models.CharField(db_column='BatchNo', max_length=20)),
                ('quantity', models.IntegerField(blank=True, db_column='Quantity', null=True)),
                ('dispensedate', models.DateTimeField(blank=True, db_column='DispenseDate', null=True)),
                ('expirydate', models.DateTimeField(blank=True, db_column='ExpiryDate', null=True)),
                ('loginid', models.CharField(blank=True, db_column='LoginID', max_length=20, null=True)),
                ('userfullname', models.CharField(blank=True, db_column='UserFullName', max_length=41, null=True)),
                ('clientmachine', models.CharField(blank=True, db_column='ClientMachine', max_length=40, null=True)),
                ('recorddatetime', models.DateTimeField(blank=True, db_column='RecordDateTime', null=True)),
            ],
            options={
                'db_table': 'DispenseVerificationDetails',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Inventoryacknowledges',
            fields=[
                ('transferno', models.OneToOneField(db_column='TransferNo', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='clinicMas.inventorytransferdetailbatches')),
                ('receiveddate', models.DateTimeField(blank=True, db_column='ReceivedDate', null=True)),
                ('clientmachine', models.CharField(blank=True, db_column='ClientMachine', max_length=40, null=True)),
                ('recorddatetime', models.DateTimeField(blank=True, db_column='RecordDateTime', null=True)),
            ],
            options={
                'db_table': 'InventoryAcknowledges',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Labresultapprovals',
            fields=[
                ('specimenno', models.OneToOneField(db_column='SpecimenNo', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='clinicMas.labresults')),
                ('testname', models.CharField(blank=True, db_column='TestName', max_length=200, null=True)),
                ('loginid', models.CharField(blank=True, db_column='LoginID', max_length=20, null=True)),
                ('clientmachine', models.CharField(blank=True, db_column='ClientMachine', max_length=41, null=True)),
                ('recorddatetime', models.DateTimeField(blank=True, db_column='RecordDateTime', null=True)),
                ('approvaldatetime', models.DateTimeField(blank=True, db_column='ApprovalDateTime', null=True)),
                ('userfullname', models.CharField(blank=True, db_column='UserFullName', max_length=41, null=True)),
            ],
            options={
                'db_table': 'LabResultApprovals',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Labresultcrosschecks',
            fields=[
                ('specimenno', models.OneToOneField(db_column='SpecimenNo', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='clinicMas.labresults')),
                ('crosscheckeddatetime', models.DateTimeField(blank=True, db_column='CrossCheckedDateTime', null=True)),
                ('loginid', models.CharField(db_column='LoginID', max_length=20)),
                ('userfullname', models.CharField(db_column='UserFullName', max_length=41)),
                ('clientmachine', models.CharField(db_column='ClientMachine', max_length=40)),
                ('recorddatetime', models.DateTimeField(db_column='RecordDateTime')),
            ],
            options={
                'db_table': 'LabResultCrossChecks',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Labresultsext',
            fields=[
                ('specimenno', models.OneToOneField(db_column='SpecimenNo', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='clinicMas.labresults')),
                ('result', models.CharField(blank=True, db_column='Result', max_length=200, null=True)),
                ('unitmeasure', models.CharField(blank=True, db_column='UnitMeasure', max_length=100, null=True)),
                ('normalrange', models.CharField(blank=True, db_column='NormalRange', max_length=800, null=True)),
                ('report', models.CharField(blank=True, db_column='Report', max_length=2000, null=True)),
            ],
            options={
                'db_table': 'LabResultsEXT',
                'managed': False,
            },
        ),
    ]
